{
  "version": 3,
  "sources": ["../extension.env.js", "../src/extension.ts", "../src/core/CoreService.ts", "../src/core/di/Container.ts", "../src/types/CommandTypes.ts", "../src/core/command/CommandParserService.ts", "../src/core/command/CommandRegistryService.ts", "../src/core/command/CommandExecutorService.ts", "../src/core/utils/LoggerService.ts", "../src/core/command/CommandService.ts", "../src/core/plugin-system/PluginRegistryService.ts", "../src/core/config/ConfigService.ts", "../src/core/llm/LlmService.ts", "../src/core/env/EnvironmentService.ts", "../src/core/utils/SSLBypassService.ts", "../src/core/http/HttpClientService.ts", "../src/core/llm/ApiClient.ts", "../src/core/vscode/VSCodeService.ts", "../src/core/prompt/PromptAssemblerService.ts", "../src/core/prompt/RulesEngineService.ts", "../src/core/domain/SwdpDomainService.ts", "../src/plugins/internal/swdp/SwdpClientService.ts", "../src/core/auth/UserAuthService.ts", "../src/core/workflow/SwdpWorkflowService.ts", "../src/core/plugin-system/llm/PluginNaturalLanguageService.ts", "../src/plugins/internal/swdp/SwdpNaturalLanguageService.ts", "../src/ui/ApeChatViewProvider.ts", "../src/services/ChatHistoryService.ts", "../src/services/ChatService.ts", "../src/ui/ApeTreeDataProvider.ts", "../src/ui/ApeFileExplorerProvider.ts", "../src/ui/ApeSettingsViewProvider.ts"],
  "sourcesContent": ["module.exports = {\r\n  ENV_MODE: 'auto',\r\n  API_ENDPOINTS: {\r\n    NARRANS_API: 'https://api-se-dev.narrans.samsungds.net/v1/chat/completions',\r\n    LLAMA4_API: 'http://apigw-stg.samsungds.net:8000/llama4/1/llama/aiserving/llama-4/maverick/v1/chat/completions',\r\n    LLAMA4_MAVERICK_API: 'http://apigw-stg.samsungds.net:8000/llama4/1/llama/aiserving/llama-4/maverick/v1/chat/completions',\r\n    LLAMA4_SCOUT_API: 'http://apigw-stg.samsungds.net:8000/llama4/1/llama/aiserving/llama-4/scout/v1/chat/completions',\r\n    OPENROUTER_API: 'https://openrouter.ai/api/v1/chat/completions',\r\n    SWDP_API: 'http://swdp-api-dev.samsungds.net/api/v1',\r\n    JIRA_API: 'http://jira-api.samsungds.net/rest/api/latest',\r\n    BITBUCKET_API: 'http://bitbucket-api.samsungds.net/rest/api/latest'\r\n  },\r\n  API_KEYS: {\r\n    OPENROUTER_API_KEY: '',\r\n    NARRANS_API_KEY: '',\r\n    LLAMA4_API_KEY: ''\r\n  },\r\n  DEFAULT_MODEL: 'gemini-2.5-flash',\r\n  AVAILABLE_MODELS: [\r\n    {\r\n      id: 'narrans',\r\n      name: 'NARRANS',\r\n      provider: 'custom',\r\n      apiUrl: 'https://api-se-dev.narrans.samsungds.net/v1/chat/completions',\r\n      contextWindow: 10000,\r\n      maxTokens: 10000,\r\n      temperature: 0\r\n    },\r\n    {\r\n      id: 'llama-4-maverick',\r\n      name: 'Llama 4 Maverick',\r\n      provider: 'custom',\r\n      apiUrl: 'http://apigw-stg.samsungds.net:8000/llama4/1/llama/aiserving/llama-4/maverick/v1/chat/completions',\r\n      contextWindow: 50000,\r\n      maxTokens: 50000,\r\n      temperature: 0\r\n    },\r\n    {\r\n      id: 'llama-4-scout',\r\n      name: 'Llama 4 Scout',\r\n      provider: 'custom',\r\n      apiUrl: 'http://apigw-stg.samsungds.net:8000/llama4/1/llama/aiserving/llama-4/scout/v1/chat/completions',\r\n      contextWindow: 50000,\r\n      maxTokens: 50000,\r\n      temperature: 0\r\n    },\r\n    {\r\n      id: 'gemini-2.5-flash',\r\n      name: 'Google Gemini 2.5 Flash',\r\n      provider: 'openrouter',\r\n      apiUrl: 'https://openrouter.ai/api/v1/chat/completions',\r\n      apiModel: 'google/gemini-2.5-flash-preview',\r\n      contextWindow: 32000,\r\n      maxTokens: 8192,\r\n      temperature: 0.7\r\n    },\r\n    {\r\n      id: 'phi-4-reasoning-plus',\r\n      name: 'Microsoft Phi-4',\r\n      provider: 'openrouter',\r\n      apiUrl: 'https://openrouter.ai/api/v1/chat/completions',\r\n      apiModel: 'microsoft/phi-4-reasoning-plus',\r\n      contextWindow: 32000,\r\n      maxTokens: 8192,\r\n      temperature: 0.7\r\n    },\r\n    {\r\n      id: 'local',\r\n      name: '\uB85C\uCEEC \uC2DC\uBBAC\uB808\uC774\uC158',\r\n      provider: 'local',\r\n      temperature: 0.7\r\n    }\r\n  ],\r\n  USE_MOCK_DATA: false,\r\n  FORCE_SSL_BYPASS: true\r\n};", "/**\n * APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uC9C4\uC785\uC810\n * \n * VS Code \uD655\uC7A5 API\uB97C \uD1B5\uD574 APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8\uC744 \uD65C\uC131\uD654 \uBC0F \uBE44\uD65C\uC131\uD654\uD569\uB2C8\uB2E4.\n * \uBAA8\uB4E0 \uC11C\uBE44\uC2A4 \uBC0F \uD575\uC2EC \uAE30\uB2A5\uC744 \uCD08\uAE30\uD654\uD558\uACE0 \uAD00\uB9AC\uD569\uB2C8\uB2E4.\n */\n\nimport * as vscode from 'vscode';\nimport { ICoreService } from './core/ICoreService';\nimport { CoreService } from './core/CoreService';\nimport { ApeChatViewProvider } from './ui/ApeChatViewProvider';\nimport { ChatService } from './services/ChatService';\nimport { ApeTreeDataProvider } from './ui/ApeTreeDataProvider';\nimport { ApeFileExplorerProvider } from './ui/ApeFileExplorerProvider';\nimport { ApeSettingsViewProvider } from './ui/ApeSettingsViewProvider';\n\n// \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uC778\uC2A4\uD134\uC2A4\nlet coreService: ICoreService;\nlet chatService: ChatService;\nlet chatViewProvider: ApeChatViewProvider;\nlet treeDataProvider: ApeTreeDataProvider;\nlet fileExplorerProvider: ApeFileExplorerProvider;\nlet settingsViewProvider: ApeSettingsViewProvider;\n\n/**\n * \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uD65C\uC131\uD654\n * @param context \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uCEE8\uD14D\uC2A4\uD2B8\n */\nexport async function activate(context: vscode.ExtensionContext): Promise<void> {\n  try {\n    console.log('APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uD65C\uC131\uD654 \uC2DC\uC791');\n    \n    // \uCC44\uD305 \uBDF0 \uD45C\uC2DC\uB97C \uC704\uD55C \uCEE8\uD14D\uC2A4\uD2B8 \uC124\uC815\n    console.log('ape:showChatView \uCEE8\uD14D\uC2A4\uD2B8 \uC124\uC815 - true');\n    await vscode.commands.executeCommand('setContext', 'ape:showChatView', true);\n    \n    // \uD658\uACBD\uC124\uC815 \uB85C\uB4DC\n    await loadEnvironment();\n    \n    // \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\n    coreService = new CoreService(context);\n    await coreService.initialize();\n    \n    // \uCC44\uD305 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\n    chatService = new ChatService(coreService, context);\n    \n    // \uC6F9\uBDF0 \uC81C\uACF5\uC790 \uC0DD\uC131\n    chatViewProvider = new ApeChatViewProvider(\n      context.extensionUri,\n      chatService,\n      coreService\n    );\n    \n    // \uD2B8\uB9AC \uB370\uC774\uD130 \uC81C\uACF5\uC790 \uC0DD\uC131\n    treeDataProvider = new ApeTreeDataProvider(coreService, chatService);\n    \n    // \uD30C\uC77C \uD0D0\uC0C9\uAE30 \uC81C\uACF5\uC790 \uC0DD\uC131\n    fileExplorerProvider = new ApeFileExplorerProvider(context.extensionUri);\n    \n    // \uC124\uC815 \uBDF0 \uC81C\uACF5\uC790 \uC0DD\uC131\n    settingsViewProvider = new ApeSettingsViewProvider(\n      context.extensionUri,\n      coreService\n    );\n    \n    // \uC6F9\uBDF0 \uD328\uB110 \uB4F1\uB85D\n    context.subscriptions.push(\n      vscode.window.registerWebviewViewProvider(\n        'ape.chatView', // package.json\uC5D0 \uC815\uC758\uB41C ID\uC640 \uC77C\uCE58\n        chatViewProvider,\n        {\n          webviewOptions: {\n            retainContextWhenHidden: true\n          }\n        }\n      )\n    );\n    \n    // \uD2B8\uB9AC\uBDF0 \uB4F1\uB85D\n    console.log('\uD2B8\uB9AC\uBDF0 \uB4F1\uB85D \uC2DC\uC791: ape.treeView');\n    const treeView = vscode.window.createTreeView('ape.treeView', { // package.json\uC5D0 \uC815\uC758\uB41C ID\uC640 \uC77C\uCE58\n      treeDataProvider: treeDataProvider,\n      showCollapseAll: true\n    });\n    console.log('\uD2B8\uB9AC\uBDF0 \uB4F1\uB85D \uC644\uB8CC: ape.treeView');\n    \n    // \uD2B8\uB9AC\uBDF0 \uBCC0\uACBD \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uCD94\uAC00\n    treeView.onDidChangeVisibility(e => {\n      console.log(`\uD2B8\uB9AC\uBDF0 \uAC00\uC2DC\uC131 \uBCC0\uACBD: \uBCF4\uC784=${e.visible}`);\n    });\n    \n    context.subscriptions.push(treeView);\n    \n    // \uC124\uC815 \uBDF0 \uB4F1\uB85D\n    context.subscriptions.push(\n      vscode.window.registerWebviewViewProvider(\n        'ape.settingsView', // package.json\uC5D0 \uC815\uC758\uB41C ID\uC640 \uC77C\uCE58\n        settingsViewProvider\n      )\n    );\n    \n    // \uD30C\uC77C \uD0D0\uC0C9\uAE30 \uBDF0 \uB4F1\uB85D\n    context.subscriptions.push(\n      vscode.window.registerWebviewViewProvider(\n        'ape.fileExplorerView', // package.json\uC5D0 \uC815\uC758\uB41C ID\uC640 \uC77C\uCE58\n        fileExplorerProvider\n      )\n    );\n    \n    // \uBA85\uB839 \uB4F1\uB85D\n    registerCommands(context);\n    \n    console.log('APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uD65C\uC131\uD654 \uC644\uB8CC');\n  } catch (error) {\n    console.error('APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uD65C\uC131\uD654 \uC624\uB958:', error);\n    \n    // \uC0AC\uC6A9\uC790\uC5D0\uAC8C \uC624\uB958 \uC54C\uB9BC\n    vscode.window.showErrorMessage(\n      `APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8\uC744 \uD65C\uC131\uD654\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${error instanceof Error ? error.message : String(error)}`\n    );\n  }\n}\n\n/**\n * \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uBE44\uD65C\uC131\uD654\n */\nexport function deactivate(): void {\n  try {\n    console.log('APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uBE44\uD65C\uC131\uD654 \uC2DC\uC791');\n    \n    // \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uD574\uC81C\n    if (coreService) {\n      coreService.dispose();\n    }\n    \n    console.log('APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uBE44\uD65C\uC131\uD654 \uC644\uB8CC');\n  } catch (error) {\n    console.error('APE \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uBE44\uD65C\uC131\uD654 \uC624\uB958:', error);\n  }\n}\n\n/**\n * \uD658\uACBD\uC124\uC815 \uB85C\uB4DC\n */\nasync function loadEnvironment(): Promise<void> {\n  try {\n    // \uD658\uACBD \uBCC0\uC218 \uC124\uC815 \uD30C\uC77C \uB85C\uB4DC \uC2DC\uB3C4\n    try {\n      const envLoader = require('../config/env.loader.js');\n      if (envLoader && typeof envLoader.loadEnvironment === 'function') {\n        await envLoader.loadEnvironment();\n        console.log('\uD658\uACBD\uC124\uC815 \uB85C\uB4DC \uC644\uB8CC');\n      } else {\n        console.warn('\uD658\uACBD\uC124\uC815 \uB85C\uB354 \uD568\uC218\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4');\n      }\n    } catch (error) {\n      console.warn('\uD658\uACBD\uC124\uC815 \uB85C\uB4DC \uC2E4\uD328:', error);\n    }\n  } catch (error) {\n    console.error('\uD658\uACBD\uC124\uC815 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n  }\n}\n\n/**\n * \uBA85\uB839 \uB4F1\uB85D\n * @param context \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uCEE8\uD14D\uC2A4\uD2B8\n */\nfunction registerCommands(context: vscode.ExtensionContext): void {\n  // \uD2B8\uB9AC\uBDF0 \uC0C8\uB85C\uACE0\uCE68 \uBA85\uB839\n  context.subscriptions.push(\n    vscode.commands.registerCommand('ape.refreshTreeView', () => {\n      if (treeDataProvider) {\n        treeDataProvider.refresh();\n      }\n    })\n  );\n  \n  // \uCC44\uD305 \uBDF0 \uC5F4\uAE30 \uBA85\uB839 \uCD94\uAC00\n  context.subscriptions.push(\n    vscode.commands.registerCommand('ape.openChat', async () => {\n      console.log('\uCC44\uD305 \uBDF0 \uC5F4\uAE30 \uBA85\uB839 \uC2E4\uD589');\n      // \uCC44\uD305 \uBDF0 \uD45C\uC2DC \uCEE8\uD14D\uC2A4\uD2B8 \uC124\uC815\n      await vscode.commands.executeCommand('setContext', 'ape:showChatView', true);\n      // \uC0AC\uC774\uB4DC\uBC14 \uD45C\uC2DC\n      await vscode.commands.executeCommand('workbench.view.extension.ape-sidebar');\n      // \uCC44\uD305 \uBDF0\uB85C \uD3EC\uCEE4\uC2A4\n      await vscode.commands.executeCommand('ape.chatView.focus');\n    })\n  );\n  \n  // \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uBA85\uB839 \uB4F1\uB85D\n  if (coreService && coreService.commandRegistry) {\n    const commands = coreService.commandRegistry.getCommandMap();\n    \n    for (const [id, handler] of commands.entries()) {\n      context.subscriptions.push(\n        vscode.commands.registerCommand(`ape.${id}`, handler)\n      );\n    }\n  }\n}", "/**\r\n * APE \uCF54\uC5B4 \uC11C\uBE44\uC2A4\r\n * \r\n * \uBAA8\uB4E0 \uD575\uC2EC \uC11C\uBE44\uC2A4\uB97C \uD1B5\uD569\uD558\uACE0 \uAD00\uB9AC\uD558\uB294 \uC911\uC559 \uC11C\uBE44\uC2A4\r\n * \uC758\uC874\uC131 \uC8FC\uC785 \uD328\uD134\uC73C\uB85C \uAD6C\uD604\uB418\uC5B4 \uACB0\uD569\uB3C4 \uAC10\uC18C \uBC0F \uD14C\uC2A4\uD2B8 \uC6A9\uC774\uC131 \uD5A5\uC0C1\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { EventEmitter } from 'events';\r\n\r\n\r\nimport { ICoreService, MessageProcessOptions, MessageProcessResult } from './ICoreService';\r\n\r\n\r\nimport { container } from './di/Container';\r\n\r\n\r\nimport { CommandParserService } from './command/CommandParserService';\r\nimport { CommandRegistryService } from './command/CommandRegistryService';\r\nimport { CommandExecutorService } from './command/CommandExecutorService';\r\nimport { CommandService } from './command/CommandService';\r\n\r\n\r\nimport { ConfigService } from './config/ConfigService';\r\n\r\n\r\nimport { PluginRegistryService } from './plugin-system/PluginRegistryService';\r\n\r\n\r\nimport { LlmService } from './llm/LlmService';\r\n\r\n\r\nimport { VSCodeService } from './vscode/VSCodeService';\r\n\r\n\r\nimport { HttpClientService } from './http/HttpClientService';\r\n\r\n\r\nimport { PromptAssemblerService } from './prompt/PromptAssemblerService';\r\nimport { RulesEngineService } from './prompt/RulesEngineService';\r\n\r\n\r\nimport { LoggerService } from './utils/LoggerService';\r\n\r\n\r\nimport { Command } from '../types/CommandTypes';\r\nimport { ChatMessage, MessageRole } from '../types/LlmTypes';\r\n\r\n\r\nimport { SwdpDomainService } from './domain/SwdpDomainService';\r\nimport { SwdpWorkflowService } from './workflow/SwdpWorkflowService';\r\nimport { UserAuthService } from './auth/UserAuthService';\r\nimport { SwdpNaturalLanguageService } from '../plugins/internal/swdp/SwdpNaturalLanguageService';\r\n\r\n/**\r\n * APE \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\r\n * \uBAA8\uB4E0 \uD575\uC2EC \uC11C\uBE44\uC2A4 \uD1B5\uD569 \uBC0F \uAD00\uB9AC\r\n */\r\nexport class CoreService extends EventEmitter implements ICoreService {\r\n  \r\n  private _isEnabled: boolean = false;\r\n  \r\n  \r\n  private readonly _configService: ConfigService;\r\n  private readonly _commandParser: CommandParserService;\r\n  private readonly _commandRegistry: CommandRegistryService;\r\n  private readonly _commandExecutor: CommandExecutorService;\r\n  private readonly _commandService: CommandService;\r\n  private readonly _pluginRegistry: PluginRegistryService;\r\n  private readonly _llmService: LlmService;\r\n  private readonly _vsCodeService: VSCodeService;\r\n  private readonly _httpService: HttpClientService;\r\n  private readonly _promptAssembler: PromptAssemblerService;\r\n  private readonly _rulesEngine: RulesEngineService;\r\n  private readonly _logger: LoggerService;\r\n  private readonly _userAuthService: UserAuthService;\r\n  private readonly _swdpDomainService: SwdpDomainService;\r\n  private readonly _swdpWorkflowService: SwdpWorkflowService;\r\n  private readonly _swdpNaturalLanguageService: SwdpNaturalLanguageService;\r\n  \r\n  /**\r\n   * CoreService \uC0DD\uC131\uC790\r\n   * \uBAA8\uB4E0 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\r\n   * @param context VS Code \uD655\uC7A5 \uCEE8\uD14D\uC2A4\uD2B8\r\n   */\r\n  constructor(private context: vscode.ExtensionContext) {\r\n    super();\r\n    \r\n    \r\n    this._logger = new LoggerService();\r\n    \r\n    // \uC758\uC874\uC131 \uC8FC\uC785 \uBC29\uC2DD\uC73C\uB85C ConfigService \uC0DD\uC131\r\n    this._configService = ConfigService.createInstance(context);\r\n    \r\n    this._commandParser = new CommandParserService();\r\n    this._httpService = new HttpClientService();\r\n    this._vsCodeService = new VSCodeService(context);\r\n    \r\n    // \uC758\uC874\uC131 \uC8FC\uC785 \uBC29\uC2DD\uC73C\uB85C UserAuthService \uC0DD\uC131\r\n    this._userAuthService = UserAuthService.createInstance(this._configService);\r\n    \r\n    this._pluginRegistry = new PluginRegistryService(this._configService);\r\n    \r\n    \r\n    this._commandRegistry = new CommandRegistryService(this._pluginRegistry);\r\n    this._commandExecutor = new CommandExecutorService(\r\n      this._commandRegistry,\r\n      this._pluginRegistry\r\n    );\r\n    \r\n    \r\n    this._commandService = new CommandService(this._configService, this);\r\n    \r\n    \r\n    this._llmService = new LlmService();\r\n    \r\n    \r\n    this._rulesEngine = new RulesEngineService();\r\n    this._promptAssembler = new PromptAssemblerService(this._rulesEngine);\r\n    \r\n    \r\n    // \uC758\uC874\uC131 \uC8FC\uC785 \uBC29\uC2DD\uC73C\uB85C SwdpDomainService \uC0DD\uC131\r\n    this._swdpDomainService = SwdpDomainService.createInstance(\r\n      this._configService,\r\n      this._userAuthService\r\n    );\r\n    \r\n    // \uC758\uC874\uC131 \uC8FC\uC785 \uBC29\uC2DD\uC73C\uB85C SwdpWorkflowService \uC0DD\uC131\r\n    this._swdpWorkflowService = SwdpWorkflowService.createInstance(\r\n      this._configService,\r\n      this._userAuthService,\r\n      this._swdpDomainService\r\n    );\r\n    \r\n    // \uC758\uC874\uC131 \uC8FC\uC785 \uBC29\uC2DD\uC73C\uB85C SwdpNaturalLanguageService \uC0DD\uC131\r\n    this._swdpNaturalLanguageService = new SwdpNaturalLanguageService(\r\n      this._swdpDomainService,\r\n      this._swdpWorkflowService,\r\n      this._configService,\r\n      this._userAuthService\r\n    );\r\n    \r\n    this.registerServices();\r\n  }\r\n  \r\n  /**\r\n   * \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uC778\uC2A4\uD134\uC2A4 \uC0DD\uC131 \uD329\uD1A0\uB9AC \uD568\uC218\r\n   * @param context VS Code \uD655\uC7A5 \uCEE8\uD14D\uC2A4\uD2B8\r\n   * @returns \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uC778\uC2A4\uD134\uC2A4\r\n   */\r\n  public static createInstance(context: vscode.ExtensionContext): ICoreService {\r\n    return new CoreService(context);\r\n  }\r\n  \r\n  /**\r\n   * \uC11C\uBE44\uC2A4 DI \uCEE8\uD14C\uC774\uB108\uC5D0 \uB4F1\uB85D\r\n   */\r\n  private registerServices(): void {\r\n    container.register('coreService', this);\r\n    container.register('configService', this._configService);\r\n    container.register('commandParser', this._commandParser);\r\n    container.register('commandRegistry', this._commandRegistry);\r\n    container.register('commandExecutor', this._commandExecutor);\r\n    container.register('commandService', this._commandService);\r\n    container.register('pluginRegistry', this._pluginRegistry);\r\n    container.register('llmService', this._llmService);\r\n    container.register('vsCodeService', this._vsCodeService);\r\n    container.register('httpService', this._httpService);\r\n    container.register('promptAssembler', this._promptAssembler);\r\n    container.register('rulesEngine', this._rulesEngine);\r\n    container.register('logger', this._logger);\r\n    container.register('userAuthService', this._userAuthService);\r\n    container.register('swdpDomainService', this._swdpDomainService);\r\n    container.register('swdpWorkflowService', this._swdpWorkflowService);\r\n    container.register('swdpNaturalLanguageService', this._swdpNaturalLanguageService);\r\n  }\r\n  \r\n  /**\r\n   * \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\r\n   * \uBAA8\uB4E0 \uD558\uC704 \uC11C\uBE44\uC2A4 \uBC0F \uD50C\uB7EC\uADF8\uC778 \uCD08\uAE30\uD654\r\n   * @returns \uCD08\uAE30\uD654 \uC131\uACF5 \uC5EC\uBD80\r\n   */\r\n  public async initialize(): Promise<boolean> {\r\n    try {\r\n      this._logger.info('APE \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC2DC\uC791');\r\n      \r\n      \r\n      try {\r\n        this._logger.info('\uC124\uC815 \uB85C\uB4DC \uC2DC\uC791');\r\n        const loadSuccess = await this._configService.load(true);\r\n        if (!loadSuccess) {\r\n          this._logger.warn('\uC124\uC815 \uB85C\uB4DC \uC2E4\uD328, \uAE30\uBCF8 \uC124\uC815 \uC0AC\uC6A9');\r\n        } else {\r\n          this._logger.info('\uC124\uC815 \uB85C\uB4DC \uC131\uACF5');\r\n        }\r\n        \r\n        \r\n        try {\r\n          if (typeof this._configService.validate === 'function') {\r\n            const configValid = await this._configService.validate(this._configService.getCoreConfig(), true);\r\n            if (!configValid) {\r\n              this._logger.error('\uC124\uC815 \uAC80\uC99D \uC2E4\uD328');\r\n              this._logger.info('\uC124\uC815 \uC624\uB958 \uBB34\uC2DC\uD558\uACE0 \uC9C4\uD589 (\uAC1C\uBC1C \uBAA8\uB4DC)');\r\n            } else {\r\n              this._logger.info('\uC124\uC815 \uAC80\uC99D \uC131\uACF5');\r\n            }\r\n          } else {\r\n            this._logger.warn('\uC124\uC815 \uAC80\uC99D \uBA54\uC11C\uB4DC\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4. \uAC80\uC99D \uB2E8\uACC4 \uAC74\uB108\uB701\uB2C8\uB2E4.');\r\n          }\r\n        } catch (validationError) {\r\n          this._logger.error('\uC124\uC815 \uAC80\uC99D \uBA54\uC11C\uB4DC \uD638\uCD9C \uC911 \uC624\uB958:', validationError);\r\n          this._logger.info('\uC124\uC815 \uAC80\uC99D \uC624\uB958 \uBB34\uC2DC\uD558\uACE0 \uC9C4\uD589 (\uAC1C\uBC1C \uBAA8\uB4DC)');\r\n        }\r\n      } catch (configError) {\r\n        this._logger.error('\uC124\uC815 \uAC80\uC99D \uC911 \uC624\uB958:', configError);\r\n        this._logger.error('\uC0C1\uC138 \uC624\uB958 \uC815\uBCF4:', JSON.stringify(configError, Object.getOwnPropertyNames(configError)));\r\n        \r\n        \r\n        this._logger.info('\uC124\uC815 \uC624\uB958 \uBB34\uC2DC\uD558\uACE0 \uC9C4\uD589...');\r\n      }\r\n      \r\n      \r\n      try {\r\n        this._logger.info('SSL \uC6B0\uD68C \uC124\uC815 \uC801\uC6A9 \uC2DC\uC791');\r\n        const coreConfig = this._configService.getCoreConfig();\r\n        const sslBypassEnabled = coreConfig.sslBypass || this._configService.get('core.sslBypass', false);\r\n        this._httpService.setSSLBypass(sslBypassEnabled);\r\n        this._logger.info(`SSL \uC6B0\uD68C \uC124\uC815 \uC801\uC6A9 \uC644\uB8CC: ${sslBypassEnabled ? '\uC0AC\uC6A9' : '\uC0AC\uC6A9 \uC548 \uD568'}`);\r\n      } catch (sslError) {\r\n        this._logger.error('SSL \uC6B0\uD68C \uC124\uC815 \uC801\uC6A9 \uC911 \uC624\uB958:', sslError);\r\n      }\r\n      \r\n      \r\n      try {\r\n        this._logger.info('\uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2DC\uC791');\r\n        const pluginCount = await this.registerInternalPlugins();\r\n        this._logger.info(`${pluginCount}\uAC1C\uC758 \uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC644\uB8CC`);\r\n      } catch (pluginError) {\r\n        this._logger.error('\uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC911 \uC624\uB958:', pluginError);\r\n        this._logger.error('\uC0C1\uC138 \uC624\uB958 \uC815\uBCF4:', JSON.stringify(pluginError, Object.getOwnPropertyNames(pluginError)));\r\n        \r\n        \r\n        this._logger.info('\uD50C\uB7EC\uADF8\uC778 \uC624\uB958 \uBB34\uC2DC\uD558\uACE0 \uC9C4\uD589...');\r\n      }\r\n      \r\n      \r\n      try {\r\n        this._logger.info('\uD50C\uB7EC\uADF8\uC778 \uCD08\uAE30\uD654 \uC2DC\uC791');\r\n        await this._pluginRegistry.initialize();\r\n        this._logger.info('\uD50C\uB7EC\uADF8\uC778 \uCD08\uAE30\uD654 \uC644\uB8CC');\r\n      } catch (initError) {\r\n        this._logger.error('\uD50C\uB7EC\uADF8\uC778 \uCD08\uAE30\uD654 \uC911 \uC624\uB958:', initError);\r\n        this._logger.error('\uC0C1\uC138 \uC624\uB958 \uC815\uBCF4:', JSON.stringify(initError, Object.getOwnPropertyNames(initError)));\r\n        \r\n        \r\n        this._logger.info('\uCD08\uAE30\uD654 \uC624\uB958 \uBB34\uC2DC\uD558\uACE0 \uC9C4\uD589...');\r\n      }\r\n      \r\n      \r\n      try {\r\n        this._logger.info('\uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC2DC\uC791');\r\n        // \uBAA8\uB4E0 \uC11C\uBE44\uC2A4\uB294 \uC0DD\uC131\uC790\uC5D0\uC11C \uC9C1\uC811 \uC8FC\uC785\uB418\uBBC0\uB85C \uC774\uBCA4\uD2B8 \uBC1C\uC0DD\uC740 \uB354 \uC774\uC0C1 \uD544\uC694\uD558\uC9C0 \uC54A\uC74C\r\n        // this.emit('core-service-ready', this);\r\n        \r\n        await this._commandService.initialize();\r\n        this._logger.info('\uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC644\uB8CC');\r\n      } catch (commandServiceError) {\r\n        const errorMessage = commandServiceError instanceof Error ? commandServiceError.message : \r\n                         (typeof commandServiceError === 'string' ? commandServiceError : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958');\r\n        this._logger.error('\uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC911 \uC624\uB958:', errorMessage);\r\n        \r\n        \r\n        this._logger.info('\uBA85\uB839\uC5B4 \uC11C\uBE44\uC2A4 \uC624\uB958 \uBB34\uC2DC\uD558\uACE0 \uC9C4\uD589...');\r\n      }\r\n      \r\n      \r\n      this._isEnabled = true;\r\n      this.emit('core-initialized');\r\n      this._logger.info('APE \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC131\uACF5');\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      this._logger.error('APE \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC2E4\uD328:', error);\r\n      this._logger.error('\uC0C1\uC138 \uC624\uB958 \uC815\uBCF4:', JSON.stringify(error, Object.getOwnPropertyNames(error)));\r\n      console.error('APE \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC2E4\uD328 \uC0C1\uC138 \uC815\uBCF4:', error);\r\n      \r\n      \r\n      this._logger.info('\uC624\uB958 \uBC1C\uC0DD\uC73C\uB85C \uC81C\uD55C \uBAA8\uB4DC\uB85C \uC804\uD658\uD569\uB2C8\uB2E4.');\r\n      this._isEnabled = true; \r\n      return true; \r\n    }\r\n  }\r\n  \r\n  /**\r\n   * \uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D\r\n   * @returns \uB4F1\uB85D\uB41C \uD50C\uB7EC\uADF8\uC778 \uC218\r\n   */\r\n  private async registerInternalPlugins(): Promise<number> {\r\n    try {\r\n      this._logger.info('\uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2DC\uC791');\r\n      \r\n      \r\n      let count = 0;\r\n      \r\n      \r\n      const internalPluginsPath = '../plugins/internal';\r\n      this._logger.info(`\uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBAA8\uB4C8 \uACBD\uB85C: ${internalPluginsPath}`);\r\n      \r\n      try {\r\n        const internalPlugins = await import(internalPluginsPath);\r\n        this._logger.info('\uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBAA8\uB4C8 \uB85C\uB529 \uC131\uACF5:', Object.keys(internalPlugins));\r\n        \r\n        \r\n        try {\r\n          this._logger.info('Git \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2DC\uB3C4 \uC911...');\r\n          const GitPluginService = internalPlugins.GitPluginService;\r\n          if (!GitPluginService) {\r\n            this._logger.error('GitPluginService\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4');\r\n          } else {\r\n            const gitPlugin = new GitPluginService(this._configService, this._llmService);\r\n            if (this._pluginRegistry.registerPlugin(gitPlugin, 'internal')) {\r\n              count++;\r\n              this._logger.info(`Git \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC131\uACF5: ${gitPlugin.name} (${gitPlugin.id})`);\r\n            }\r\n          }\r\n        } catch (gitError) {\r\n          this._logger.error('Git \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2E4\uD328:', gitError);\r\n        }\r\n        \r\n        \r\n        try {\r\n          this._logger.info('Jira \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2DC\uB3C4 \uC911...');\r\n          const JiraPluginService = internalPlugins.JiraPluginService;\r\n          if (!JiraPluginService) {\r\n            this._logger.error('JiraPluginService\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4');\r\n          } else {\r\n            const jiraPlugin = new JiraPluginService(this._configService);\r\n            if (this._pluginRegistry.registerPlugin(jiraPlugin, 'internal')) {\r\n              count++;\r\n              this._logger.info(`Jira \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC131\uACF5: ${jiraPlugin.name} (${jiraPlugin.id})`);\r\n            }\r\n          }\r\n        } catch (jiraError) {\r\n          this._logger.error('Jira \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2E4\uD328:', jiraError);\r\n        }\r\n        \r\n        \r\n        try {\r\n          this._logger.info('SWDP \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2DC\uB3C4 \uC911...');\r\n          const SwdpPluginService = internalPlugins.SwdpPluginService;\r\n          if (!SwdpPluginService) {\r\n            this._logger.error('SwdpPluginService\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4');\r\n          } else {\r\n            const swdpPlugin = new SwdpPluginService(\r\n              this._configService, \r\n              this._swdpDomainService, \r\n              this._swdpWorkflowService,\r\n              this._swdpNaturalLanguageService\r\n            );\r\n            if (this._pluginRegistry.registerPlugin(swdpPlugin, 'internal')) {\r\n              count++;\r\n              this._logger.info(`SWDP \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC131\uACF5: ${swdpPlugin.name} (${swdpPlugin.id})`);\r\n            }\r\n          }\r\n        } catch (swdpError) {\r\n          this._logger.error('SWDP \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2E4\uD328:', swdpError);\r\n        }\r\n        \r\n        \r\n        try {\r\n          this._logger.info('Pocket \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2DC\uB3C4 \uC911...');\r\n          const PocketPluginService = internalPlugins.PocketPluginService;\r\n          if (!PocketPluginService) {\r\n            this._logger.error('PocketPluginService\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4');\r\n          } else {\r\n            const pocketPlugin = new PocketPluginService(\r\n              this._configService,\r\n              this._llmService\r\n            );\r\n            if (this._pluginRegistry.registerPlugin(pocketPlugin, 'internal')) {\r\n              count++;\r\n              this._logger.info(`Pocket \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC131\uACF5: ${pocketPlugin.name} (${pocketPlugin.id})`);\r\n            }\r\n          }\r\n        } catch (pocketError) {\r\n          this._logger.error('Pocket \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2E4\uD328:', pocketError);\r\n        }\r\n        \r\n        this._logger.info(`\uCD1D ${count}\uAC1C\uC758 \uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D\uB428`);\r\n        return count;\r\n        \r\n      } catch (importError) {\r\n        this._logger.error('\uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBAA8\uB4C8 \uB85C\uB529 \uC2E4\uD328:', importError);\r\n        this._logger.error('\uC0C1\uC138 \uC624\uB958 \uC815\uBCF4:', JSON.stringify(importError, Object.getOwnPropertyNames(importError)));\r\n        \r\n        \r\n        this._logger.info('\uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uC5C6\uC774 \uC9C4\uD589\uD569\uB2C8\uB2E4.');\r\n        return 0;\r\n      }\r\n    } catch (error) {\r\n      this._logger.error('\uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\r\n      this._logger.error('\uC0C1\uC138 \uC624\uB958 \uC815\uBCF4:', JSON.stringify(error, Object.getOwnPropertyNames(error)));\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * \uC0AC\uC6A9\uC790 \uBA54\uC2DC\uC9C0 \uCC98\uB9AC\r\n   * \uBA85\uB839\uC5B4 \uD30C\uC2F1 \uBC0F \uC2E4\uD589\r\n   * @param text \uC0AC\uC6A9\uC790 \uC785\uB825 \uD14D\uC2A4\uD2B8\r\n   * @param options \uCC98\uB9AC \uC635\uC158 (\uC2A4\uD2B8\uB9AC\uBC0D \uBC0F \uB300\uD654 \uB9E5\uB77D \uB4F1)\r\n   * @returns \uCC98\uB9AC \uACB0\uACFC\r\n   */\r\n  public async processMessage(text: string, options?: MessageProcessOptions): Promise<MessageProcessResult> {\r\n    try {\r\n      this._logger.info(`\uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC2DC\uC791: \"${text}\"`);\r\n      \r\n      \r\n      const command = this._commandParser.parse(text);\r\n      \r\n      \r\n      if (command) {\r\n        this._logger.info(`\uBA85\uB839\uC5B4 \uAC10\uC9C0\uB428: ${command.prefix}${command.agentId}:${command.command}`);\r\n        \r\n        try {\r\n          const result = await this.executeCommand(command);\r\n          this._logger.info('\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC131\uACF5');\r\n          return result;\r\n        } catch (cmdError) {\r\n          this._logger.error(`\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC2E4\uD328: ${cmdError}`);\r\n          \r\n          \r\n          const errorMessage = cmdError instanceof Error ? cmdError.message : String(cmdError);\r\n          return {\r\n            content: `# \uBA85\uB839\uC5B4 \uC2E4\uD589 \uC624\uB958\\n\\n\\`${command.prefix}${command.agentId}:${command.command}\\`\\n\\n\uC624\uB958: ${errorMessage}`,\r\n            error: true\r\n          };\r\n        }\r\n      }\r\n      \r\n      \r\n      if (text.trim().toLowerCase() === 'debug') {\r\n        return {\r\n          content: '# \uB514\uBC84\uADF8 \uBAA8\uB4DC \uD65C\uC131\uD654\\n\\n' +\r\n                   '\uD604\uC7AC \uC2DC\uAC04: ' + new Date().toLocaleString() + '\\n\\n' +\r\n                   `\uB4F1\uB85D\uB41C \uBA85\uB839\uC5B4: ${this._commandRegistry.getAllCommandUsages().length}\uAC1C\\n` +\r\n                   `\uB4F1\uB85D\uB41C \uD50C\uB7EC\uADF8\uC778: ${this._pluginRegistry.getEnabledPlugins().length}\uAC1C`\r\n        };\r\n      }\r\n      \r\n      \r\n      this._logger.info(`\uC77C\uBC18 \uD14D\uC2A4\uD2B8\uB85C \uCC98\uB9AC: LLM \uC751\uB2F5 \uC0DD\uC131 (\uC2A4\uD2B8\uB9AC\uBC0D: ${options?.stream ? '\uCF1C\uC9D0' : '\uAEBC\uC9D0'})`);\r\n      \r\n      \r\n      if (options?.embedDevMode) {\r\n        this._logger.info(`\uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC \uD65C\uC131\uD654: \uACE0\uAE09 \uD504\uB86C\uD504\uD2B8 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1 \uBC0F \uB0B4\uBD80 \uB370\uC774\uD130 \uBD84\uC11D \uC801\uC6A9`);\r\n      }\r\n      \r\n      \r\n      if (options?.conversationHistory) {\r\n        this._logger.info(`\uB300\uD654 \uB9E5\uB77D \uD3EC\uD568: ${options.conversationHistory.length}\uAC1C\uC758 \uBA54\uC2DC\uC9C0`);\r\n      }\r\n      \r\n      if (options?.stream && options?.onUpdate) {\r\n        \r\n        return await this.generateStreamingResponse(text, options.onUpdate, options.conversationHistory, options);\r\n      } else {\r\n        \r\n        return await this.generateResponse(text, options?.conversationHistory, options);\r\n      }\r\n    } catch (error) {\r\n      this._logger.error('\uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\r\n      return {\r\n        content: `\uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`,\r\n        error: true\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * \uC2A4\uD2B8\uB9AC\uBC0D \uC751\uB2F5 \uC0DD\uC131\r\n   * @param text \uC0AC\uC6A9\uC790 \uC785\uB825 \uD14D\uC2A4\uD2B8\r\n   * @param onUpdate \uC2A4\uD2B8\uB9AC\uBC0D \uC5C5\uB370\uC774\uD2B8 \uCF5C\uBC31\r\n   * @param conversationHistory \uB300\uD654 \uB9E5\uB77D (\uC120\uD0DD \uC0AC\uD56D)\r\n   * @returns \uC0DD\uC131\uB41C \uC751\uB2F5\r\n   */\r\n  private async generateStreamingResponse(\r\n    text: string, \r\n    onUpdate: (chunk: string) => void,\r\n    conversationHistory?: ChatMessage[],\r\n    options?: MessageProcessOptions\r\n  ): Promise<MessageProcessResult> {\r\n    try {\r\n      \r\n      const promptData = await this._promptAssembler.assemblePrompt(text);\r\n      \r\n      \r\n      if (conversationHistory && conversationHistory.length > 0) {\r\n        \r\n        const systemMessages = promptData.messages.filter(m => m.role === 'system');\r\n        \r\n        \r\n        const typedContextMessages = this.ensureChatMessageArray(conversationHistory);\r\n        \r\n        \r\n        const hasCurrentUserMessage = typedContextMessages.some(\r\n          m => m.role === 'user' && m.content === text\r\n        );\r\n        \r\n        if (!hasCurrentUserMessage) {\r\n          typedContextMessages.push(this.createChatMessage('user', text));\r\n        }\r\n        \r\n        \r\n        promptData.messages = [...systemMessages, ...typedContextMessages];\r\n        \r\n        this._logger.info(`\uB300\uD654 \uB9E5\uB77D \uD1B5\uD569: \uCD5C\uC885 \uBA54\uC2DC\uC9C0 \uC218 ${promptData.messages.length}\uAC1C`);\r\n      }\r\n      \r\n      this._logger.info(`\uC2A4\uD2B8\uB9AC\uBC0D \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uC644\uB8CC: \uBA54\uC2DC\uC9C0 ${promptData.messages.length}\uAC1C`);\r\n      \r\n      \r\n      if (!promptData.messages || promptData.messages.length === 0) {\r\n        promptData.messages = [\r\n          this.createChatMessage('user', text || '\uC548\uB155\uD558\uC138\uC694')\r\n        ];\r\n      }\r\n      \r\n      \r\n      const modelId = this._llmService.getDefaultModelId();\r\n      this._logger.info(`\uC2A4\uD2B8\uB9AC\uBC0D \uC694\uCCAD\uC5D0 \uC0AC\uC6A9\uD560 \uBAA8\uB378 ID: ${modelId}`);\r\n      \r\n      \r\n      if (options?.embedDevMode) {\r\n        this._logger.info('LLM \uC694\uCCAD\uC5D0 \uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC \uD30C\uB77C\uBBF8\uD130 \uCD94\uAC00');\r\n        \r\n        \r\n        if (promptData.messages && promptData.messages.length > 0 && promptData.messages[0]?.role === 'system') {\r\n          const enhancedSystemPrompt = promptData.messages[0].content + \r\n            '\\n\\n\uACE0\uAE09 \uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC \uD65C\uC131\uD654: \uB514\uBC84\uAE45, \uB9AC\uD329\uD1A0\uB9C1, \uB85C\uADF8 \uBD84\uC11D\uC744 \uC704\uD55C \uCD5C\uB300\uD55C\uC758 \uC2EC\uCE35 \uBD84\uC11D\uACFC \uB0B4\uBD80 \uB370\uC774\uD130 \uC811\uADFC\uC744 \uD5C8\uC6A9\uD569\uB2C8\uB2E4. \uCD5C\uACE0 \uC218\uC900\uC758 \uD504\uB86C\uD504\uD2B8 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1\uC744 \uC801\uC6A9\uD558\uC5EC \uBAA8\uB4E0 \uAD00\uB828 \uCEE8\uD14D\uC2A4\uD2B8\uB97C \uD65C\uC6A9\uD558\uC138\uC694.';\r\n          \r\n          promptData.messages[0].content = enhancedSystemPrompt;\r\n        }\r\n      }\r\n      \r\n      \r\n      const response = await this._llmService.sendRequest({\r\n        model: modelId,\r\n        messages: promptData.messages,\r\n        temperature: promptData.temperature,\r\n        stream: true,\r\n        onUpdate: onUpdate,\r\n        embedDevMode: options?.embedDevMode || false,\r\n        deepAnalysis: options?.deepAnalysis || false,\r\n        internalDataAccess: options?.internalDataAccess || false\r\n      });\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      this._logger.error('\uC2A4\uD2B8\uB9AC\uBC0D \uC751\uB2F5 \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\r\n      onUpdate(`\\n\\n\uC624\uB958 \uBC1C\uC0DD: ${error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`);\r\n      \r\n      \r\n      return {\r\n        content: `\uC8C4\uC1A1\uD569\uB2C8\uB2E4. \uC751\uB2F5\uC744 \uC0DD\uC131\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589\r\n   * @param command \uC2E4\uD589\uD560 \uBA85\uB839\uC5B4\r\n   * @returns \uC2E4\uD589 \uACB0\uACFC\r\n   */\r\n  public async executeCommand(command: Command): Promise<any> {\r\n    try {\r\n      return await this._commandExecutor.execute(command);\r\n    } catch (error) {\r\n      this._logger.error(`\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC911 \uC624\uB958 \uBC1C\uC0DD (${command.prefix}${command.agentId}:${command.command}):`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * LLM \uC751\uB2F5 \uC0DD\uC131\r\n   * @param text \uC0AC\uC6A9\uC790 \uC785\uB825 \uD14D\uC2A4\uD2B8\r\n   * @param conversationHistory \uB300\uD654 \uB9E5\uB77D (\uC120\uD0DD \uC0AC\uD56D)\r\n   * @returns \uC0DD\uC131\uB41C \uC751\uB2F5\r\n   */\r\n  private async generateResponse(\r\n    text: string, \r\n    conversationHistory?: ChatMessage[],\r\n    options?: MessageProcessOptions\r\n  ): Promise<MessageProcessResult> {\r\n    try {\r\n      \r\n      const promptData = await this._promptAssembler.assemblePrompt(text);\r\n      \r\n      \r\n      if (conversationHistory && conversationHistory.length > 0) {\r\n        \r\n        const systemMessages = promptData.messages.filter(m => m.role === 'system');\r\n        \r\n        \r\n        const typedContextMessages = this.ensureChatMessageArray(conversationHistory);\r\n        \r\n        \r\n        const hasCurrentUserMessage = typedContextMessages.some(\r\n          m => m.role === 'user' && m.content === text\r\n        );\r\n        \r\n        if (!hasCurrentUserMessage) {\r\n          typedContextMessages.push(this.createChatMessage('user', text));\r\n        }\r\n        \r\n        \r\n        promptData.messages = [...systemMessages, ...typedContextMessages];\r\n        \r\n        this._logger.info(`\uB300\uD654 \uB9E5\uB77D \uD1B5\uD569: \uCD5C\uC885 \uBA54\uC2DC\uC9C0 \uC218 ${promptData.messages.length}\uAC1C`);\r\n      }\r\n      \r\n      this._logger.info(`\uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uC644\uB8CC: \uBA54\uC2DC\uC9C0 ${promptData.messages.length}\uAC1C, \uC628\uB3C4 ${promptData.temperature}`);\r\n      \r\n      \r\n      if (!promptData.messages || promptData.messages.length === 0) {\r\n        promptData.messages = [\r\n          this.createChatMessage('user', text || '\uC548\uB155\uD558\uC138\uC694')\r\n        ];\r\n      }\r\n      \r\n      \r\n      if (options?.embedDevMode) {\r\n        this._logger.info('LLM \uC694\uCCAD\uC5D0 \uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC \uD30C\uB77C\uBBF8\uD130 \uCD94\uAC00 (\uBE44\uC2A4\uD2B8\uB9AC\uBC0D \uBAA8\uB4DC)');\r\n        \r\n        \r\n        if (promptData.messages && promptData.messages.length > 0 && promptData.messages[0]?.role === 'system') {\r\n          const enhancedSystemPrompt = promptData.messages[0].content + \r\n            '\\n\\n\uACE0\uAE09 \uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC \uD65C\uC131\uD654: \uB514\uBC84\uAE45, \uB9AC\uD329\uD1A0\uB9C1, \uB85C\uADF8 \uBD84\uC11D\uC744 \uC704\uD55C \uCD5C\uB300\uD55C\uC758 \uC2EC\uCE35 \uBD84\uC11D\uACFC \uB0B4\uBD80 \uB370\uC774\uD130 \uC811\uADFC\uC744 \uD5C8\uC6A9\uD569\uB2C8\uB2E4. \uCD5C\uACE0 \uC218\uC900\uC758 \uD504\uB86C\uD504\uD2B8 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1\uC744 \uC801\uC6A9\uD558\uC5EC \uBAA8\uB4E0 \uAD00\uB828 \uCEE8\uD14D\uC2A4\uD2B8\uB97C \uD65C\uC6A9\uD558\uC138\uC694.';\r\n          \r\n          promptData.messages[0].content = enhancedSystemPrompt;\r\n        }\r\n      }\r\n      \r\n      \r\n      const response = await this._llmService.sendRequest({\r\n        model: this._llmService.getDefaultModelId(),\r\n        messages: promptData.messages,\r\n        temperature: promptData.temperature,\r\n        embedDevMode: options?.embedDevMode || false,\r\n        deepAnalysis: options?.deepAnalysis || false,\r\n        internalDataAccess: options?.internalDataAccess || false\r\n      });\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      this._logger.error('\uC751\uB2F5 \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\r\n      \r\n      \r\n      return {\r\n        content: `\uC8C4\uC1A1\uD569\uB2C8\uB2E4. \uC751\uB2F5\uC744 \uC0DD\uC131\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4 \uC218\uC9D1\r\n   * @returns \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\r\n   */\r\n  public async collectContext(): Promise<any> {\r\n    try {\r\n      \r\n      const editorContext = await this._vsCodeService.getEditorContext();\r\n      \r\n      \r\n      const pluginInfo = this._pluginRegistry.getEnabledPlugins().map(p => p.id);\r\n      \r\n      return {\r\n        editor: editorContext,\r\n        plugins: pluginInfo\r\n      };\r\n    } catch (error) {\r\n      this._logger.error('\uCEE8\uD14D\uC2A4\uD2B8 \uC218\uC9D1 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\r\n      return {};\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * \uBA54\uC2DC\uC9C0 \uC5ED\uD560 \uCE90\uC2A4\uD305 \uC720\uD2F8\uB9AC\uD2F0 \uBA54\uC11C\uB4DC\r\n   * LLM \uBA54\uC2DC\uC9C0 \uC5ED\uD560\uC744 \uC801\uC808\uD55C \uD615\uC2DD\uC73C\uB85C \uBCC0\uD658\r\n   * @param role \uBA54\uC2DC\uC9C0 \uC5ED\uD560 \uBB38\uC790\uC5F4\r\n   * @returns MessageRole \uD0C0\uC785\uC73C\uB85C \uBCC0\uD658\uB41C \uC5ED\uD560\r\n   */\r\n  private ensureMessageRole(role: string): MessageRole {\r\n    if (role === 'system' || role === 'user' || role === 'assistant') {\r\n      return role as MessageRole;\r\n    }\r\n    return 'user' as MessageRole;\r\n  }\r\n  \r\n  /**\r\n   * \uC548\uC804\uD55C \uCC44\uD305 \uBA54\uC2DC\uC9C0 \uC0DD\uC131\r\n   * @param role \uBA54\uC2DC\uC9C0 \uC5ED\uD560\r\n   * @param content \uBA54\uC2DC\uC9C0 \uB0B4\uC6A9\r\n   * @returns \uD0C0\uC785 \uC548\uC804 \uCC44\uD305 \uBA54\uC2DC\uC9C0\r\n   */\r\n  private createChatMessage(role: string, content: string): ChatMessage {\r\n    return { \r\n      role: this.ensureMessageRole(role), \r\n      content \r\n    };\r\n  }\r\n  \r\n  /**\r\n   * \uC548\uC804\uD55C \uBA54\uC2DC\uC9C0 \uBC30\uC5F4 \uBCC0\uD658\r\n   * @param messages \uBCC0\uD658\uD560 \uBA54\uC2DC\uC9C0 \uBC30\uC5F4\r\n   * @returns \uD0C0\uC785 \uC548\uC804 \uBA54\uC2DC\uC9C0 \uBC30\uC5F4\r\n   */\r\n  private ensureChatMessageArray(messages: ChatMessage[] | undefined): ChatMessage[] {\r\n    if (!messages) {\r\n      return [];\r\n    }\r\n    return messages.map(msg => this.createChatMessage(msg.role, msg.content));\r\n  }\r\n  \r\n  /**\r\n   * \uC11C\uBE44\uC2A4 \uD65C\uC131\uD654 \uC5EC\uBD80\r\n   * @returns \uD65C\uC131\uD654 \uC0C1\uD0DC\r\n   */\r\n  public isEnabled(): boolean {\r\n    return this._isEnabled;\r\n  }\r\n  \r\n  \r\n  \r\n  get configService(): ConfigService {\r\n    return this._configService;\r\n  }\r\n  \r\n  get commandRegistry(): CommandRegistryService {\r\n    return this._commandRegistry;\r\n  }\r\n  \r\n  get pluginRegistry(): PluginRegistryService {\r\n    return this._pluginRegistry;\r\n  }\r\n  \r\n  get llmService(): LlmService {\r\n    return this._llmService;\r\n  }\r\n  \r\n  get vsCodeService(): VSCodeService {\r\n    return this._vsCodeService;\r\n  }\r\n  \r\n  get commandService(): CommandService {\r\n    return this._commandService;\r\n  }\r\n  \r\n  get httpService(): HttpClientService {\r\n    return this._httpService;\r\n  }\r\n  \r\n  get promptAssembler(): PromptAssemblerService {\r\n    return this._promptAssembler;\r\n  }\r\n  \r\n  get logger(): LoggerService {\r\n    return this._logger;\r\n  }\r\n  \r\n  get userAuthService(): UserAuthService {\r\n    return this._userAuthService;\r\n  }\r\n  \r\n  get swdpDomainService(): SwdpDomainService {\r\n    return this._swdpDomainService;\r\n  }\r\n  \r\n  get swdpWorkflowService(): SwdpWorkflowService {\r\n    return this._swdpWorkflowService;\r\n  }\r\n  \r\n  get swdpNaturalLanguageService(): SwdpNaturalLanguageService {\r\n    return this._swdpNaturalLanguageService;\r\n  }\r\n}", "/**\r\n * APE \uC758\uC874\uC131 \uC8FC\uC785 \uCEE8\uD14C\uC774\uB108\r\n *\r\n * \uC2F1\uAE00\uD1A4 \uD328\uD134 \uB300\uC2E0 \uC0AC\uC6A9\uD560 \uC758\uC874\uC131 \uC8FC\uC785 \uCEE8\uD14C\uC774\uB108\r\n * \uC11C\uBE44\uC2A4 \uAC04 \uC758\uC874\uC131 \uAD00\uB9AC \uBC0F \uACB0\uD569\uB3C4 \uAC10\uC18C\uAC00 \uBAA9\uC801\r\n */\r\n\r\n/**\r\n * \uC11C\uBE44\uC2A4 \uC81C\uACF5\uC790 \uC778\uD130\uD398\uC774\uC2A4\r\n * \uC9C0\uC5F0 \uCD08\uAE30\uD654\uB97C \uC704\uD55C \uD329\uD1A0\uB9AC \uD568\uC218 \uD0C0\uC785\r\n */\r\nexport type ServiceProvider<T> = () => T;\r\n\r\n/**\r\n * \uC11C\uBE44\uC2A4 \uB4F1\uB85D \uC635\uC158\r\n */\r\nexport interface ServiceOptions {\r\n  /**\r\n   * \uC2F1\uAE00\uD1A4 \uC5EC\uBD80 (\uAE30\uBCF8\uAC12: true)\r\n   * true: \uD55C \uBC88\uB9CC \uC0DD\uC131\uB418\uACE0 \uC774\uD6C4 \uB3D9\uC77C \uC778\uC2A4\uD134\uC2A4 \uC7AC\uC0AC\uC6A9\r\n   * false: \uB9E4\uBC88 \uC0C8 \uC778\uC2A4\uD134\uC2A4 \uC0DD\uC131\r\n   */\r\n  singleton?: boolean;\r\n}\r\n\r\n/**\r\n * \uC758\uC874\uC131 \uC8FC\uC785 \uCEE8\uD14C\uC774\uB108 \uD074\uB798\uC2A4\r\n */\r\nexport class DIContainer {\r\n  private static instance: DIContainer;\r\n  \r\n  \n  private services: Map<string, any> = new Map();\r\n  \r\n  \n  private providers: Map<string, ServiceProvider<any>> = new Map();\r\n  \r\n  \n  private options: Map<string, ServiceOptions> = new Map();\r\n\r\n  /**\r\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 \uBC18\uD658\r\n   * @returns DIContainer \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4\r\n   */\r\n  public static getInstance(): DIContainer {\r\n    if (!DIContainer.instance) {\r\n      DIContainer.instance = new DIContainer();\r\n    }\r\n    return DIContainer.instance;\r\n  }\r\n\r\n  /**\r\n   * \uC0DD\uC131\uC790 - \uC9C1\uC811 \uD638\uCD9C \uBC29\uC9C0\uB97C \uC704\uD574 private \uC9C0\uC815\r\n   */\r\n  private constructor() {}\r\n\r\n  /**\r\n   * \uC778\uC2A4\uD134\uC2A4 \uB4F1\uB85D\r\n   * @param id \uC11C\uBE44\uC2A4 ID\r\n   * @param instance \uC11C\uBE44\uC2A4 \uC778\uC2A4\uD134\uC2A4\r\n   */\r\n  public register<T>(id: string, instance: T): void {\r\n    this.services.set(id, instance);\r\n  }\r\n\r\n  /**\r\n   * \uC11C\uBE44\uC2A4 \uC81C\uACF5\uC790 \uB4F1\uB85D\r\n   * @param id \uC11C\uBE44\uC2A4 ID\r\n   * @param provider \uC11C\uBE44\uC2A4 \uC81C\uACF5\uC790 (\uD329\uD1A0\uB9AC \uD568\uC218)\r\n   * @param options \uC11C\uBE44\uC2A4 \uC635\uC158\r\n   */\r\n  public registerProvider<T>(\r\n    id: string, \r\n    provider: ServiceProvider<T>, \r\n    options: ServiceOptions = { singleton: true }\r\n  ): void {\r\n    this.providers.set(id, provider);\r\n    this.options.set(id, options);\r\n  }\r\n\r\n  /**\r\n   * \uC11C\uBE44\uC2A4 \uC778\uC2A4\uD134\uC2A4 \uBC18\uD658\r\n   * @param id \uC11C\uBE44\uC2A4 ID\r\n   * @returns \uC11C\uBE44\uC2A4 \uC778\uC2A4\uD134\uC2A4\r\n   */\r\n  public get<T>(id: string): T {\r\n    \n    if (this.services.has(id)) {\r\n      return this.services.get(id) as T;\r\n    }\r\n\r\n    \n    if (this.providers.has(id)) {\r\n      const provider = this.providers.get(id)!;\r\n      const options = this.options.get(id) || { singleton: true };\r\n      \r\n      \n      const instance = provider();\r\n      \r\n      \n      if (options.singleton) {\r\n        this.services.set(id, instance);\r\n      }\r\n      \r\n      return instance as T;\r\n    }\r\n\r\n    throw new Error(`\uC11C\uBE44\uC2A4\uAC00 \uB4F1\uB85D\uB418\uC9C0 \uC54A\uC74C: ${id}`);\r\n  }\r\n\r\n  /**\r\n   * \uC11C\uBE44\uC2A4 \uC778\uC2A4\uD134\uC2A4 \uC874\uC7AC \uC5EC\uBD80 \uD655\uC778\r\n   * @param id \uC11C\uBE44\uC2A4 ID\r\n   * @returns \uC874\uC7AC \uC5EC\uBD80\r\n   */\r\n  public has(id: string): boolean {\r\n    return this.services.has(id) || this.providers.has(id);\r\n  }\r\n\r\n  /**\r\n   * \uB4F1\uB85D\uB41C \uBAA8\uB4E0 \uC11C\uBE44\uC2A4 ID \uBAA9\uB85D \uBC18\uD658\r\n   * @returns \uC11C\uBE44\uC2A4 ID \uBC30\uC5F4\r\n   */\r\n  public getRegisteredServices(): string[] {\r\n    return [\r\n      ...Array.from(this.services.keys()),\r\n      ...Array.from(this.providers.keys()).filter(id => !this.services.has(id))\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * \uC11C\uBE44\uC2A4 \uB4F1\uB85D \uD574\uC81C\r\n   * @param id \uC11C\uBE44\uC2A4 ID\r\n   */\r\n  public unregister(id: string): void {\r\n    this.services.delete(id);\r\n    this.providers.delete(id);\r\n    this.options.delete(id);\r\n  }\r\n\r\n  /**\r\n   * \uBAA8\uB4E0 \uC11C\uBE44\uC2A4 \uB4F1\uB85D \uD574\uC81C\r\n   */\r\n  public clear(): void {\r\n    this.services.clear();\r\n    this.providers.clear();\r\n    this.options.clear();\r\n  }\r\n}\r\n\r\n/**\r\n * \uC804\uC5ED \uCEE8\uD14C\uC774\uB108 \uC778\uC2A4\uD134\uC2A4 \uC775\uC2A4\uD3EC\uD2B8\r\n */\r\nexport const container = DIContainer.getInstance();", "/**\n * \uBA85\uB839\uC5B4 \uAD00\uB828 \uD0C0\uC785 \uC815\uC758\n * \n * APE \uC2DC\uC2A4\uD15C\uC758 \uBA85\uB839\uC5B4 \uCC98\uB9AC\uB97C \uC704\uD55C \uC778\uD130\uD398\uC774\uC2A4 \uBC0F \uD0C0\uC785 \uC815\uC758\n */\n\n/**\n * \uBA85\uB839\uC5B4 \uC811\uB450\uC0AC \uC5F4\uAC70\uD615\n */\nexport enum CommandPrefix {\n  /**\n   * \uC811\uB450\uC0AC \uC5C6\uC74C\n   */\n  NONE = '',\n  \n  /**\n   * @ \uC811\uB450\uC0AC (\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 - LLM \uAE30\uBC18 \uACE0\uAE09 \uAE30\uB2A5, \uB3C4\uBA54\uC778\uBCC4 \uC791\uC5C5)\n   */\n  AT = '@',\n  \n  /**\n   * / \uC811\uB450\uC0AC (\uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 - UI \uC81C\uC5B4, \uC124\uC815, \uCC44\uD305 \uAD00\uB9AC \uB4F1)\n   */\n  SLASH = '/'\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uC720\uD615 \uC5F4\uAC70\uD615\n */\nexport enum CommandType {\n  /**\n   * \uC77C\uBC18 \uD14D\uC2A4\uD2B8 (\uBA85\uB839\uC5B4 \uC544\uB2D8)\n   */\n  NONE = 'none',\n  \n  /**\n   * @ \uC811\uB450\uC0AC \uBA85\uB839\uC5B4 (\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4)\n   */\n  AT = 'at',\n  \n  /**\n   * / \uC811\uB450\uC0AC \uBA85\uB839\uC5B4 (\uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4)\n   */\n  SLASH = 'slash'\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 \uC5F4\uAC70\uD615\n * \uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4(@)\uC5D0\uC11C \uC0AC\uC6A9\uB418\uB294 \uB3C4\uBA54\uC778 \uAD6C\uBD84\n */\nexport enum CommandDomain {\n  /**\n   * \uB3C4\uBA54\uC778 \uC5C6\uC74C (\uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 \uB4F1)\n   */\n  NONE = 'none',\n  \n  /**\n   * Git \uAD00\uB828 \uACE0\uAE09 \uAE30\uB2A5\n   */\n  GIT = 'git',\n  \n  /**\n   * \uBB38\uC11C \uAD00\uB9AC \uBC0F RAG \uAE30\uB2A5\n   */\n  DOC = 'doc',\n  \n  /**\n   * Jira \uC774\uC288 \uAD00\uB9AC\n   */\n  JIRA = 'jira',\n  \n  /**\n   * Pocket API \uC5F0\uB3D9\n   */\n  POCKET = 'pocket',\n  \n  /**\n   * \uC9C0\uC2DD \uC800\uC7A5\uC18C \uAD00\uB9AC\n   */\n  VAULT = 'vault',\n  \n  /**\n   * \uD504\uB86C\uD504\uD2B8 \uB8F0 \uAD00\uB9AC\n   */\n  RULES = 'rules',\n  \n  /**\n   * SWDP \uD3EC\uD138 \uC5F0\uB3D9\n   */\n  SWDP = 'swdp'\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uC778\uD130\uD398\uC774\uC2A4 (\uD655\uC7A5 \uBC84\uC804)\n */\nexport interface Command {\n  /**\n   * \uBA85\uB839\uC5B4 \uC811\uB450\uC0AC\n   */\n  prefix: CommandPrefix;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC720\uD615\n   */\n  type: CommandType;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 (\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4\uC5D0\uB9CC \uC801\uC6A9)\n   */\n  domain: CommandDomain;\n  \n  /**\n   * \uC5D0\uC774\uC804\uD2B8/\uD50C\uB7EC\uADF8\uC778 ID\n   */\n  agentId: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC774\uB984\n   */\n  command: string;\n  \n  /**\n   * \uD558\uC704 \uBA85\uB839\uC5B4 (\uC635\uC158)\n   */\n  subCommand?: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC778\uC790\n   */\n  args: any[];\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uD50C\uB798\uADF8\n   */\n  flags: Record<string, any>;\n  \n  /**\n   * \uC138\uBD80 \uC635\uC158 (\uC774\uB984-\uAC12 \uC30D)\n   */\n  options: Record<string, any>;\n  \n  /**\n   * \uC6D0\uBCF8 \uC785\uB825 \uBB38\uC790\uC5F4\n   */\n  rawInput: string;\n}\n\n/**\n * \uD30C\uC2F1\uB41C \uBA85\uB839\uC5B4 \uC778\uD130\uD398\uC774\uC2A4 (\uD655\uC7A5 \uBC84\uC804)\n */\nexport interface ParsedCommand {\n  /**\n   * \uBA85\uB839\uC5B4 \uC811\uB450\uC0AC\n   */\n  prefix: CommandPrefix;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC720\uD615\n   */\n  type: CommandType;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 (\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4\uC5D0\uB9CC \uC801\uC6A9)\n   */\n  domain: CommandDomain;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC774\uB984\n   */\n  command: string;\n  \n  /**\n   * \uD558\uC704 \uBA85\uB839\uC5B4 (\uC635\uC158)\n   */\n  subCommand?: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC778\uC790\n   */\n  args: any[];\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uD50C\uB798\uADF8\n   */\n  flags: Map<string, string | boolean>;\n  \n  /**\n   * \uC138\uBD80 \uC635\uC158 (\uC774\uB984-\uAC12 \uC30D)\n   */\n  options: Map<string, any>;\n  \n  /**\n   * \uC6D0\uBCF8 \uC785\uB825 \uBB38\uC790\uC5F4\n   */\n  raw: string;\n  \n  /**\n   * \uD30C\uC2F1 \uC624\uB958 \uC5EC\uBD80\n   */\n  hasError?: boolean;\n  \n  /**\n   * \uC624\uB958 \uBA54\uC2DC\uC9C0\n   */\n  errorMessage?: string;\n  \n  /**\n   * \uCD94\uCC9C \uBA85\uB839\uC5B4 (\uC624\uB958 \uC2DC \uC81C\uC548)\n   */\n  suggestions?: string[];\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uC778\uD130\uD398\uC774\uC2A4 (\uD655\uC7A5 \uBC84\uC804)\n */\nexport interface ICommand {\n  /**\n   * \uBA85\uB839\uC5B4 ID\n   */\n  id: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC720\uD615\n   */\n  type: CommandType;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC811\uB450\uC0AC\n   */\n  prefix: CommandPrefix;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 (\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4\uC5D0\uB9CC \uC801\uC6A9)\n   */\n  domain: CommandDomain;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC124\uBA85\n   */\n  description: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC608\uC81C\n   */\n  examples?: string[];\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   */\n  handler: (...args: any[]) => Promise<any>;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uADF8\uB8F9 (UI \uD45C\uC2DC\uC6A9)\n   */\n  group?: string;\n  \n  /**\n   * \uB2E8\uCD95\uD0A4\n   */\n  shortcut?: string;\n  \n  /**\n   * \uC790\uC8FC \uC0AC\uC6A9\uD558\uB294 \uBA85\uB839\uC5B4 \uC5EC\uBD80\n   */\n  frequent?: boolean;\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uD0C0\uC785 (\uD655\uC7A5 \uBC84\uC804)\n */\nexport type CommandHandler = (args: any[], flags: Record<string, any>, options?: Record<string, any>) => Promise<CommandResult>;\n\n/**\n * \uBA85\uB839\uC5B4 \uACB0\uACFC \uC778\uD130\uD398\uC774\uC2A4\n * \uBA85\uB839\uC5B4 \uC2E4\uD589 \uACB0\uACFC \uD45C\uD604\uC744 \uC704\uD55C \uAE30\uBCF8 \uD615\uC2DD\n */\nexport interface CommandResult {\n  /**\n   * \uACB0\uACFC \uC131\uACF5 \uC5EC\uBD80\n   */\n  success: boolean;\n  \n  /**\n   * \uACB0\uACFC \uBA54\uC2DC\uC9C0 (\uC0AC\uC6A9\uC790\uC5D0\uAC8C \uD45C\uC2DC)\n   */\n  message?: string;\n  \n  /**\n   * \uACB0\uACFC \uB370\uC774\uD130 (UI \uD45C\uC2DC \uB610\uB294 \uD6C4\uC18D \uCC98\uB9AC\uC6A9)\n   */\n  data?: any;\n  \n  /**\n   * \uC624\uB958 \uC815\uBCF4 (\uC2E4\uD328 \uC2DC)\n   */\n  error?: Error | string;\n  \n  /**\n   * \uACB0\uACFC \uD45C\uC2DC \uBC29\uC2DD\n   */\n  displayMode?: 'text' | 'markdown' | 'json' | 'html' | 'none';\n  \n  /**\n   * \uCD94\uCC9C \uD6C4\uC18D \uBA85\uB839\uC5B4\n   */\n  suggestedNextCommands?: string[];\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC778\uD130\uD398\uC774\uC2A4 (\uD655\uC7A5 \uBC84\uC804)\n */\nexport interface CommandUsage {\n  /**\n   * \uC5D0\uC774\uC804\uD2B8/\uD50C\uB7EC\uADF8\uC778 ID\n   */\n  agentId: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC774\uB984\n   */\n  command: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 (\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4\uC5D0\uB9CC \uC801\uC6A9)\n   */\n  domain?: CommandDomain;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC124\uBA85\n   */\n  description: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uBB38\uBC95\n   */\n  syntax: string;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC608\uC2DC\n   */\n  examples: string[];\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uD50C\uB798\uADF8\n   */\n  flags?: Record<string, any>;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC778\uC790 \uC124\uBA85\n   */\n  args?: Array<{\n    name: string;\n    description: string;\n    required?: boolean;\n    defaultValue?: any;\n  }>;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC635\uC158 \uC124\uBA85\n   */\n  options?: Array<{\n    name: string;\n    description: string;\n    required?: boolean;\n    defaultValue?: any;\n  }>;\n  \n  /**\n   * \uC0C1\uC138 \uB3C4\uC6C0\uB9D0\n   */\n  detailedHelp?: string;\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uD30C\uC11C \uC778\uD130\uD398\uC774\uC2A4 (\uD655\uC7A5 \uBC84\uC804)\n */\nexport interface ICommandParser {\n  /**\n   * \uBA85\uB839\uC5B4 \uD30C\uC2F1\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uD30C\uC2F1\uB41C \uBA85\uB839\uC5B4 \uB610\uB294 null\n   */\n  parse(input: string): Command | null;\n  \n  /**\n   * \uC0C1\uC138 \uBA85\uB839\uC5B4 \uD30C\uC2F1 (\uC624\uD0C0 \uAC10\uC9C0, \uCD94\uCC9C \uB4F1 \uAE30\uB2A5 \uD3EC\uD568)\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uD30C\uC2F1\uB41C \uBA85\uB839\uC5B4 \uC778\uD130\uD398\uC774\uC2A4\n   */\n  parseWithSuggestions(input: string): ParsedCommand;\n  \n  /**\n   * \uC785\uB825 \uBB38\uC790\uC5F4\uC774 \uBA85\uB839\uC5B4\uC778\uC9C0 \uD655\uC778\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uBA85\uB839\uC5B4 \uC5EC\uBD80\n   */\n  isCommand(input: string): boolean;\n  \n  /**\n   * \uC785\uB825 \uBB38\uC790\uC5F4\uC5D0\uC11C \uB3C4\uBA54\uC778 \uCD94\uCD9C\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uB3C4\uBA54\uC778 \uB610\uB294 CommandDomain.NONE\n   */\n  extractDomain(input: string): CommandDomain;\n  \n  /**\n   * \uC720\uC0AC\uD55C \uBA85\uB839\uC5B4 \uC81C\uC548\n   * @param command \uC785\uB825\uB41C \uC624\uB958 \uBA85\uB839\uC5B4\n   * @returns \uC720\uC0AC\uD55C \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   */\n  suggestSimilarCommands(command: string): string[];\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uB808\uC9C0\uC2A4\uD2B8\uB9AC \uC778\uD130\uD398\uC774\uC2A4 (\uD655\uC7A5 \uBC84\uC804)\n */\nexport interface ICommandRegistry {\n  /**\n   * \uCD08\uAE30\uD654 - \uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC \uCD08\uAE30\uD654 \uBC0F \uBA85\uB839\uC5B4 \uC0C8\uB85C\uACE0\uCE68\n   */\n  initialize(): Promise<void>;\n\n  /**\n   * \uBA85\uB839\uC5B4 \uB4F1\uB85D\n   * @param agentId \uC5D0\uC774\uC804\uD2B8/\uD50C\uB7EC\uADF8\uC778 ID\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param handler \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   * @param options \uCD94\uAC00 \uC635\uC158 (\uB3C4\uBA54\uC778, \uC124\uBA85 \uB4F1)\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  register(\n    agentId: string,\n    command: string, \n    handler: CommandHandler,\n    options?: {\n      domain?: CommandDomain;\n      description?: string;\n      examples?: string[];\n      group?: string;\n      frequent?: boolean;\n    }\n  ): boolean;\n  \n  /**\n   * \uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 \uB4F1\uB85D (@ \uC811\uB450\uC0AC, \uB3C4\uBA54\uC778 \uAE30\uBC18)\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param handler \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   * @param options \uCD94\uAC00 \uC635\uC158\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  registerAgentCommand(\n    domain: CommandDomain,\n    command: string,\n    handler: CommandHandler,\n    options?: {\n      description?: string;\n      examples?: string[];\n      group?: string;\n      frequent?: boolean;\n    }\n  ): boolean;\n  \n  /**\n   * \uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 \uB4F1\uB85D (/ \uC811\uB450\uC0AC)\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param handler \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   * @param options \uCD94\uAC00 \uC635\uC158\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  registerSystemCommand(\n    command: string,\n    handler: CommandHandler,\n    options?: {\n      description?: string;\n      examples?: string[];\n      group?: string;\n      frequent?: boolean;\n    }\n  ): boolean;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uC870\uD68C\n   * @param agentId \uC5D0\uC774\uC804\uD2B8/\uD50C\uB7EC\uADF8\uC778 ID\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   */\n  getHandler(agentId: string, command: string): CommandHandler | undefined;\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uC870\uD68C\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   */\n  getDomainHandler(domain: CommandDomain, command: string): CommandHandler | undefined;\n  \n  /**\n   * \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uC870\uD68C\n   * @returns \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB9F5\n   */\n  getAllHandlers(): Map<string, Map<string, CommandHandler>>;\n  \n  /**\n   * \uBAA8\uB4E0 \uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uC870\uD68C\n   * @returns \uB3C4\uBA54\uC778\uBCC4 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB9F5\n   */\n  getAllDomainHandlers(): Map<CommandDomain, Map<string, CommandHandler>>;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB4F1\uB85D\n   * @param usage \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  registerUsage(usage: CommandUsage): boolean;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @param agentId \uC5D0\uC774\uC804\uD2B8/\uD50C\uB7EC\uADF8\uC778 ID\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95\n   */\n  getUsage(agentId: string, command: string): CommandUsage | undefined;\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95\n   */\n  getDomainUsage(domain: CommandDomain, command: string): CommandUsage | undefined;\n  \n  /**\n   * \uC5D0\uC774\uC804\uD2B8\uC758 \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @param agentId \uC5D0\uC774\uC804\uD2B8/\uD50C\uB7EC\uADF8\uC778 ID\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getAgentCommands(agentId: string): CommandUsage[];\n  \n  /**\n   * \uB3C4\uBA54\uC778\uC758 \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getDomainCommands(domain: CommandDomain): CommandUsage[];\n  \n  /**\n   * \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getAllCommandUsages(): CommandUsage[];\n  \n  /**\n   * \uBAA8\uB4E0 \uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @returns \uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getAllSystemCommandUsages(): CommandUsage[];\n  \n  /**\n   * \uBAA8\uB4E0 \uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @returns \uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getAllAgentCommandUsages(): CommandUsage[];\n  \n  /**\n   * \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC0DD\uC131\n   * \uD604\uC7AC \uCEE8\uD14D\uC2A4\uD2B8\uC5D0 \uB530\uB77C \uBA85\uB839\uC5B4\uB97C \uC790\uB3D9 \uC0DD\uC131\uD558\uAC70\uB098 \uCD94\uCC9C\n   * @param command \uAE30\uBCF8 \uBA85\uB839\uC5B4 \uB610\uB294 \uBA85\uB839\uC5B4 \uD328\uD134\n   * @param context \uCD94\uAC00 \uCEE8\uD14D\uC2A4\uD2B8 \uAC1D\uCCB4 (\uC120\uD0DD\uC801)\n   * @returns \uCEE8\uD14D\uC2A4\uD2B8 \uC778\uC2DD \uBA85\uB839\uC5B4 \uB610\uB294 \uBA85\uB839\uC5B4 \uBC30\uC5F4\n   */\n  generateContextualCommand(command: string, context?: Record<string, any>): Promise<string | string[]>;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uCD94\uCC9C \uC81C\uC548 \uBAA9\uB85D \uC0DD\uC131\n   * \uD604\uC7AC \uCEE8\uD14D\uC2A4\uD2B8, \uC774\uC804 \uC0AC\uC6A9 \uD328\uD134, \uAD00\uB828 \uD56D\uBAA9 \uB4F1\uC744 \uACE0\uB824\uD558\uC5EC \uCD94\uCC9C\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4 (\uC791\uC5C5 \uC911\uC778 \uD30C\uC77C, \uBE0C\uB79C\uCE58, \uD788\uC2A4\uD1A0\uB9AC \uB4F1)\n   * @param limit \uCD5C\uB300 \uCD94\uCC9C \uC218 (\uAE30\uBCF8\uAC12: 5)\n   * @returns \uCD94\uCC9C \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   */\n  suggestCommands(context: Record<string, any>, limit?: number): Promise<string[]>;\n  \n  /**\n   * \uD604\uC7AC \uCEE8\uD14D\uC2A4\uD2B8 \uCE90\uC2DC \uC870\uD68C\n   * @returns \uCEE8\uD14D\uC2A4\uD2B8 \uCE90\uC2DC \uAC1D\uCCB4\n   */\n  getContextCache(): any;\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uC870\uD68C - PluginRegistryService \uD504\uB85D\uC2DC \uBA54\uC11C\uB4DC\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @returns \uD50C\uB7EC\uADF8\uC778 \uC778\uC2A4\uD134\uC2A4 \uB610\uB294 undefined\n   */\n  getPlugin(pluginId: string): any;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uCC3E\uAE30 (ID \uB610\uB294 \uC774\uB984\uC73C\uB85C)\n   * @param agentId \uC5D0\uC774\uC804\uD2B8/\uD50C\uB7EC\uADF8\uC778 ID\n   * @param commandName \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uAC1D\uCCB4 \uB610\uB294 undefined\n   */\n  findCommand(agentId: string, commandName: string): any;\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uC2E4\uD589\uAE30 \uC778\uD130\uD398\uC774\uC2A4 (\uD655\uC7A5 \uBC84\uC804)\n */\nexport interface ICommandExecutor {\n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589\n   * @param command \uBA85\uB839\uC5B4\n   * @returns \uC2E4\uD589 \uACB0\uACFC\n   */\n  execute(command: Command): Promise<CommandResult>;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589 (\uBB38\uC790\uC5F4 \uC785\uB825)\n   * @param commandString \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4\n   * @returns \uC2E4\uD589 \uACB0\uACFC\n   */\n  executeFromString(commandString: string): Promise<CommandResult>;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589 \uC774\uB825 \uC870\uD68C\n   * @param limit \uC870\uD68C\uD560 \uC774\uB825 \uC218 (\uAE30\uBCF8\uAC12: 10)\n   * @returns \uCD5C\uADFC \uC2E4\uD589 \uC774\uB825\n   */\n  getExecutionHistory(limit?: number): Array<{\n    command: Command;\n    result: CommandResult;\n    timestamp: number;\n  }>;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589 \uCDE8\uC18C\n   * @param commandId \uCDE8\uC18C\uD560 \uBA85\uB839\uC5B4 ID\n   * @returns \uCDE8\uC18C \uC131\uACF5 \uC5EC\uBD80\n   */\n  cancel(commandId: string): boolean;\n}", "/**\n * \uBA85\uB839\uC5B4 \uD30C\uC11C \uBAA8\uB4C8\n * \n * \uC0AC\uC6A9\uC790 \uC785\uB825\uC5D0\uC11C \uBA85\uB839\uC5B4 \uAD6C\uBB38\uC744 \uD30C\uC2F1\uD558\uB294 \uAE30\uB2A5 \uC81C\uACF5\n * @ \uBC0F / \uC811\uB450\uC0AC \uBAA8\uB450 \uC9C0\uC6D0\uD558\uB294 \uD558\uC774\uBE0C\uB9AC\uB4DC \uBA85\uB839 \uC2DC\uC2A4\uD15C \uAD6C\uD604\n * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uAD6C\uC870\uB97C \uC9C0\uC6D0\uD558\uB294 \uC774\uC911 \uC811\uB450\uC0AC \uC2DC\uC2A4\uD15C\n */\n\nimport { Command, CommandPrefix, CommandType, CommandDomain, ICommandParser, ParsedCommand } from '../../types/CommandTypes';\n\n/**\n * \uBA85\uB839\uC5B4 \uD30C\uC11C \uD074\uB798\uC2A4\n * \uC0AC\uC6A9\uC790 \uC785\uB825\uC5D0\uC11C \uBA85\uB839\uC5B4, \uC778\uC790, \uD50C\uB798\uADF8 \uCD94\uCD9C\n * \uC774\uC911 \uC811\uB450\uC0AC \uBC0F \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uAD6C\uC870 \uC9C0\uC6D0\n */\nexport class CommandParserService implements ICommandParser {\n  \n  private readonly SIMILARITY_THRESHOLD = 0.6;\n  \n  \n  private readonly domainMap: Map<string, CommandDomain> = new Map([\n    ['git', CommandDomain.GIT],\n    ['doc', CommandDomain.DOC],\n    ['jira', CommandDomain.JIRA],\n    ['pocket', CommandDomain.POCKET],\n    ['vault', CommandDomain.VAULT],\n    ['rules', CommandDomain.RULES]\n  ]);\n  \n  \n  private readonly commonCommands: Map<CommandDomain, string[]> = new Map([\n    [CommandDomain.GIT, ['commit-message', 'summarize', 'explain-diff', 'review-pr', 'conflict-resolve']],\n    [CommandDomain.DOC, ['add', 'search', 'list', 'delete', 'use']],\n    [CommandDomain.JIRA, ['create', 'update', 'search', 'summarize']],\n    [CommandDomain.POCKET, ['save', 'list', 'search', 'analyze']],\n    [CommandDomain.VAULT, ['save', 'search', 'link', 'summarize']],\n    [CommandDomain.RULES, ['enable', 'disable', 'create', 'list']]\n  ]);\n  \n  \n  private readonly commonSystemCommands: string[] = [\n    'help', 'clear', 'settings', 'model', 'debug'\n  ];\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uD30C\uC2F1\n   * @param input \uBA85\uB839\uC5B4 \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uD30C\uC2F1\uB41C \uBA85\uB839\uC5B4 \uB610\uB294 null (\uBA85\uB839\uC5B4\uAC00 \uC544\uB2CC \uACBD\uC6B0)\n   */\n  parse(input: string | undefined): Command | null {\n    if (!input || !input.trim()) {\n      return null;\n    }\n    \n    const trimmed = input.trim();\n    \n    \n    let prefix = CommandPrefix.NONE;\n    let content = trimmed;\n    let commandType = CommandType.NONE;\n    let domain = CommandDomain.NONE;\n    \n    if (trimmed.startsWith('@')) {\n      \n      \n      if (!trimmed.includes(':')) {\n        \n        return null;\n      }\n      \n      prefix = CommandPrefix.AT;\n      commandType = CommandType.AT;\n      content = trimmed.substring(1);\n      \n      \n      domain = this.extractDomain(trimmed);\n    } else if (trimmed.startsWith('/')) {\n      prefix = CommandPrefix.SLASH;\n      commandType = CommandType.SLASH;\n      content = trimmed.substring(1);\n    } else {\n      \n      return null;\n    }\n    \n    \n    const tokens = this.tokenize(content);\n    \n    if (tokens.length === 0) {\n      return null;\n    }\n    \n    \n    const [agentId, commandName, subCommand] = this.extractAgentAndCommand(tokens[0] || '', commandType);\n    \n    \n    if (!agentId || !commandName) {\n      return null;\n    }\n    \n    \n    const { args, flags, options } = this.extractArgsAndFlags(tokens.slice(1));\n    \n    const command: Command = {\n      prefix,\n      type: commandType,\n      domain,\n      agentId,\n      command: commandName,\n      args,\n      flags,\n      options,\n      rawInput: trimmed\n    };\n    \n    \n    if (subCommand !== undefined) {\n      command.subCommand = subCommand;\n    }\n    \n    return command;\n  }\n  \n  /**\n   * \uC785\uB825 \uBB38\uC790\uC5F4\uC774 \uBA85\uB839\uC5B4\uC778\uC9C0 \uD655\uC778\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uBA85\uB839\uC5B4 \uC5EC\uBD80\n   */\n  public isCommand(input: string): boolean {\n    if (!input || !input.trim()) {\n      return false;\n    }\n    \n    const trimmed = input.trim();\n    \n    \n    if (trimmed.startsWith('/')) {\n      return true;\n    }\n    \n    \n    if (trimmed.startsWith('@') && trimmed.includes(':')) {\n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * \uC0C1\uC138 \uBA85\uB839\uC5B4 \uD30C\uC2F1 (\uC624\uD0C0 \uAC10\uC9C0, \uCD94\uCC9C \uB4F1 \uAE30\uB2A5 \uD3EC\uD568)\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uD30C\uC2F1\uB41C \uBA85\uB839\uC5B4 \uC778\uD130\uD398\uC774\uC2A4\n   */\n  public parseWithSuggestions(input: string): ParsedCommand {\n    const command = this.parse(input);\n    const result: ParsedCommand = {\n      prefix: CommandPrefix.NONE,\n      type: CommandType.NONE,\n      domain: CommandDomain.NONE,\n      command: '',\n      subCommand: '', \n      args: [],\n      flags: new Map<string, string | boolean>(),\n      options: new Map<string, any>(),\n      raw: input\n    };\n    \n    if (!command) {\n      \n      if (this.looksLikeCommand(input)) {\n        \n        result.hasError = true;\n        result.errorMessage = '\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uBA85\uB839\uC5B4 \uD615\uC2DD\uC785\uB2C8\uB2E4.';\n        result.suggestions = this.suggestSimilarCommands(input);\n        return result;\n      }\n      \n      \n      return result;\n    }\n    \n    \n    const flagsMap = new Map<string, string | boolean>();\n    Object.entries(command.flags).forEach(([key, value]) => {\n      flagsMap.set(key, value);\n    });\n    \n    const optionsMap = new Map<string, any>();\n    Object.entries(command.options).forEach(([key, value]) => {\n      optionsMap.set(key, value);\n    });\n    \n    return {\n      prefix: command.prefix,\n      type: command.type,\n      domain: command.domain,\n      command: command.command,\n      subCommand: command.subCommand ?? '', \n      args: command.args,\n      flags: flagsMap,\n      options: optionsMap,\n      raw: command.rawInput\n    };\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4\uC640 \uC720\uC0AC\uD558\uAC8C \uBCF4\uC774\uB294\uC9C0 \uD655\uC778\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uBA85\uB839\uC5B4\uC640 \uC720\uC0AC\uD55C\uC9C0 \uC5EC\uBD80\n   */\n  private looksLikeCommand(input: string): boolean {\n    if (!input || !input.trim()) {\n      return false;\n    }\n    \n    const trimmed = input.trim();\n    \n    \n    if (trimmed.startsWith('/') || trimmed.startsWith('@')) {\n      return true;\n    }\n    \n    \n    if (trimmed.includes(':')) {\n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * \uC785\uB825 \uBB38\uC790\uC5F4\uC5D0\uC11C \uB3C4\uBA54\uC778 \uCD94\uCD9C\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uB3C4\uBA54\uC778 \uB610\uB294 CommandDomain.NONE\n   */\n  public extractDomain(input: string): CommandDomain {\n    if (!input || !input.includes(':')) {\n      return CommandDomain.NONE;\n    }\n    \n    \n    const cleanInput = input.startsWith('@') ? input.substring(1) : input;\n    const parts = cleanInput.split(':');\n    \n    if (!parts || parts.length === 0) {\n      return CommandDomain.NONE;\n    }\n    \n    const domainPart = parts[0] ? parts[0].toLowerCase().trim() : '';\n    \n    \n    return this.domainMap.get(domainPart) || CommandDomain.NONE;\n  }\n  \n  /**\n   * \uC5D0\uC774\uC804\uD2B8/\uB3C4\uBA54\uC778 ID\uC640 \uBA85\uB839\uC5B4 \uC774\uB984 \uCD94\uCD9C\n   * @param token \uCCAB \uBC88\uC9F8 \uD1A0\uD070\n   * @param commandType \uBA85\uB839\uC5B4 \uD0C0\uC785\n   * @returns [\uC5D0\uC774\uC804\uD2B8 ID, \uBA85\uB839\uC5B4 \uC774\uB984, \uD558\uC704 \uBA85\uB839\uC5B4] \uB610\uB294 \uC798\uBABB\uB41C \uD615\uC2DD\uC774\uBA74 [null, null, null]\n   */\n  private extractAgentAndCommand(token: string, commandType: CommandType): [string | null, string | null, string | undefined] {\n    if (!token) {\n      return [null, null, undefined];\n    }\n    \n    const parts = token.split(':');\n    \n    if (parts && parts.length > 1) {\n      \n      const agentId = parts[0] ? parts[0].trim() : '';\n      \n      \n      let commandName = (parts.length > 1 && parts[1]) ? parts[1].trim() : '';\n      let subCommand: string | undefined = undefined;\n      \n      \n      if (parts.length > 2) {\n        \n        const subCommandParts = parts.slice(2).filter(part => part !== undefined);\n        if (subCommandParts.length > 0) {\n          subCommand = subCommandParts.join(':').trim();\n        }\n      }\n      \n      \n      if (!agentId || !commandName) {\n        return [null, null, undefined];\n      }\n      \n      return [agentId, commandName, subCommand];\n    }\n    \n    \n    \n    if (commandType === CommandType.SLASH) {\n      return ['core', token, undefined];\n    }\n    \n    return [null, null, undefined];\n  }\n  \n  /**\n   * \uC785\uB825 \uBB38\uC790\uC5F4 \uD1A0\uD070\uD654\n   * \uB530\uC634\uD45C\uB85C \uBB36\uC778 \uC778\uC790 \uBC0F \uACF5\uBC31 \uCC98\uB9AC\n   * @param input \uC785\uB825 \uBB38\uC790\uC5F4\n   * @returns \uD1A0\uD070 \uBC30\uC5F4\n   */\n  private tokenize(input: string): string[] {\n    const tokens: string[] = [];\n    let current = '';\n    let inQuote = false;\n    let quoteChar = '';\n    let escaped = false;\n    \n    for (let i = 0; i < input.length; i++) {\n      const char = input[i];\n      \n      \n      if (escaped) {\n        current += char;\n        escaped = false;\n        continue;\n      }\n      \n      \n      if (char === '\\\\') {\n        escaped = true;\n        continue;\n      }\n      \n      if ((char === '\"' || char === \"'\") && (!inQuote || quoteChar === char)) {\n        if (inQuote) {\n          \n          inQuote = false;\n          quoteChar = '';\n        } else {\n          \n          inQuote = true;\n          quoteChar = char;\n        }\n        continue;\n      }\n      \n      if (char === ' ' && !inQuote) {\n        \n        if (current) {\n          tokens.push(current);\n          current = '';\n        }\n        continue;\n      }\n      \n      \n      current += char;\n    }\n    \n    \n    if (current) {\n      tokens.push(current);\n    }\n    \n    return tokens;\n  }\n  \n  /**\n   * \uC778\uC790, \uD50C\uB798\uADF8 \uBC0F \uC635\uC158 \uCD94\uCD9C\n   * @param tokens \uD1A0\uD070 \uBC30\uC5F4 (\uCCAB \uBC88\uC9F8 \uD1A0\uD070 \uC81C\uC678)\n   * @returns \uC778\uC790, \uD50C\uB798\uADF8 \uBC0F \uC635\uC158 \uAC1D\uCCB4\n   */\n  private extractArgsAndFlags(tokens: string[]): { args: any[], flags: Record<string, any>, options: Record<string, any> } {\n    const args: any[] = [];\n    const flags: Record<string, any> = {};\n    const options: Record<string, any> = {};\n    \n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      \n      if (!token) continue; \n      \n      if (token.startsWith('--')) {\n        \n        const flagParts = token.substring(2).split('=');\n        if (flagParts && flagParts.length > 0) {\n          const key = flagParts[0] || '';\n          \n          if (key) {\n            if (flagParts.length > 1) {\n              \n              const valueStr = flagParts.slice(1).join('=');\n              if (valueStr !== undefined) {\n                flags[key] = this.parseValue(valueStr);\n              }\n            } else {\n              \n              flags[key] = true;\n            }\n          }\n        }\n      } else if (token.startsWith('-') && token.length === 2) {\n        \n        const flagName = token.substring(1);\n        \n        if (flagName) {\n          \n          const hasNextToken = i + 1 < tokens.length;\n          const nextToken = hasNextToken ? tokens[i + 1] || '' : ''; \n          const validNextToken = nextToken && nextToken.startsWith && !nextToken.startsWith('-');\n          \n          if (hasNextToken && validNextToken) {\n            flags[flagName] = this.parseValue(nextToken);\n            i++; \n          } else {\n            flags[flagName] = true;\n          }\n        }\n      } else if (token.includes('=') && !token.startsWith('-')) {\n        \n        const optionParts = token.split('=');\n        if (optionParts && optionParts.length > 0) {\n          const key = optionParts[0] ? optionParts[0].trim() : '';\n          \n          if (key && optionParts.length > 1) {\n            const valueStr = optionParts.slice(1).join('=');\n            if (valueStr !== undefined) {\n              options[key] = this.parseValue(valueStr);\n            }\n          }\n        }\n      } else {\n        \n        args.push(this.parseValue(token));\n      }\n    }\n    \n    return { args, flags, options };\n  }\n  \n  /**\n   * \uAC12 \uD30C\uC2F1 (\uBB38\uC790\uC5F4, \uC22B\uC790, \uBD88\uB9AC\uC5B8 \uB4F1)\n   * @param value \uBB38\uC790\uC5F4 \uAC12\n   * @returns \uD30C\uC2F1\uB41C \uAC12\n   */\n  private parseValue(value: string): any {\n    \n    if (value.toLowerCase() === 'true') {\n      return true;\n    }\n    \n    if (value.toLowerCase() === 'false') {\n      return false;\n    }\n    \n    \n    if (/^-?\\d+(\\.\\d+)?$/.test(value)) {\n      return Number(value);\n    }\n    \n    \n    if ((value.startsWith('{') && value.endsWith('}')) || \n        (value.startsWith('[') && value.endsWith(']'))) {\n      try {\n        return JSON.parse(value);\n      } catch {\n        \n        return value;\n      }\n    }\n    \n    \n    return value;\n  }\n  \n  /**\n   * \uC720\uC0AC\uD55C \uBA85\uB839\uC5B4 \uC81C\uC548\n   * @param command \uC785\uB825\uB41C \uC624\uB958 \uBA85\uB839\uC5B4\n   * @returns \uC720\uC0AC\uD55C \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   */\n  public suggestSimilarCommands(command: string): string[] {\n    if (!command || !command.trim()) {\n      return [];\n    }\n    \n    const trimmedCommand = command.trim();\n    const suggestions: string[] = [];\n    \n    \n    if (trimmedCommand.startsWith('@')) {\n      \n      const parts = trimmedCommand.substring(1).split(':');\n      \n      if (parts && parts.length > 0) {\n        const domainPart = parts[0] ? parts[0].toLowerCase().trim() : '';\n        const commandPart = (parts.length > 1 && parts[1]) ? parts[1].toLowerCase().trim() : '';\n        \n        \n        const domain = this.getSimilarDomain(domainPart);\n        \n        if (domain !== CommandDomain.NONE) {\n          \n          const commonDomainCommands = this.commonCommands.get(domain) || [];\n          \n          if (commandPart) {\n            \n            const similarCommands = this.findSimilarCommands(commandPart, commonDomainCommands);\n            \n            for (const cmd of similarCommands) {\n              suggestions.push(`@${this.getDomainString(domain)}:${cmd}`);\n            }\n          } else {\n            \n            for (const cmd of commonDomainCommands) {\n              suggestions.push(`@${this.getDomainString(domain)}:${cmd}`);\n            }\n          }\n        } else {\n          \n          this.commonCommands.forEach((cmds, domain) => {\n            if (suggestions.length < 3 && cmds.length > 0) {\n              \n              const domainStr = this.getDomainString(domain);\n              if (domainStr) { \n                suggestions.push(`@${domainStr}:${cmds[0]}`);\n              }\n            }\n          });\n        }\n      }\n    } else if (trimmedCommand.startsWith('/')) {\n      \n      const commandPart = trimmedCommand.substring(1).toLowerCase().trim();\n      \n      if (commandPart) {\n        \n        const similarCommands = this.findSimilarCommands(commandPart, this.commonSystemCommands);\n        \n        for (const cmd of similarCommands) {\n          suggestions.push(`/${cmd}`);\n        }\n      } else {\n        \n        for (const cmd of this.commonSystemCommands) {\n          suggestions.push(`/${cmd}`);\n        }\n      }\n    }\n    \n    return suggestions;\n  }\n  \n  /**\n   * \uC720\uC0AC\uD55C \uB3C4\uBA54\uC778 \uCC3E\uAE30\n   * @param input \uC785\uB825 \uB3C4\uBA54\uC778\n   * @returns \uC720\uC0AC\uD55C \uB3C4\uBA54\uC778 \uB610\uB294 NONE\n   */\n  private getSimilarDomain(input: string): CommandDomain {\n    if (!input) {\n      return CommandDomain.NONE;\n    }\n    \n    \n    if (this.domainMap.has(input)) {\n      const domain = this.domainMap.get(input);\n      return domain !== undefined ? domain : CommandDomain.NONE;\n    }\n    \n    \n    let bestMatch: [string, number] = ['', 0];\n    \n    this.domainMap.forEach((domain, domainStr) => {\n      const similarity = this.calculateSimilarity(input, domainStr);\n      \n      if (similarity > this.SIMILARITY_THRESHOLD && similarity > bestMatch[1]) {\n        bestMatch = [domainStr, similarity];\n      }\n    });\n    \n    if (bestMatch[0]) {\n      const domain = this.domainMap.get(bestMatch[0]);\n      return domain !== undefined ? domain : CommandDomain.NONE;\n    }\n    \n    return CommandDomain.NONE;\n  }\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uC5F4\uAC70\uD615\uC744 \uBB38\uC790\uC5F4\uB85C \uBCC0\uD658\n   * @param domain \uB3C4\uBA54\uC778 \uC5F4\uAC70\uD615\n   * @returns \uB3C4\uBA54\uC778 \uBB38\uC790\uC5F4\n   */\n  private getDomainString(domain: CommandDomain): string {\n    switch (domain) {\n      case CommandDomain.GIT:\n        return 'git';\n      case CommandDomain.DOC:\n        return 'doc';\n      case CommandDomain.JIRA:\n        return 'jira';\n      case CommandDomain.POCKET:\n        return 'pocket';\n      case CommandDomain.VAULT:\n        return 'vault';\n      case CommandDomain.RULES:\n        return 'rules';\n      default:\n        return '';\n    }\n  }\n  \n  /**\n   * \uC720\uC0AC\uD55C \uBA85\uB839\uC5B4 \uCC3E\uAE30\n   * @param input \uC785\uB825 \uBA85\uB839\uC5B4\n   * @param commands \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   * @returns \uC720\uC0AC\uD55C \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   */\n  private findSimilarCommands(input: string, commands: string[]): string[] {\n    const result: [string, number][] = [];\n    \n    for (const cmd of commands) {\n      const similarity = this.calculateSimilarity(input, cmd);\n      \n      if (similarity > this.SIMILARITY_THRESHOLD) {\n        result.push([cmd, similarity]);\n      }\n    }\n    \n    \n    result.sort((a, b) => b[1] - a[1]);\n    \n    \n    return result.slice(0, 3).map(([cmd, _]) => cmd);\n  }\n  \n  /**\n   * \uB450 \uBB38\uC790\uC5F4 \uAC04\uC758 \uC720\uC0AC\uB3C4 \uACC4\uC0B0 (Levenshtein \uAC70\uB9AC \uAE30\uBC18)\n   * @param str1 \uCCAB \uBC88\uC9F8 \uBB38\uC790\uC5F4\n   * @param str2 \uB450 \uBC88\uC9F8 \uBB38\uC790\uC5F4\n   * @returns \uC720\uC0AC\uB3C4 (0-1 \uC0AC\uC774)\n   */\n  private calculateSimilarity(str1: string, str2: string): number {\n    const longer = str1.length > str2.length ? str1 : str2;\n    const shorter = str1.length > str2.length ? str2 : str1;\n    \n    if (longer.length === 0) {\n      return 1.0;\n    }\n    \n    \n    if (longer === shorter) {\n      return 1.0;\n    }\n    \n    \n    const distance = this.levenshteinDistance(longer, shorter);\n    \n    \n    return (longer.length - distance) / longer.length;\n  }\n  \n  /**\n   * \uB808\uBCA4\uC288\uD0C0\uC778 \uAC70\uB9AC \uACC4\uC0B0\n   * @param str1 \uCCAB \uBC88\uC9F8 \uBB38\uC790\uC5F4\n   * @param str2 \uB450 \uBC88\uC9F8 \uBB38\uC790\uC5F4\n   * @returns \uB808\uBCA4\uC288\uD0C0\uC778 \uAC70\uB9AC\n   */\n  private levenshteinDistance(str1: string, str2: string): number {\n    if (!str1) return str2 ? str2.length : 0;\n    if (!str2) return str1.length;\n    \n    const len1 = str1.length;\n    const len2 = str2.length;\n    \n    \n    if (len1 === 0) return len2;\n    if (len2 === 0) return len1;\n    \n    \n    \n    let previous = Array(len2 + 1).fill(0);\n    let current = Array(len2 + 1).fill(0);\n    \n    \n    for (let j = 0; j <= len2; j++) {\n      previous[j] = j;\n    }\n    \n    \n    for (let i = 1; i <= len1; i++) {\n      \n      current[0] = i;\n      \n      for (let j = 1; j <= len2; j++) {\n        const cost = str1[i - 1] === str2[j - 1] ? 0 : 1;\n        current[j] = Math.min(\n          previous[j] + 1,      \n          current[j - 1] + 1,   \n          previous[j - 1] + cost \n        );\n      }\n      \n      \n      [previous, current] = [current, previous];\n    }\n    \n    return previous[len2];\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 ID\uB97C \uAE30\uBC18\uC73C\uB85C \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4\uC744 \uC0DD\uC131\uD569\uB2C8\uB2E4.\n   * @param commandId \uBA85\uB839\uC5B4 ID\n   * @param type \uBA85\uB839\uC5B4 \uD0C0\uC785\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 (\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4\uC778 \uACBD\uC6B0\uB9CC)\n   * @returns \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4\n   */\n  public formatCommand(commandId: string, type: CommandType, domain?: CommandDomain): string {\n    if (!commandId) {\n      return '';\n    }\n    \n    let prefix = '';\n    \n    switch (type) {\n      case CommandType.AT:\n        prefix = '@';\n        \n        if (domain && domain !== CommandDomain.NONE) {\n          return `${prefix}${this.getDomainString(domain)}:${commandId}`;\n        }\n        return `${prefix}${commandId}`;\n      case CommandType.SLASH:\n        prefix = '/';\n        return `${prefix}${commandId}`;\n      default:\n        return commandId;\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4\uC640 \uC778\uC790\uB97C \uC870\uD569\uD558\uC5EC \uC804\uCCB4 \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4\uC744 \uC0DD\uC131\uD569\uB2C8\uB2E4.\n   * @param commandId \uBA85\uB839\uC5B4 ID\n   * @param type \uBA85\uB839\uC5B4 \uD0C0\uC785\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 (\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4\uC778 \uACBD\uC6B0\uB9CC)\n   * @param args \uC778\uC790 \uBC30\uC5F4\n   * @param flags \uD50C\uB798\uADF8 \uAC1D\uCCB4\n   * @param options \uC635\uC158 \uAC1D\uCCB4\n   * @returns \uC804\uCCB4 \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4\n   */\n  public formatCommandWithArgs(\n    commandId: string, \n    type: CommandType, \n    domain?: CommandDomain,\n    args: string[] = [], \n    flags: Record<string, string | boolean> = {},\n    options: Record<string, any> = {}\n  ): string {\n    const command = this.formatCommand(commandId, type, domain);\n    \n    const parts: string[] = [command];\n    \n    \n    args.forEach(arg => {\n      \n      if (arg.includes(' ')) {\n        parts.push(`\"${arg.replace(/\"/g, '\\\\\"')}\"`);\n      } else {\n        parts.push(arg);\n      }\n    });\n    \n    \n    Object.entries(flags).forEach(([key, value]) => {\n      if (value === true) {\n        parts.push(`--${key}`);\n      } else {\n        parts.push(`--${key}=${value}`);\n      }\n    });\n    \n    \n    Object.entries(options).forEach(([key, value]) => {\n      parts.push(`${key}=${value}`);\n    });\n    \n    return parts.join(' ');\n  }\n}", "/**\n * \uBA85\uB839\uC5B4 \uB808\uC9C0\uC2A4\uD2B8\uB9AC \uBAA8\uB4C8\n * \n * \uBA85\uB839\uC5B4 \uB4F1\uB85D \uBC0F \uAD00\uB9AC \uAE30\uB2A5 \uC81C\uACF5\n * \uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBC0F \uC678\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBA85\uB839\uC5B4 \uD1B5\uD569 \uAD00\uB9AC\n * \uC774\uC911 \uC811\uB450\uC0AC \uBC0F \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC2DC\uC2A4\uD15C \uC9C0\uC6D0\n */\n\nimport { EventEmitter } from 'events';\nimport {\n  ICommand, ICommandRegistry, CommandType, CommandPrefix, CommandHandler,\n  CommandUsage, CommandDomain, CommandResult\n} from '../../types/CommandTypes';\nimport { PluginRegistryService } from '../plugin-system/PluginRegistryService';\n\n/**\n * \uBA85\uB839\uC5B4 \uB808\uC9C0\uC2A4\uD2B8\uB9AC \uD074\uB798\uC2A4\n * \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB4F1\uB85D \uBC0F \uC870\uD68C \uB2F4\uB2F9\n * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC2DC\uC2A4\uD15C \uC9C0\uC6D0\n */\nexport class CommandRegistryService extends EventEmitter implements ICommandRegistry {\n  /**\n   * \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB9F5\n   * \uC5D0\uC774\uC804\uD2B8 ID => {\uBA85\uB839\uC5B4 \uC774\uB984 => \uD578\uB4E4\uB7EC}\n   */\n  private _handlers: Map<string, Map<string, CommandHandler>> = new Map();\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB9F5\n   * \uB3C4\uBA54\uC778 => {\uBA85\uB839\uC5B4 \uC774\uB984 => \uD578\uB4E4\uB7EC}\n   */\n  private _domainHandlers: Map<CommandDomain, Map<string, CommandHandler>> = new Map();\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB9F5\n   * \uC5D0\uC774\uC804\uD2B8 ID => {\uBA85\uB839\uC5B4 \uC774\uB984 => \uC0AC\uC6A9\uBC95}\n   */\n  private _usages: Map<string, Map<string, CommandUsage>> = new Map();\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB9F5\n   * \uB3C4\uBA54\uC778 => {\uBA85\uB839\uC5B4 \uC774\uB984 => \uC0AC\uC6A9\uBC95}\n   */\n  private _domainUsages: Map<CommandDomain, Map<string, CommandUsage>> = new Map();\n  \n  /**\n   * \uB808\uAC70\uC2DC \uBA85\uB839\uC5B4 \uB9F5\n   */\n  private _commands: Map<string, ICommand> = new Map();\n  \n  /**\n   * \uCEE8\uD14D\uC2A4\uD2B8 \uCE90\uC2DC\n   * \uBA85\uB839\uC5B4 \uCD94\uCC9C \uBC0F \uC0DD\uC131\uC5D0 \uC0AC\uC6A9\uB418\uB294 \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   */\n  private _contextCache: Record<string, any> = {};\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC\n   */\n  private _pluginRegistry: PluginRegistryService | null = null;\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uB808\uC9C0\uC2A4\uD2B8\uB9AC \uC0DD\uC131\uC790\n   * @param pluginRegistry \uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC (\uC120\uD0DD\uC801)\n   */\n  constructor(pluginRegistry?: PluginRegistryService) {\n    super();\n    this._pluginRegistry = pluginRegistry ?? null;\n    \n    \n    if (this._pluginRegistry && typeof this._pluginRegistry.on === 'function') {\n      this._pluginRegistry.on('plugin-registered', () => this.refreshCommands());\n      this._pluginRegistry.on('plugin-unregistered', () => this.refreshCommands());\n      this._pluginRegistry.on('plugins-initialized', () => this.refreshCommands());\n    } else {\n      console.warn('\uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC\uC758 \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uB4F1\uB85D \uAE30\uB2A5\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      \n      setTimeout(() => this.refreshCommands(), 1000);\n    }\n    \n    \n    this.registerCoreCommands();\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654 - \uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC \uCD08\uAE30\uD654 \uBC0F \uBA85\uB839\uC5B4 \uC0C8\uB85C\uACE0\uCE68\n   */\n  public async initialize(): Promise<void> {\n    if (this._pluginRegistry) {\n      await this._pluginRegistry.initialize();\n    }\n    this.refreshCommands();\n    this.emit('initialized');\n  }\n  \n  /**\n   * \uAE30\uBCF8 \uB0B4\uC7A5 \uBA85\uB839\uC5B4 \uB4F1\uB85D\n   */\n  private registerCoreCommands(): void {\n    \n    this.register('core', 'help', async (args, flags) => {\n      const commands = this.getAllCommandUsages();\n      const atCommands = commands.filter(cmd => cmd.syntax.startsWith('@'));\n      \n      let helpText = '\uC0AC\uC6A9 \uAC00\uB2A5\uD55C @ \uBA85\uB839\uC5B4:\\n\\n';\n      \n      \n      const pluginGroups = new Map<string, CommandUsage[]>();\n      atCommands.forEach(cmd => {\n        const groupName = cmd.agentId;\n        if (!pluginGroups.has(groupName)) {\n          pluginGroups.set(groupName, []);\n        }\n        const cmdGroup = pluginGroups.get(groupName);\n        if (cmdGroup) {\n          cmdGroup.push(cmd);\n        }\n      });\n      \n      \n      pluginGroups.forEach((cmds, plugin) => {\n        helpText += `[${plugin}]\\n`;\n        cmds.forEach(cmd => {\n          helpText += `  ${cmd.syntax} - ${cmd.description}\\n`;\n        });\n        helpText += '\\n';\n      });\n      \n      return {\n        success: true,\n        message: helpText,\n        displayMode: 'text'\n      };\n    });\n    \n    \n    this.register('core', '/help', async (args, flags) => {\n      const commands = this.getAllCommandUsages();\n      const slashCommands = commands.filter(cmd => cmd.syntax.startsWith('/'));\n      \n      let helpText = '# \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uBA85\uB839\uC5B4\\n\\n';\n      \n      \n      helpText += '## / \uBA85\uB839\uC5B4 (\uB0B4\uBD80 \uAE30\uB2A5)\\n\\n';\n      slashCommands.forEach(cmd => {\n        helpText += `- \\`${cmd.syntax}\\` - ${cmd.description}\\n`;\n      });\n      \n      \n      helpText += '\\n### \uAE30\uBCF8 \uBA85\uB839\uC5B4\\n\\n';\n      helpText += '- `/clear` - \uB300\uD654 \uAE30\uB85D \uC9C0\uC6B0\uAE30\\n';\n      helpText += '- `/model <\uBAA8\uB378ID>` - \uC0AC\uC6A9\uD560 \uBAA8\uB378 \uBCC0\uACBD\\n';\n      helpText += '- `/debug` - \uB514\uBC84\uADF8 \uC815\uBCF4 \uD45C\uC2DC\\n';\n      \n      \n      helpText += '\\n## @ \uBA85\uB839\uC5B4 (\uC678\uBD80 \uC2DC\uC2A4\uD15C \uC5F0\uB3D9)\\n\\n';\n      helpText += '@ \uBA85\uB839\uC5B4 \uBAA9\uB85D\uC744 \uBCF4\uB824\uBA74 `/help:at` \uBA85\uB839\uC5B4\uB97C \uC0AC\uC6A9\uD558\uC138\uC694.\\n';\n      \n      return {\n        success: true,\n        message: helpText,\n        displayMode: 'markdown'\n      };\n    });\n    \n    \n    this.register('core', '/help:at', async (args, flags) => {\n      const commands = this.getAllCommandUsages();\n      const atCommands = commands.filter(cmd => cmd.syntax.startsWith('@'));\n      \n      let helpText = '# @ \uBA85\uB839\uC5B4 \uBAA9\uB85D\\n\\n';\n      \n      \n      const pluginGroups = new Map<string, CommandUsage[]>();\n      atCommands.forEach(cmd => {\n        const groupName = cmd.agentId;\n        if (!pluginGroups.has(groupName)) {\n          pluginGroups.set(groupName, []);\n        }\n        pluginGroups.get(groupName)!.push(cmd);\n      });\n      \n      \n      if (pluginGroups.size === 0) {\n        helpText += '\uB4F1\uB85D\uB41C @ \uBA85\uB839\uC5B4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.\\n\\n';\n        helpText += '\uAC01 \uD50C\uB7EC\uADF8\uC778\uC740 \uC790\uCCB4 \uBA85\uB839\uC5B4\uB97C \uC81C\uACF5\uD569\uB2C8\uB2E4. \uC124\uC815\uC5D0 \uD50C\uB7EC\uADF8\uC778\uC744 \uCD94\uAC00\uD558\uBA74 \uB354 \uB9CE\uC740 \uBA85\uB839\uC5B4\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.';\n      } else {\n        pluginGroups.forEach((cmds, plugin) => {\n          helpText += `## ${plugin} \uD50C\uB7EC\uADF8\uC778\\n\\n`;\n          cmds.forEach(cmd => {\n            helpText += `- \\`${cmd.syntax}\\` - ${cmd.description}\\n`;\n          });\n          helpText += '\\n';\n        });\n      }\n      \n      return {\n        success: true,\n        message: helpText,\n        displayMode: 'markdown'\n      };\n    });\n    \n    \n    this.register('core', '/model', async (args, flags) => {\n      try {\n        \n        if (args.length < 1) {\n          return {\n            success: false,\n            message: '\uC0AC\uC6A9\uBC95: /model <\uBAA8\uB378ID> - \uC608: /model gpt-3.5-turbo',\n            displayMode: 'text'\n          };\n        }\n        \n        const modelId = args[0].toString();\n        \n        \n        const vscode = require('vscode');\n        const config = vscode.workspace.getConfiguration('ape.llm');\n        await config.update('defaultModel', modelId, vscode.ConfigurationTarget.Global);\n        \n        return {\n          success: true,\n          message: `\uBAA8\uB378\uC774 '${modelId}'(\uC73C)\uB85C \uBCC0\uACBD\uB418\uC5C8\uC2B5\uB2C8\uB2E4.`,\n          displayMode: 'text'\n        };\n      } catch (error) {\n        console.error('\uBAA8\uB378 \uBCC0\uACBD \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n        return {\n          success: false,\n          error: error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958',\n          message: `\uBAA8\uB378 \uBCC0\uACBD \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`,\n          displayMode: 'text'\n        };\n      }\n    });\n    \n    \n    this.register('core', 'models', async (args, flags) => {\n      try {\n        \n        const models = [\n          { id: 'gpt-3.5-turbo', name: 'GPT-3.5 Turbo', provider: 'OpenAI' },\n          { id: 'gpt-4', name: 'GPT-4', provider: 'OpenAI' },\n          { id: 'claude-2', name: 'Claude 2', provider: 'Anthropic' },\n          { id: 'claude-instant', name: 'Claude Instant', provider: 'Anthropic' }\n        ];\n        \n        let response = '# \uC0AC\uC6A9 \uAC00\uB2A5\uD55C LLM \uBAA8\uB378\\n\\n';\n        \n        \n        for (const model of models) {\n          response += `## ${model.name} (${model.provider})\\n`;\n          response += `- ID: \\`${model.id}\\`\\n\\n`;\n        }\n        \n        response += '\uBAA8\uB378\uC744 \uBCC0\uACBD\uD558\uB824\uBA74 `/model <\uBAA8\uB378ID>` \uBA85\uB839\uC5B4\uB97C \uC0AC\uC6A9\uD558\uC138\uC694.';\n        \n        return {\n          success: true,\n          message: response,\n          displayMode: 'markdown'\n        };\n      } catch (error) {\n        console.error('\uBAA8\uB378 \uBAA9\uB85D \uC870\uD68C \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n        return {\n          success: false,\n          message: '\uBAA8\uB378 \uBAA9\uB85D\uC744 \uAC00\uC838\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.',\n          displayMode: 'text'\n        };\n      }\n    });\n    \n    \n    this.register('core', '/debug', async (args, flags) => {\n      try {\n        const debugInfo = {\n          timestamp: new Date().toISOString(),\n          commands: this.getAllCommandUsages().length,\n          handlers: Array.from(this._handlers.keys()).map(agent => ({\n            agent,\n            commands: Array.from(this._handlers.get(agent)?.keys() || [])\n          }))\n        };\n        \n        return {\n          success: true,\n          message: '# \uB514\uBC84\uADF8 \uC815\uBCF4\\n\\n' +\n                  `**\uC2DC\uAC04**: ${new Date().toLocaleString()}\\n\\n` +\n                  `**\uB4F1\uB85D\uB41C \uBA85\uB839\uC5B4**: ${debugInfo.commands}\uAC1C\\n\\n` +\n                  '**\uD578\uB4E4\uB7EC**:\\n```json\\n' + JSON.stringify(debugInfo.handlers, null, 2) + '\\n```\\n\\n' +\n                  '\uC2DC\uC2A4\uD15C\uC774 \uC815\uC0C1\uC801\uC73C\uB85C \uC791\uB3D9 \uC911\uC785\uB2C8\uB2E4.',\n          displayMode: 'markdown',\n          data: debugInfo\n        };\n      } catch (error) {\n        console.error('\uB514\uBC84\uADF8 \uC815\uBCF4 \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n        return {\n          success: false,\n          message: '\uB514\uBC84\uADF8 \uC815\uBCF4\uB97C \uC0DD\uC131\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.',\n          error: error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958',\n          displayMode: 'text'\n        };\n      }\n    });\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB4F1\uB85D\n   * @param agentId \uC5D0\uC774\uC804\uD2B8 ID\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param handler \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  register(agentId: string, command: string, handler: CommandHandler): boolean {\n    try {\n      if (!agentId || !command || !handler) {\n        console.error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uBA85\uB839\uC5B4 \uB4F1\uB85D \uC815\uBCF4:', { agentId, command });\n        return false;\n      }\n      \n      \n      if (!this._handlers.has(agentId)) {\n        this._handlers.set(agentId, new Map());\n      }\n      \n      const agentCommands = this._handlers.get(agentId)!;\n      \n      \n      if (agentCommands.has(command)) {\n        console.warn(`\uC774\uBBF8 \uB4F1\uB85D\uB41C \uBA85\uB839\uC5B4: ${agentId}:${command}`);\n        return false;\n      }\n      \n      \n      agentCommands.set(command, handler);\n      \n      \n      this.emit('command-registered', { agentId, command });\n      this.emit('commands-changed');\n      \n      return true;\n    } catch (error) {\n      console.error(`\uBA85\uB839\uC5B4 \uB4F1\uB85D \uC624\uB958 (${agentId}:${command}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uC870\uD68C\n   * @param agentId \uC5D0\uC774\uC804\uD2B8 ID\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB610\uB294 undefined\n   */\n  getHandler(agentId: string, command: string): CommandHandler | undefined {\n    const agentCommands = this._handlers.get(agentId);\n    if (!agentCommands) {\n      return undefined;\n    }\n    \n    return agentCommands.get(command);\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uC870\uD68C\n   * @returns \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB9F5\n   */\n  getAllHandlers(): Map<string, Map<string, CommandHandler>> {\n    return this._handlers;\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uB9F5 \uAC00\uC838\uC624\uAE30 (UI \uD638\uD658\uC131 \uBA54\uC11C\uB4DC)\n   * @returns \uBA85\uB839\uC5B4 \uB9F5\n   */\n  getCommandMap(): Map<string, ICommand> {\n    return this._commands;\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uC870\uD68C\n   * @returns \uB3C4\uBA54\uC778\uBCC4 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB9F5\n   */\n  getAllDomainHandlers(): Map<CommandDomain, Map<string, CommandHandler>> {\n    return this._domainHandlers;\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB4F1\uB85D\n   * @param usage \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  registerUsage(usage: CommandUsage): boolean {\n    try {\n      if (!usage.agentId || !usage.command) {\n        console.error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95:', usage);\n        return false;\n      }\n      \n      \n      if (!this._usages.has(usage.agentId)) {\n        this._usages.set(usage.agentId, new Map());\n      }\n      \n      const agentUsages = this._usages.get(usage.agentId)!;\n      \n      \n      agentUsages.set(usage.command, usage);\n      \n      return true;\n    } catch (error) {\n      console.error(`\uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB4F1\uB85D \uC624\uB958 (${usage.agentId}:${usage.command}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @param agentId \uC5D0\uC774\uC804\uD2B8 ID\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB610\uB294 undefined\n   */\n  getUsage(agentId: string, command: string): CommandUsage | undefined {\n    const agentUsages = this._usages.get(agentId);\n    if (!agentUsages) {\n      return undefined;\n    }\n    \n    return agentUsages.get(command);\n  }\n  \n  /**\n   * \uC5D0\uC774\uC804\uD2B8\uC758 \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @param agentId \uC5D0\uC774\uC804\uD2B8 ID\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getAgentCommands(agentId: string): CommandUsage[] {\n    const agentUsages = this._usages.get(agentId);\n    if (!agentUsages) {\n      return [];\n    }\n    \n    return Array.from(agentUsages.values());\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C (\uC5D0\uC774\uC804\uD2B8 \uAE30\uBC18 \uBC0F \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBAA8\uB450 \uD3EC\uD568)\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getAllCommandUsages(): CommandUsage[] {\n    const allUsages: CommandUsage[] = [];\n    \n    \n    this._usages.forEach(agentUsages => {\n      const usageValues = Array.from(agentUsages.values());\n      allUsages.push(...usageValues);\n    })\n    \n    \n    this._domainUsages.forEach(domainUsages => {\n      const usageValues = Array.from(domainUsages.values());\n      allUsages.push(...usageValues);\n    });\n    \n    return allUsages;\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C (/\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4)\n   * @returns \uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getAllSystemCommandUsages(): CommandUsage[] {\n    const allUsages = this.getAllCommandUsages();\n    \n    \n    return allUsages.filter(usage => \n      usage.syntax.startsWith('/') || \n      (usage.command && usage.command.startsWith('/'))\n    );\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C (@\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4)\n   * @returns \uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  getAllAgentCommandUsages(): CommandUsage[] {\n    const allUsages = this.getAllCommandUsages();\n    \n    \n    return allUsages.filter(usage => \n      usage.syntax.startsWith('@') || \n      (usage.command && usage.command.startsWith('@'))\n    );\n  }\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uB610\uB294 \uC5D0\uC774\uC804\uD2B8 \uAE30\uBC18\uC73C\uB85C \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uAC00\uC838\uC624\uAE30\n   * @param grouped \uADF8\uB8F9\uD654 \uC5EC\uBD80 (default: true - \uB3C4\uBA54\uC778/\uC5D0\uC774\uC804\uD2B8\uBCC4 \uADF8\uB8F9\uD654)\n   * @returns \uADF8\uB8F9\uD654\uB41C \uBA85\uB839\uC5B4 \uB9F5 \uB610\uB294 \uC804\uCCB4 \uBAA9\uB85D\n   */\n  getAllCommands(grouped: boolean = true): Map<string, CommandUsage[]> | CommandUsage[] {\n    if (!grouped) {\n      return this.getAllCommandUsages();\n    }\n    \n    const groupedCommands = new Map<string, CommandUsage[]>();\n    \n    \n    this._usages.forEach((usages, agentId) => {\n      const usagesList = Array.from(usages.values());\n      if (usagesList.length > 0) {\n        groupedCommands.set(agentId, usagesList);\n      }\n    });\n    \n    \n    this._domainUsages.forEach((usages, domain) => {\n      const domainKey = `domain:${domain}`;\n      const usagesList = Array.from(usages.values());\n      if (usagesList.length > 0) {\n        groupedCommands.set(domainKey, usagesList);\n      }\n    });\n    \n    return groupedCommands;\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589\n   * @param fullCommand \uC804\uCCB4 \uBA85\uB839\uC5B4 (agentId:command \uB610\uB294 domain:command \uD615\uC2DD)\n   * @param args \uBA85\uB839\uC5B4 \uC778\uC790\n   * @param flags \uBA85\uB839\uC5B4 \uD50C\uB798\uADF8\n   * @returns \uBA85\uB839\uC5B4 \uC2E4\uD589 \uACB0\uACFC\n   */\n  public async executeCommand(fullCommand: string, args: any[] = [], flags: Record<string, any> = {}): Promise<CommandResult> {\n    \n    const parts = fullCommand.split(':');\n    let agentId: string = 'core'; \n    let command: string;\n    let domain: CommandDomain = CommandDomain.NONE;\n    \n    if (parts.length === 1) {\n      \n      command = parts[0] || '';\n    } else {\n      \n      const firstPart = parts[0] || '';\n      \n      \n      const domainValue = firstPart && firstPart.startsWith('@') ? firstPart.substring(1) : firstPart;\n      \n      \n      try {\n        if (domainValue) {\n          domain = Object.values(CommandDomain).find(\n            d => d && d.toString().toLowerCase() === domainValue.toLowerCase()\n          ) as CommandDomain || CommandDomain.NONE;\n        }\n      } catch (e) {\n        domain = CommandDomain.NONE;\n      }\n      \n      if (domain !== CommandDomain.NONE) {\n        \n        command = parts.slice(1).join(':') || '';\n      } else {\n        \n        agentId = firstPart;\n        command = parts.slice(1).join(':') || '';\n      }\n    }\n    \n    \n    let handler: CommandHandler | undefined;\n    \n    if (domain !== CommandDomain.NONE) {\n      handler = this.getDomainHandler(domain, command);\n    } else {\n      handler = this.getHandler(agentId, command);\n    }\n    \n    if (!handler) {\n      \n      let suggestions: string[] = [];\n      const commandsList = domain !== CommandDomain.NONE\n        ? this.getDomainCommands(domain).map(u => u.command)\n        : this.getAgentCommands(agentId).map(u => u.command);\n      \n      \n      const MAX_LEVENSHTEIN_DISTANCE = 3;\n      \n      for (const cmd of commandsList) {\n        const distance = this.calculateLevenshteinDistance(command, cmd);\n        if (distance <= MAX_LEVENSHTEIN_DISTANCE) {\n          suggestions.push(cmd);\n        }\n      }\n      \n      \n      if (suggestions.length === 0) {\n        if (domain !== CommandDomain.NONE) {\n          suggestions = this.getDomainCommands(domain)\n            .slice(0, 3)\n            .map(u => `@${domain}:${u.command}`);\n        } else {\n          \n          suggestions = ['/help', '@help'];\n        }\n      } else {\n        \n        if (domain !== CommandDomain.NONE) {\n          suggestions = suggestions.map(s => `@${domain}:${s}`);\n        } else if (agentId) {\n          const prefix = command.startsWith('/') ? '/' : '@';\n          suggestions = suggestions.map(s => `${agentId}:${s}`);\n        }\n      }\n      \n      return {\n        success: false,\n        error: `\uBA85\uB839\uC5B4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${domain !== CommandDomain.NONE ? `@${domain}:${command}` : `${agentId}:${command}`}`,\n        displayMode: 'text',\n        suggestedNextCommands: suggestions\n      };\n    }\n    \n    try {\n      \n      const result = await handler(args, flags);\n      \n      \n      if (typeof result === 'string') {\n        const stringResult: string = result;\n        return {\n          success: true,\n          message: stringResult,\n          displayMode: stringResult.includes('#') || stringResult.includes('**') ? 'markdown' : 'text'\n        };\n      } else if (result && typeof result === 'object') {\n        \n        if ('success' in result) {\n          return result as CommandResult;\n        } else if ('content' in result) {\n          \n          const contentResult = result as { content: string };\n          return {\n            success: true,\n            message: contentResult.content,\n            data: result,\n            displayMode: 'markdown'\n          };\n        } else {\n          return {\n            success: true,\n            data: result,\n            displayMode: 'json'\n          };\n        }\n      } else {\n        \n        return {\n          success: true,\n          data: result,\n          displayMode: 'text'\n        };\n      }\n    } catch (error) {\n      console.error(`\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC624\uB958 (${domain !== CommandDomain.NONE ? `@${domain}:${command}` : `${agentId}:${command}`}):`, error);\n      \n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n        displayMode: 'text'\n      };\n    }\n  }\n  \n  /**\n   * \uB808\uBCA4\uC288\uD0C0\uC778 \uAC70\uB9AC \uACC4\uC0B0 (\uBB38\uC790\uC5F4 \uC720\uC0AC\uB3C4)\n   * @param a \uCCAB \uBC88\uC9F8 \uBB38\uC790\uC5F4\n   * @param b \uB450 \uBC88\uC9F8 \uBB38\uC790\uC5F4\n   * @returns \uB808\uBCA4\uC288\uD0C0\uC778 \uAC70\uB9AC\n   */\n  private calculateLevenshteinDistance(a: string, b: string): number {\n    if (!a) return b ? b.length : 0;\n    if (!b) return a.length;\n    \n    if (a.length === 0) return b.length;\n    if (b.length === 0) return a.length;\n    \n    \n    let prev = Array(b.length + 1).fill(0);\n    let curr = Array(b.length + 1).fill(0);\n    \n    \n    for (let j = 0; j <= b.length; j++) {\n      prev[j] = j;\n    }\n    \n    \n    for (let i = 1; i <= a.length; i++) {\n      \n      curr[0] = i;\n      \n      for (let j = 1; j <= b.length; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        curr[j] = Math.min(\n          prev[j] + 1,        \n          curr[j - 1] + 1,     \n          prev[j - 1] + cost   \n        );\n      }\n      \n      \n      [prev, curr] = [curr, prev];\n    }\n    \n    \n    return prev[b.length];\n  }\n  \n  /**\n   * \uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 \uB4F1\uB85D - \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC9C0\uC6D0 \uCD94\uAC00\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param handler \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   * @param usage \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC815\uBCF4 (\uC120\uD0DD\uC801)\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  public registerAgentCommand(\n    domain: CommandDomain,\n    command: string,\n    handler: CommandHandler,\n    usage?: Partial<CommandUsage>\n  ): boolean {\n    try {\n      if (!domain || !command || !handler) {\n        console.error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 \uB4F1\uB85D \uC815\uBCF4:', { domain, command });\n        return false;\n      }\n      \n      \n      if (!this._domainHandlers.has(domain)) {\n        this._domainHandlers.set(domain, new Map());\n      }\n      \n      const domainCommands = this._domainHandlers.get(domain)!;\n      \n      \n      if (domainCommands.has(command)) {\n        console.warn(`\uC774\uBBF8 \uB4F1\uB85D\uB41C \uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4: ${domain}:${command}`);\n        return false;\n      }\n      \n      \n      domainCommands.set(command, handler);\n      \n      \n      if (usage) {\n        this.registerDomainUsage({\n          domain,\n          command,\n          description: usage.description || '',\n          syntax: usage.syntax || `@${domain}:${command}`,\n          examples: usage.examples || [],\n          flags: usage.flags || []\n        });\n      }\n      \n      \n      this.emit('agent-command-registered', { domain, command });\n      this.emit('commands-changed');\n      \n      return true;\n    } catch (error) {\n      console.error(`\uC5D0\uC774\uC804\uD2B8 \uBA85\uB839\uC5B4 \uB4F1\uB85D \uC624\uB958 (${domain}:${command}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 \uB4F1\uB85D - \uB0B4\uBD80 \uC2DC\uC2A4\uD15C \uAE30\uB2A5\uC744 \uC704\uD55C \uBA85\uB839\uC5B4\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984 (\uC2AC\uB798\uC2DC \uD3EC\uD568)\n   * @param handler \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC\n   * @param usage \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC815\uBCF4 (\uC120\uD0DD\uC801)\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  public registerSystemCommand(\n    command: string,\n    handler: CommandHandler,\n    usage?: Partial<CommandUsage>\n  ): boolean {\n    \n    const fullCommand = command.startsWith('/') ? command : `/${command}`;\n    \n    \n    const registrationResult = this.register('core', fullCommand, handler);\n    \n    \n    if (registrationResult && usage) {\n      this.registerUsage({\n        agentId: 'core',\n        command: fullCommand,\n        description: usage.description || '',\n        syntax: usage.syntax || fullCommand,\n        examples: usage.examples || [],\n        flags: usage.flags || []\n      });\n    }\n    \n    return registrationResult;\n  }\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB4F1\uB85D\n   * @param usage \uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  public registerDomainUsage(usage: { domain: CommandDomain, command: string } & Omit<CommandUsage, 'agentId'>): boolean {\n    try {\n      if (!usage.domain || !usage.command) {\n        console.error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95:', usage);\n        return false;\n      }\n      \n      \n      if (!this._domainUsages.has(usage.domain)) {\n        this._domainUsages.set(usage.domain, new Map());\n      }\n      \n      const domainUsages = this._domainUsages.get(usage.domain)!;\n      \n      \n      domainUsages.set(usage.command, {\n        agentId: usage.domain.toString(), \n        command: usage.command,\n        description: usage.description,\n        syntax: usage.syntax,\n        examples: usage.examples || [],\n        flags: usage.flags || []\n      });\n      \n      return true;\n    } catch (error) {\n      console.error(`\uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB4F1\uB85D \uC624\uB958 (${usage.domain}:${usage.command}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uC870\uD68C\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uD578\uB4E4\uB7EC \uB610\uB294 undefined\n   */\n  public getDomainHandler(domain: CommandDomain, command: string): CommandHandler | undefined {\n    const domainCommands = this._domainHandlers.get(domain);\n    if (!domainCommands) {\n      return undefined;\n    }\n    \n    return domainCommands.get(command);\n  }\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uB610\uB294 undefined\n   */\n  public getDomainUsage(domain: CommandDomain, command: string): CommandUsage | undefined {\n    const domainUsages = this._domainUsages.get(domain);\n    if (!domainUsages) {\n      return undefined;\n    }\n    \n    return domainUsages.get(command);\n  }\n  \n  /**\n   * \uB3C4\uBA54\uC778\uC758 \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uC870\uD68C\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @returns \uBA85\uB839\uC5B4 \uC0AC\uC6A9\uBC95 \uBAA9\uB85D\n   */\n  public getDomainCommands(domain: CommandDomain): CommandUsage[] {\n    const domainUsages = this._domainUsages.get(domain);\n    if (!domainUsages) {\n      return [];\n    }\n    \n    return Array.from(domainUsages.values());\n  }\n  \n  /**\n   * \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC0DD\uC131\n   * \uD604\uC7AC \uCEE8\uD14D\uC2A4\uD2B8\uC5D0 \uB530\uB77C \uBA85\uB839\uC5B4\uB97C \uC790\uB3D9 \uC0DD\uC131\uD558\uAC70\uB098 \uCD94\uCC9C\n   * @param commandPattern \uAE30\uBCF8 \uBA85\uB839\uC5B4 \uB610\uB294 \uBA85\uB839\uC5B4 \uD328\uD134\n   * @param additionalContext \uCD94\uAC00 \uCEE8\uD14D\uC2A4\uD2B8 \uAC1D\uCCB4 (\uC120\uD0DD\uC801)\n   * @returns \uCEE8\uD14D\uC2A4\uD2B8 \uC778\uC2DD \uBA85\uB839\uC5B4 \uB610\uB294 \uBA85\uB839\uC5B4 \uBC30\uC5F4\n   */\n  public async generateContextualCommand(\n    commandPattern: string, \n    additionalContext?: Record<string, any>\n  ): Promise<string | string[]> {\n    \n    if (additionalContext) {\n      this._contextCache = { ...this._contextCache, ...additionalContext };\n    }\n    \n    \n    const context = { ...this._contextCache };\n    \n    \n    let domain: CommandDomain = CommandDomain.NONE;\n    \n    \n    if (commandPattern && commandPattern.startsWith('@')) {\n      const parts = commandPattern.substring(1).split(':');\n      const domainPart = parts.length > 0 ? parts[0] : '';\n      \n      \n      if (domainPart) {\n        switch (domainPart.toLowerCase()) {\n          case 'git':\n            domain = CommandDomain.GIT;\n            break;\n          case 'jira':\n            domain = CommandDomain.JIRA;\n            break;\n          case 'pocket':\n            domain = CommandDomain.POCKET;\n            break;\n          case 'doc':\n            domain = CommandDomain.DOC;\n            break;\n          case 'vault':\n            domain = CommandDomain.VAULT;\n            break;\n          case 'rules':\n            domain = CommandDomain.RULES;\n            break;\n          default:\n            domain = CommandDomain.NONE;\n        }\n      }\n    }\n    \n    \n    switch (domain) {\n      case CommandDomain.GIT:\n        return this._generateGitContextualCommand(commandPattern, context);\n      \n      case CommandDomain.JIRA:\n        return this._generateJiraContextualCommand(commandPattern, context);\n      \n      case CommandDomain.POCKET:\n        return this._generatePocketContextualCommand(commandPattern, context);\n      \n      case CommandDomain.DOC:\n        return this._generateDocContextualCommand(commandPattern, context);\n      \n      default:\n        \n        return commandPattern;\n    }\n  }\n  \n  /**\n   * Git \uBA85\uB839\uC5B4 \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uC0DD\uC131\n   * @param baseCommand \uAE30\uBCF8 Git \uBA85\uB839\uC5B4\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @returns \uC0DD\uC131\uB41C \uBA85\uB839\uC5B4 \uB610\uB294 \uBA85\uB839\uC5B4 \uBC30\uC5F4\n   */\n  private _generateGitContextualCommand(baseCommand: string, context: Record<string, any>): string | string[] {\n    \n    const parts = baseCommand.split(':');\n    if (parts.length < 2) return baseCommand;\n    \n    const command = parts[1];\n    \n    \n    switch (command) {\n      case 'checkout':\n        \n        if ('currentBranch' in context && context['currentBranch']) {\n          return `@git:checkout ${context['currentBranch']}`;\n        }\n        \n        \n        if ('branches' in context && Array.isArray(context['branches'])) {\n          return context['branches'].slice(0, 5).map((branch: string) => `@git:checkout ${branch}`);\n        }\n        break;\n        \n      case 'commit':\n        \n        if ('changedFiles' in context && Array.isArray(context['changedFiles']) && context['changedFiles'].length > 0) {\n          \n          const firstFile = context['changedFiles'][0];\n          return `@git:commit -m \"Update ${firstFile}\"`;\n        }\n        \n        \n        if ('activeFile' in context && context['activeFile']) {\n          const fileName = context['activeFile'].split('/').pop();\n          return `@git:commit -m \"Update ${fileName || 'file'}\"`;\n        }\n        break;\n        \n      case 'push':\n        \n        if ('currentBranch' in context && context['currentBranch']) {\n          return `@git:push origin ${context['currentBranch']}`;\n        }\n        break;\n        \n      case 'pull':\n        \n        if ('currentBranch' in context && context['currentBranch']) {\n          return `@git:pull origin ${context['currentBranch']}`;\n        }\n        break;\n    }\n    \n    \n    return baseCommand;\n  }\n  \n  /**\n   * Jira \uBA85\uB839\uC5B4 \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uC0DD\uC131\n   * @param baseCommand \uAE30\uBCF8 Jira \uBA85\uB839\uC5B4\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @returns \uC0DD\uC131\uB41C \uBA85\uB839\uC5B4 \uB610\uB294 \uBA85\uB839\uC5B4 \uBC30\uC5F4\n   */\n  private _generateJiraContextualCommand(baseCommand: string, context: Record<string, any>): string | string[] {\n    \n    const parts = baseCommand.split(':');\n    if (parts.length < 2) return baseCommand;\n    \n    const command = parts[1];\n    \n    \n    switch (command) {\n      case 'view':\n      case 'issue':\n        \n        if ('issueKey' in context && context['issueKey']) {\n          return `@jira:view ${context['issueKey']}`;\n        }\n        \n        \n        if ('recentIssues' in context && Array.isArray(context['recentIssues'])) {\n          return context['recentIssues'].slice(0, 3).map((issue: any) => \n            `@jira:view ${typeof issue === 'string' ? issue : (issue && typeof issue === 'object' && 'key' in issue) ? issue.key : 'unknown'}`\n          );\n        }\n        break;\n        \n      case 'create':\n        \n        if ('activeFile' in context && context['activeFile']) {\n          const fileName = context['activeFile'].split('/').pop();\n          return `@jira:create --title \"Issue with ${fileName || 'file'}\"`;\n        }\n        break;\n    }\n    \n    \n    return baseCommand;\n  }\n  \n  /**\n   * Pocket \uBA85\uB839\uC5B4 \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uC0DD\uC131\n   * @param baseCommand \uAE30\uBCF8 Pocket \uBA85\uB839\uC5B4\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @returns \uC0DD\uC131\uB41C \uBA85\uB839\uC5B4 \uB610\uB294 \uBA85\uB839\uC5B4 \uBC30\uC5F4\n   */\n  private _generatePocketContextualCommand(baseCommand: string, context: Record<string, any>): string | string[] {\n    \n    const parts = baseCommand.split(':');\n    if (parts.length < 2) return baseCommand;\n    \n    const command = parts[1];\n    \n    \n    switch (command) {\n      case 'read':\n        \n        if ('articleId' in context && context['articleId']) {\n          return `@pocket:read ${context['articleId']}`;\n        }\n        \n        \n        if ('recentArticles' in context && Array.isArray(context['recentArticles'])) {\n          return context['recentArticles'].slice(0, 3).map((article: any) => \n            `@pocket:read ${typeof article === 'string' ? article : (article && typeof article === 'object' && 'id' in article) ? article.id : 'unknown'}`\n          );\n        }\n        break;\n        \n      case 'search':\n        \n        if ('searchQuery' in context && context['searchQuery']) {\n          return `@pocket:search ${context['searchQuery']}`;\n        }\n        break;\n    }\n    \n    \n    return baseCommand;\n  }\n  \n  /**\n   * Doc \uBA85\uB839\uC5B4 \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uC0DD\uC131\n   * @param baseCommand \uAE30\uBCF8 Doc \uBA85\uB839\uC5B4\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @returns \uC0DD\uC131\uB41C \uBA85\uB839\uC5B4 \uB610\uB294 \uBA85\uB839\uC5B4 \uBC30\uC5F4\n   */\n  private _generateDocContextualCommand(baseCommand: string, context: Record<string, any>): string | string[] {\n    \n    const parts = baseCommand.split(':');\n    if (parts.length < 2) return baseCommand;\n    \n    const command = parts[1];\n    \n    \n    switch (command) {\n      case 'search':\n        \n        if ('searchQuery' in context && context['searchQuery']) {\n          return `@doc:search ${context['searchQuery']}`;\n        }\n        break;\n    }\n    \n    \n    return baseCommand;\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uCD94\uCC9C \uC81C\uC548 \uBAA9\uB85D \uC0DD\uC131\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @param limit \uCD5C\uB300 \uCD94\uCC9C \uC218 (\uAE30\uBCF8\uAC12: 5)\n   * @returns \uCD94\uCC9C \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   */\n  public async suggestCommands(context: Record<string, any>, limit: number = 5): Promise<string[]> {\n    \n    this._contextCache = { ...this._contextCache, ...context };\n    \n    const suggestions: string[] = [];\n    \n    \n    if ('activeFile' in context && context['activeFile']) {\n      const activeFile = context['activeFile'] as string;\n      const parts = activeFile ? activeFile.split('.') : [];\n      const fileExtension = (parts && parts.length > 1) ? parts[parts.length - 1]?.toLowerCase() || '' : '';\n      \n      \n      switch (fileExtension) {\n        case 'js':\n        case 'ts':\n        case 'jsx':\n        case 'tsx':\n          suggestions.push('@git:status');\n          suggestions.push('@git:diff');\n          suggestions.push('@git:commit');\n          break;\n          \n        case 'md':\n        case 'txt':\n          suggestions.push('@doc:search');\n          suggestions.push('@doc:index');\n          break;\n      }\n    }\n    \n    \n    if ('currentBranch' in context && context['currentBranch']) {\n      suggestions.push(`@git:push origin ${context['currentBranch']}`);\n      suggestions.push(`@git:pull origin ${context['currentBranch']}`);\n    }\n    \n    \n    if ('recentCommands' in context && Array.isArray(context['recentCommands'])) {\n      suggestions.push(...context['recentCommands'].slice(0, 3));\n    }\n    \n    \n    const uniqueSuggestions: string[] = [];\n    \n    for (const suggestion of suggestions) {\n      if (!uniqueSuggestions.includes(suggestion)) {\n        uniqueSuggestions.push(suggestion);\n      }\n    }\n    return uniqueSuggestions.slice(0, limit);\n  }\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778\uC5D0\uC11C \uBAA8\uB4E0 \uBA85\uB839\uC5B4\uB97C \uB2E4\uC2DC \uB85C\uB4DC\uD569\uB2C8\uB2E4.\n   * @returns \uB85C\uB4DC\uB41C \uBA85\uB839\uC5B4 \uC218\n   */\n  public refreshCommands(): number {\n    if (!this._pluginRegistry) {\n      return 0;\n    }\n    \n    \n    this._handlers.clear();\n    this._usages.clear();\n    this._domainHandlers.clear();\n    this._domainUsages.clear();\n    \n    \n    const plugins = this._pluginRegistry.getEnabledPlugins() || [];\n    let commandCount = 0;\n    \n    for (const plugin of plugins) {\n      if (!plugin) continue;\n      \n      const pluginCommands = plugin.getCommands?.() || [];\n      for (const cmd of pluginCommands) {\n        if (!cmd || !cmd.name) continue;\n        \n        const fullCommandName = cmd.name;\n        \n        \n        let domain = CommandDomain.NONE;\n        if (cmd.domain) {\n          domain = cmd.domain as CommandDomain;\n        } else if (plugin.getDomain) {\n          \n          const domainStr = plugin.getDomain();\n          domain = Object.values(CommandDomain).find(\n            d => d.toString().toLowerCase() === domainStr.toLowerCase()\n          ) as CommandDomain || CommandDomain.NONE;\n        }\n        \n        \n        const handler: CommandHandler = async (args, flags) => {\n          \n          return await plugin.executeCommand(fullCommandName, args);\n        };\n        \n        \n        let registered = false;\n        \n        if (domain !== CommandDomain.NONE) {\n          \n          registered = this.registerAgentCommand(domain, fullCommandName, handler, {\n            description: cmd.description || '',\n            syntax: cmd.syntax || `@${domain}:${fullCommandName}`,\n            examples: cmd.examples || []\n          });\n        } else {\n          \n          registered = this.register(plugin.id, fullCommandName, handler);\n          \n          if (registered) {\n            \n            this.registerUsage({\n              agentId: plugin.id,\n              command: fullCommandName,\n              description: cmd.description || '',\n              syntax: cmd.syntax || `@${plugin.id}:${fullCommandName}`,\n              examples: cmd.examples || []\n            });\n          }\n        }\n        \n        if (registered) {\n          commandCount++;\n        }\n      }\n    }\n    \n    this.emit('commands-changed');\n    return commandCount;\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uBCC0\uACBD \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\uB97C \uB4F1\uB85D\uD569\uB2C8\uB2E4.\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   * @returns this\n   */\n  public onCommandsChanged(listener: () => void): this {\n    this.on('commands-changed', listener);\n    return this;\n  }\n  \n  /**\n   * \uD604\uC7AC \uCEE8\uD14D\uC2A4\uD2B8 \uCE90\uC2DC \uC870\uD68C\n   * @returns \uCEE8\uD14D\uC2A4\uD2B8 \uCE90\uC2DC \uAC1D\uCCB4\n   */\n  public getContextCache(): any {\n    return this._contextCache;\n  }\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uC870\uD68C - PluginRegistryService \uD504\uB85D\uC2DC \uBA54\uC11C\uB4DC\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @returns \uD50C\uB7EC\uADF8\uC778 \uC778\uC2A4\uD134\uC2A4 \uB610\uB294 undefined\n   */\n  public getPlugin(pluginId: string): any {\n    if (!this._pluginRegistry) {\n      return undefined;\n    }\n    return this._pluginRegistry.getPlugin(pluginId);\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uCC3E\uAE30 (ID \uB610\uB294 \uC774\uB984\uC73C\uB85C)\n   * @param agentId \uC5D0\uC774\uC804\uD2B8/\uD50C\uB7EC\uADF8\uC778 ID\n   * @param commandName \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uBA85\uB839\uC5B4 \uAC1D\uCCB4 \uB610\uB294 undefined\n   */\n  public findCommand(agentId: string, commandName: string): any {\n    if (!agentId || !commandName) {\n      return undefined;\n    }\n    \n    \n    const handler = this.getHandler(agentId, commandName);\n    if (!handler) {\n      return undefined;\n    }\n    \n    \n    const usage = this.getUsage(agentId, commandName);\n    \n    \n    const cmdObj: Record<string, any> = {\n      id: `${agentId}:${commandName}`,\n      handler,\n      agentId,\n      command: commandName,\n    };\n    \n    \n    if (usage) {\n      Object.entries(usage).forEach(([key, value]) => {\n        if (value !== undefined) {\n          cmdObj[key] = value;\n        }\n      });\n    }\n    \n    return cmdObj;\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4\uB97C \uB4F1\uB85D\uD569\uB2C8\uB2E4. (\uB808\uAC70\uC2DC \uD638\uD658\uC131)\n   * @param command \uBA85\uB839\uC5B4 \uAC1D\uCCB4\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  public registerCommand(command: ICommand): boolean {\n    try {\n      if (!command || !command.id) {\n        console.error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uBA85\uB839\uC5B4:', command);\n        return false;\n      }\n      \n      \n      const parts = command.id.split(':');\n      let agentId = 'core';\n      let commandName = '';\n      \n      if (parts.length === 1) {\n        \n        agentId = 'core';\n        commandName = parts[0] || '';\n      } else if (parts.length > 1) {\n        \n        agentId = parts[0] || '';\n        commandName = parts.slice(1).join(':') || '';\n      } else {\n        console.error('Invalid command ID format:', command.id);\n        return false;\n      }\n      \n      if (!commandName) {\n        console.error('Command name cannot be empty');\n        return false;\n      }\n      \n      \n      this._commands.set(command.id, command);\n      \n      \n      return this.register(agentId, commandName, command.handler);\n    } catch (error) {\n      console.error(`\uBA85\uB839\uC5B4 \uB4F1\uB85D \uC624\uB958 (${command?.id}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uB808\uAC70\uC2DC UI \uD638\uD658\uC131 \uBA54\uC11C\uB4DC: \uBA85\uB839\uC5B4 \uC874\uC7AC \uC5EC\uBD80 \uD655\uC778\n   * @param commandId \uBA85\uB839\uC5B4 ID\n   * @returns \uBA85\uB839\uC5B4 \uC874\uC7AC \uC5EC\uBD80\n   */\n  public hasCommand(commandId: string): boolean {\n    if (!commandId) return false;\n    \n    const parts = commandId.split(':');\n    let agentId = 'core';\n    let command = '';\n    \n    if (parts.length === 1) {\n      agentId = 'core';\n      command = parts[0] || '';\n    } else if (parts.length > 1) {\n      agentId = parts[0] || '';\n      command = parts.slice(1).join(':') || '';\n    } else {\n      return false;\n    }\n    \n    return this.getHandler(agentId, command) !== undefined;\n  }\n  \n  /**\n   * \uB808\uAC70\uC2DC UI \uD638\uD658\uC131 \uBA54\uC11C\uB4DC: \uD2B9\uC815 \uD0C0\uC785\uC758 \uBA85\uB839\uC5B4 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @param type \uBA85\uB839\uC5B4 \uD0C0\uC785\n   * @returns \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   */\n  public getCommandsByType(type: CommandType): ICommand[] {\n    const commands: ICommand[] = [];\n    \n    \n    this._handlers.forEach((handlers, agentId) => {\n      handlers.forEach((handler, commandName) => {\n        \n        const usage = this.getUsage(agentId, commandName);\n        \n        if (usage) {\n          \n          let commandType = CommandType.NONE;\n          let prefix = CommandPrefix.NONE;\n          \n          if (usage.syntax.startsWith('@')) {\n            commandType = CommandType.AT;\n            prefix = CommandPrefix.AT;\n          } else if (usage.syntax.startsWith('/')) {\n            commandType = CommandType.SLASH;\n            prefix = CommandPrefix.SLASH;\n          }\n          \n          \n          if (commandType === type) {\n            commands.push({\n              id: `${agentId}:${commandName}`,\n              type: commandType,\n              prefix: prefix,\n              domain: usage.domain || CommandDomain.NONE,\n              description: usage.description,\n              handler\n            });\n          }\n        }\n      });\n    });\n    \n    return commands;\n  }\n}", "/**\n * \uBA85\uB839\uC5B4 \uC2E4\uD589\uAE30 \uBAA8\uB4C8\n * \n * \uD30C\uC2F1\uB41C \uBA85\uB839\uC5B4\uB97C \uC2E4\uD589\uD558\uACE0 \uACB0\uACFC\uB97C \uBC18\uD658\uD558\uB294 \uAE30\uB2A5 \uC81C\uACF5\n * @ \uBA85\uB839\uC5B4(\uC678\uBD80 \uC2DC\uC2A4\uD15C)\uC640 / \uBA85\uB839\uC5B4(\uB0B4\uBD80 \uAE30\uB2A5) \uAD6C\uBD84\uD558\uC5EC \uCC98\uB9AC\n */\n\nimport { \n  Command, CommandPrefix, CommandType, CommandDomain, \n  CommandResult, ICommandExecutor, ICommandRegistry, ParsedCommand\n} from '../../types/CommandTypes';\nimport { IPluginRegistry } from '../../types/PluginTypes';\nimport { CommandParserService } from './CommandParserService';\n\n/**\n * \uBA85\uB839\uC5B4 \uC2E4\uD589\uAE30 \uD074\uB798\uC2A4\n * \uBA85\uB839\uC5B4 \uC2E4\uD589 \uBC0F \uACB0\uACFC \uCC98\uB9AC \uB2F4\uB2F9\n */\nexport class CommandExecutorService implements ICommandExecutor {\n  /**\n   * \uBA85\uB839\uC5B4 \uD30C\uC11C \uC11C\uBE44\uC2A4\n   */\n  private parser: CommandParserService;\n  \n  /**\n   * \uC2E4\uD589 \uC774\uB825 \uC800\uC7A5\uC18C\n   */\n  private executionHistory: Array<{\n    command: Command;\n    result: CommandResult;\n    timestamp: number;\n    id: string;\n  }> = [];\n  \n  /**\n   * \uC2E4\uD589 \uC911\uC778 \uBA85\uB839\uC5B4 \uB9F5\n   */\n  private pendingCommands: Map<string, { \n    command: Command, \n    cancel: () => void,\n    timestamp: number\n  }> = new Map();\n  \n  /**\n   * CommandExecutorService \uC0DD\uC131\uC790\n   * @param commandRegistry \uBA85\uB839\uC5B4 \uB808\uC9C0\uC2A4\uD2B8\uB9AC\n   * @param pluginRegistry \uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC\n   */\n  constructor(\n    private commandRegistry: ICommandRegistry,\n    private pluginRegistry: IPluginRegistry\n  ) {\n    this.parser = new CommandParserService();\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589\n   * @param command \uC2E4\uD589\uD560 \uBA85\uB839\uC5B4\n   * @returns \uBA85\uB839\uC5B4 \uC2E4\uD589 \uACB0\uACFC\n   */\n  async execute(command: Command): Promise<CommandResult> {\n    \n    const commandId = `cmd_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n    \n    try {\n      \n      const startTime = Date.now();\n      \n      \n      const cancelController = new AbortController();\n      const signal = cancelController.signal;\n      \n      this.pendingCommands.set(commandId, {\n        command,\n        cancel: () => cancelController.abort(),\n        timestamp: startTime\n      });\n      \n      \n      let result: CommandResult;\n      \n      \n      if (signal.aborted) {\n        return {\n          success: false,\n          error: '\uBA85\uB839\uC5B4 \uC2E4\uD589\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n          displayMode: 'text'\n        };\n      }\n      \n      try {\n        \n        if (command.domain && command.domain !== CommandDomain.NONE) {\n          result = await this.executeDomainCommand(command, signal);\n        } else {\n          \n          switch (command.prefix) {\n            case CommandPrefix.AT:\n              \n              result = await this.executePluginCommand(command, signal);\n              break;\n              \n            case CommandPrefix.SLASH:\n              \n              result = await this.executeInternalCommand(command, signal);\n              break;\n              \n            default:\n              return {\n                success: false,\n                error: `\uC9C0\uC6D0\uD558\uC9C0 \uC54A\uB294 \uBA85\uB839\uC5B4 \uC811\uB450\uC0AC: ${command.prefix}`,\n                displayMode: 'text'\n              };\n          }\n        }\n      } catch (error) {\n        if (signal.aborted) {\n          return {\n            success: false,\n            error: '\uBA85\uB839\uC5B4 \uC2E4\uD589\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n            displayMode: 'text'\n          };\n        }\n        throw error; \n      }\n      \n      \n      const executionTime = Date.now() - startTime;\n      \n      \n      const normalizedResult = this.normalizeResult(result);\n      \n      \n      this.executionHistory.push({\n        command,\n        result: normalizedResult,\n        timestamp: Date.now(),\n        id: commandId\n      });\n      \n      \n      this.pendingCommands.delete(commandId);\n      \n      \n      console.log(`\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC644\uB8CC (${executionTime}ms): ${command.prefix}${command.domain !== CommandDomain.NONE ? command.domain : command.agentId}:${command.command}`);\n      \n      \n      return normalizedResult;\n    } catch (error) {\n      \n      this.pendingCommands.delete(commandId);\n      \n      \n      const errorResult: CommandResult = {\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n        displayMode: 'text'\n      };\n      \n      \n      this.executionHistory.push({\n        command,\n        result: errorResult,\n        timestamp: Date.now(),\n        id: commandId\n      });\n      \n      \n      console.error(`\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC2E4\uD328 (${command.prefix}${command.domain !== CommandDomain.NONE ? command.domain : command.agentId}:${command.command}):`, error);\n      \n      return errorResult;\n    }\n  }\n  \n  /**\n   * \uACB0\uACFC \uC815\uADDC\uD654 - \uC5EC\uB7EC \uD615\uC2DD\uC758 \uACB0\uACFC\uB97C CommandResult\uB85C \uBCC0\uD658\n   * @param result \uC6D0\uBCF8 \uACB0\uACFC\n   * @returns \uC815\uADDC\uD654\uB41C CommandResult\n   */\n  private normalizeResult(result: any): CommandResult {\n    if (!result) {\n      return {\n        success: true,\n        message: '\uBA85\uB839\uC774 \uC2E4\uD589\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n        displayMode: 'text'\n      };\n    }\n    \n    \n    if (typeof result === 'object' && 'success' in result) {\n      return result as CommandResult;\n    }\n    \n    \n    if (typeof result === 'string') {\n      return {\n        success: true,\n        message: result,\n        displayMode: result.includes('#') || result.includes('**') ? 'markdown' : 'text'\n      };\n    }\n    \n    \n    if (typeof result === 'object' && 'content' in result) {\n      const hasError = 'error' in result && result.error === true;\n      return {\n        success: !hasError,\n        message: result.content,\n        data: result,\n        error: hasError ? '\uBA85\uB839 \uC2E4\uD589 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.' : '',\n        displayMode: 'markdown'\n      };\n    }\n    \n    \n    return {\n      success: true,\n      data: result,\n      displayMode: 'json'\n    };\n  }\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uBA85\uB839\uC5B4 \uC2E4\uD589 (@ \uBA85\uB839\uC5B4)\n   * @param command \uC2E4\uD589\uD560 \uBA85\uB839\uC5B4\n   * @param signal AbortSignal (\uBA85\uB839\uC5B4 \uCDE8\uC18C\uC6A9)\n   * @returns \uC2E4\uD589 \uACB0\uACFC\n   */\n  private async executePluginCommand(command: Command, signal?: AbortSignal): Promise<CommandResult> {\n    \n    if (signal?.aborted) {\n      return {\n        success: false,\n        error: '\uBA85\uB839\uC5B4 \uC2E4\uD589\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n        displayMode: 'text'\n      };\n    }\n    \n    \n    const plugin = this.pluginRegistry.getPlugin(command.agentId);\n    \n    if (!plugin) {\n      \n      if (command.agentId === 'jira') {\n        return {\n          success: false,\n          message: `# Jira \uD50C\uB7EC\uADF8\uC778\uC774 \uB4F1\uB85D\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4\\n\\n` +\n                   `\uC124\uC815 \uD30C\uC77C\uC5D0 Jira \uC778\uC99D \uC815\uBCF4\uB97C \uCD94\uAC00\uD558\uC138\uC694:\\n` +\n                   \"```json\\n\\\"internalPlugins\\\": {\\n  \\\"jira\\\": {\\n    \\\"credentials\\\": {\\n      \\\"token\\\": \\\"\uC2E4\uC81C_\uD1A0\uD070_\uAC12\\\"\\n    }\\n  }\\n}\\n```\",\n          displayMode: 'markdown',\n          data: { type: 'plugin-not-found' }\n        };\n      }\n      return {\n        success: false,\n        error: `\uD50C\uB7EC\uADF8\uC778\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${command.agentId}`,\n        displayMode: 'text'\n      };\n    }\n    \n    if (!plugin.isEnabled()) {\n      return {\n        success: false,\n        error: `\uD50C\uB7EC\uADF8\uC778\uC774 \uBE44\uD65C\uC131\uD654\uB428: ${command.agentId}`,\n        displayMode: 'text'\n      };\n    }\n    \n    \n    if (command.agentId === 'jira' && !plugin.isInitialized()) {\n      return {\n        success: false,\n        message: `# Jira \uD50C\uB7EC\uADF8\uC778 \uC778\uC99D \uC815\uBCF4\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4\\n\\n` +\n                `\uC124\uC815 \uD30C\uC77C\uC5D0 Jira \uC778\uC99D \uC815\uBCF4\uB97C \uCD94\uAC00\uD558\uC138\uC694:\\n` +\n                \"```json\\n\\\"internalPlugins\\\": {\\n  \\\"jira\\\": {\\n    \\\"credentials\\\": {\\n      \\\"token\\\": \\\"\uC2E4\uC81C_\uD1A0\uD070_\uAC12\\\"\\n    }\\n  }\\n}\\n```\",\n        displayMode: 'markdown',\n        data: { type: 'jira-auth-required' }\n      };\n    }\n    \n    try {\n      \n      console.log(`\uD50C\uB7EC\uADF8\uC778 \uBA85\uB839\uC5B4 \uC2E4\uD589: ${command.agentId}:${command.command}`);\n      const result = await plugin.executeCommand(command.command, command.args);\n      \n      \n      if (signal?.aborted) {\n        return {\n          success: false,\n          error: '\uBA85\uB839\uC5B4 \uC2E4\uD589\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n          displayMode: 'text'\n        };\n      }\n      \n      \n      return this.normalizeResult(result);\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n        displayMode: 'text'\n      };\n    }\n  }\n  \n  /**\n   * \uB0B4\uBD80 \uBA85\uB839\uC5B4 \uC2E4\uD589 (/ \uBA85\uB839\uC5B4)\n   * @param command \uC2E4\uD589\uD560 \uBA85\uB839\uC5B4\n   * @param signal AbortSignal (\uBA85\uB839\uC5B4 \uCDE8\uC18C\uC6A9)\n   * @returns \uC2E4\uD589 \uACB0\uACFC\n   */\n  private async executeInternalCommand(command: Command, signal?: AbortSignal): Promise<CommandResult> {\n    \n    if (signal?.aborted) {\n      return {\n        success: false,\n        error: '\uBA85\uB839\uC5B4 \uC2E4\uD589\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n        displayMode: 'text'\n      };\n    }\n    \n    \n    const handler = this.commandRegistry.getHandler(command.agentId, command.command);\n    \n    if (!handler) {\n      return {\n        success: false,\n        error: `\uB0B4\uBD80 \uBA85\uB839\uC5B4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${command.agentId}:${command.command}`,\n        displayMode: 'text',\n        suggestedNextCommands: ['/help']\n      };\n    }\n    \n    try {\n      \n      console.log(`\uB0B4\uBD80 \uBA85\uB839\uC5B4 \uC2E4\uD589: ${command.agentId}:${command.command}`);\n      const result = await handler(command.args, command.flags);\n      \n      \n      if (signal?.aborted) {\n        return {\n          success: false,\n          error: '\uBA85\uB839\uC5B4 \uC2E4\uD589\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n          displayMode: 'text'\n        };\n      }\n      \n      \n      return this.normalizeResult(result);\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n        displayMode: 'text'\n      };\n    }\n  }\n  \n  /**\n   * \uB3C4\uBA54\uC778 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC2E4\uD589 (@ \uBA85\uB839\uC5B4 \uC911 \uB3C4\uBA54\uC778\uC73C\uB85C \uAD6C\uBD84\uB41C \uBA85\uB839\uC5B4)\n   * @param command \uC2E4\uD589\uD560 \uBA85\uB839\uC5B4\n   * @param signal AbortSignal (\uBA85\uB839\uC5B4 \uCDE8\uC18C\uC6A9)\n   * @returns \uC2E4\uD589 \uACB0\uACFC\n   */\n  private async executeDomainCommand(command: Command, signal?: AbortSignal): Promise<CommandResult> {\n    \n    if (signal?.aborted) {\n      return {\n        success: false,\n        error: '\uBA85\uB839\uC5B4 \uC2E4\uD589\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n        displayMode: 'text'\n      };\n    }\n    \n    \n    if (!command.domain || command.domain === CommandDomain.NONE) {\n      return {\n        success: false,\n        error: '\uB3C4\uBA54\uC778\uC774 \uC9C0\uC815\uB418\uC9C0 \uC54A\uC740 \uBA85\uB839\uC5B4\uC785\uB2C8\uB2E4.',\n        displayMode: 'text'\n      };\n    }\n    \n    \n    const handler = this.commandRegistry.getDomainHandler(command.domain, command.command);\n    \n    if (!handler) {\n      \n      try {\n        const domainPlugin = this.pluginRegistry.getPluginByDomain(command.domain);\n        \n        if (domainPlugin && domainPlugin.isEnabled()) {\n          return this.executePluginCommand({\n            ...command,\n            agentId: domainPlugin.id\n          }, signal);\n        }\n      } catch (e) {\n        \n      }\n      \n      \n      const domainCommands = this.commandRegistry.getDomainCommands(command.domain);\n      const suggestions = domainCommands.length > 0\n        ? domainCommands.slice(0, 3).map(u => `@${command.domain}:${u.command}`)\n        : [`@${command.domain}:help`];\n      \n      return {\n        success: false,\n        error: `\uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C: @${command.domain}:${command.command}`,\n        displayMode: 'text',\n        suggestedNextCommands: suggestions\n      };\n    }\n    \n    try {\n      \n      console.log(`\uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4 \uC2E4\uD589: @${command.domain}:${command.command}`);\n      const result = await handler(command.args, command.flags);\n      \n      \n      if (signal?.aborted) {\n        return {\n          success: false,\n          error: '\uBA85\uB839\uC5B4 \uC2E4\uD589\uC774 \uCDE8\uC18C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.',\n          displayMode: 'text'\n        };\n      }\n      \n      \n      return this.normalizeResult(result);\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n        displayMode: 'text'\n      };\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589 (\uBB38\uC790\uC5F4 \uC785\uB825 \uBC29\uC2DD)\n   * @param commandString \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4\n   * @param args \uBA85\uB839\uC5B4 \uC778\uC790 (\uC120\uD0DD\uC801)\n   * @param flags \uBA85\uB839\uC5B4 \uD50C\uB798\uADF8 (\uC120\uD0DD\uC801)\n   * @returns \uC2E4\uD589 \uACB0\uACFC\n   */\n  public async executeFromString(\n    commandString: string, \n    args: any[] = [], \n    flags: Record<string, any> = {}\n  ): Promise<CommandResult> {\n    try {\n      \n      const parsedCommand = this.parser.parseWithSuggestions(commandString);\n      \n      \n      if (parsedCommand.hasError) {\n        return {\n          success: false,\n          error: parsedCommand.errorMessage || '\uBA85\uB839\uC5B4 \uD30C\uC2F1 \uC624\uB958',\n          displayMode: 'text',\n          suggestedNextCommands: parsedCommand.suggestions || []\n        };\n      }\n      \n      \n      const command: Command = {\n        prefix: parsedCommand.prefix,\n        type: parsedCommand.type,\n        domain: parsedCommand.domain,\n        agentId: parsedCommand.domain !== CommandDomain.NONE ? parsedCommand.domain : 'core',\n        command: parsedCommand.command,\n        subCommand: parsedCommand.subCommand || '',\n        args: args.length > 0 ? args : parsedCommand.args,\n        flags: flags && Object.keys(flags).length > 0 ? flags : Object.fromEntries(parsedCommand.flags),\n        options: Object.fromEntries(parsedCommand.options),\n        rawInput: parsedCommand.raw\n      };\n      \n      \n      return await this.execute(command);\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n        displayMode: 'text'\n      };\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589 (\uC9C1\uC811 \uBB38\uC790\uC5F4 \uBA85\uB839\uC5B4 \uC2E4\uD589) - \uB808\uAC70\uC2DC \uD638\uD658\uC131 \uC720\uC9C0\uC6A9\n   * @param commandString \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4\n   * @param args \uBA85\uB839\uC5B4 \uC778\uC790 (\uC120\uD0DD\uC801)\n   * @param flags \uBA85\uB839\uC5B4 \uD50C\uB798\uADF8 (\uC120\uD0DD\uC801)\n   * @returns \uC2E4\uD589 \uACB0\uACFC\n   */\n  public async executeCommandString(\n    commandString: string, \n    args: any[] = [], \n    flags: Record<string, any> = {}\n  ): Promise<CommandResult> {\n    return this.executeFromString(commandString, args, flags);\n  }\n  \n  /**\n   * \uC2E4\uD589 \uC774\uB825 \uC870\uD68C\n   * @param limit \uC870\uD68C\uD560 \uC774\uB825 \uC218 (\uAE30\uBCF8\uAC12: 10)\n   * @returns \uCD5C\uADFC \uC2E4\uD589 \uC774\uB825\n   */\n  public getExecutionHistory(limit = 10): Array<{command: Command, result: CommandResult, timestamp: number}> {\n    return this.executionHistory\n      .slice(-limit)\n      .map(({ command, result, timestamp }) => ({ command, result, timestamp }));\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589 \uCDE8\uC18C\n   * @param commandId \uCDE8\uC18C\uD560 \uBA85\uB839\uC5B4 ID\n   * @returns \uCDE8\uC18C \uC131\uACF5 \uC5EC\uBD80\n   */\n  public cancel(commandId: string): boolean {\n    const pendingCommand = this.pendingCommands.get(commandId);\n    if (!pendingCommand) {\n      return false;\n    }\n    \n    try {\n      pendingCommand.cancel();\n      this.pendingCommands.delete(commandId);\n      return true;\n    } catch (error) {\n      console.error('\uBA85\uB839\uC5B4 \uCDE8\uC18C \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uCDE8\uC18C\n   * @returns \uCDE8\uC18C\uB41C \uBA85\uB839\uC5B4 \uC218\n   */\n  public cancelAll(): number {\n    let cancelCount = 0;\n    \n    this.pendingCommands.forEach((pendingCommand, commandId) => {\n      try {\n        pendingCommand.cancel();\n        this.pendingCommands.delete(commandId);\n        cancelCount++;\n      } catch (error) {\n        console.error(`\uBA85\uB839\uC5B4 \uCDE8\uC18C \uC911 \uC624\uB958 \uBC1C\uC0DD (${commandId}):`, error);\n      }\n    });\n    \n    return cancelCount;\n  }\n}", "import * as vscode from 'vscode';\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  NONE = 4\n}\n\n\nexport interface LoggerConfig {\n  level: LogLevel;\n  useConsole: boolean;\n  useOutputChannel: boolean;\n}\n\n\nexport interface ILoggerService {\n  debug(message: string, ...optionalParams: any[]): void;\n  info(message: string, ...optionalParams: any[]): void;\n  warn(message: string, ...optionalParams: any[]): void;\n  error(message: string, ...optionalParams: any[]): void;\n  setLevel(level: LogLevel): void;\n  getLevel(): LogLevel;\n  clear(): void;\n  show(preserveFocus?: boolean): void;\n  hide(): void;\n}\n\n\nexport class LoggerService implements ILoggerService {\n  private static _instance: LoggerService;\n  private _outputChannel: vscode.OutputChannel | null = null;\n  private _config: LoggerConfig = {\n    level: LogLevel.INFO,\n    useConsole: true,\n    useOutputChannel: false \n  };\n\n  constructor() {\n    try {\n      if (vscode && vscode.window) {\n        this._outputChannel = vscode.window.createOutputChannel('APE');\n        this._config.useOutputChannel = true;\n      }\n    } catch (error) {\n      \n      this._config.useOutputChannel = false;\n    }\n  }\n\n  public static getInstance(): LoggerService {\n    if (!LoggerService._instance) {\n      LoggerService._instance = new LoggerService();\n    }\n    return LoggerService._instance;\n  }\n\n  public configure(config: Partial<LoggerConfig>): void {\n    this._config = { ...this._config, ...config };\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    this.log(LogLevel.DEBUG, message, ...optionalParams);\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    this.log(LogLevel.INFO, message, ...optionalParams);\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    this.log(LogLevel.WARN, message, ...optionalParams);\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    this.log(LogLevel.ERROR, message, ...optionalParams);\n  }\n\n  private log(level: LogLevel, message: string, ...optionalParams: any[]): void {\n    if (level < this._config.level) {\n      return;\n    }\n\n    const levelStr = LogLevel[level];\n    const formattedMessage = `[${levelStr}] ${message}`;\n\n    if (this._config.useConsole) {\n      switch (level) {\n        case LogLevel.DEBUG:\n          console.debug(message);\n          break;\n        case LogLevel.INFO:\n          console.info(message);\n          break;\n        case LogLevel.WARN:\n          console.warn(message);\n          break;\n        case LogLevel.ERROR:\n          console.error(message, ...optionalParams);\n          break;\n      }\n    }\n\n    if (this._config.useOutputChannel && this._outputChannel) {\n      let outputStr = formattedMessage;\n      \n      if (optionalParams.length > 0) {\n        try {\n          outputStr += ' ' + optionalParams.map(p => {\n            if (typeof p === 'object') {\n              return JSON.stringify(p);\n            }\n            return String(p);\n          }).join(' ');\n        } catch (error) {\n          outputStr += ' [Parameter serialization error]';\n        }\n      }\n      \n      this._outputChannel.appendLine(outputStr);\n    }\n  }\n\n  public show(preserveFocus: boolean = false): void {\n    if (this._outputChannel) {\n      this._outputChannel.show(preserveFocus);\n    }\n  }\n\n  public hide(): void {\n    if (this._outputChannel) {\n      this._outputChannel.hide();\n    }\n  }\n\n  public clear(): void {\n    if (this._outputChannel) {\n      this._outputChannel.clear();\n    }\n  }\n\n  public setLevel(level: LogLevel): void {\n    this._config.level = level;\n  }\n\n  public getLevel(): LogLevel {\n    return this._config.level;\n  }\n}", "/**\n * \uBA85\uB839\uC5B4 \uC11C\uBE44\uC2A4\n * \n * \uBA85\uB839\uC5B4 \uCC98\uB9AC\uC758 \uC911\uC559 \uD5C8\uBE0C \uC5ED\uD560\uC744 \uB2F4\uB2F9\n * \uBAA8\uB4E0 \uBA85\uB839\uC5B4 \uAD00\uB828 \uAE30\uB2A5\uC744 \uD1B5\uD569 \uAD00\uB9AC\n */\n\nimport { CommandRegistryService } from './CommandRegistryService';\nimport { CommandExecutorService } from './CommandExecutorService';\nimport { CommandParserService } from './CommandParserService';\nimport { IConfigLoader } from '../../types/ConfigTypes';\nimport { LoggerService } from '../utils/LoggerService';\nimport { EventEmitter } from 'events';\nimport { Command, CommandPrefix, CommandType, ParsedCommand } from '../../types/CommandTypes';\nimport { PluginRegistryService } from '../plugin-system/PluginRegistryService';\nimport { ICoreService } from '../ICoreService';\n\n/**\n * \uBA85\uB839\uC5B4 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n * \n * \uBA85\uB839\uC5B4 \uB4F1\uB85D, \uD30C\uC2F1, \uC2E4\uD589\uC744 \uCD1D\uAD04\uD558\uB294 \uC911\uC559 \uC11C\uBE44\uC2A4\n * \uC0AC\uC6A9\uC790 \uD3B8\uC758\uC131\uC744 \uC704\uD55C \uACE0\uAE09 \uBA85\uB839\uC5B4 \uAE30\uB2A5 \uC81C\uACF5\n */\nexport class CommandService extends EventEmitter {\n  private registry: CommandRegistryService;\n  private executor: CommandExecutorService;\n  private parser: CommandParserService;\n  private logger: LoggerService;\n  \n  private contextCache: Map<string, any> = new Map();\n  private preferenceCache: Map<string, Map<string, any[]>> = new Map();\n  \n  /**\n   * CommandService \uC0DD\uC131\uC790\n   * @param configLoader \uC124\uC815 \uB85C\uB354 \uC11C\uBE44\uC2A4\n   * @param coreService \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uC778\uC2A4\uD134\uC2A4\n   */\n  constructor(\n    configLoader: IConfigLoader,\n    private readonly coreService: ICoreService\n  ) {\n    super();\n    this.logger = new LoggerService();\n    \n    const pluginRegistry = new PluginRegistryService(configLoader);\n    \n    this.registry = new CommandRegistryService(pluginRegistry);\n    this.executor = new CommandExecutorService(this.registry, pluginRegistry);\n    this.parser = new CommandParserService();\n    \n    this.logger.info('CommandService \uCD08\uAE30\uD654\uB428');\n    \n    setInterval(() => this.refreshAllContexts(), 30000); \n    \n    // CoreService\uB294 \uC774\uC81C \uD544\uC218 \uC758\uC874\uC131\uC73C\uB85C \uC8FC\uC785\uB429\uB2C8\uB2E4\n    this.logger.info('\uC0DD\uC131\uC790 \uAE30\uBC18 \uC758\uC874\uC131 \uC8FC\uC785\uC73C\uB85C \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCC38\uC870 \uC124\uC815\uB428');\n  }\n  \n  \n  \n  /**\n   * \uCD08\uAE30\uD654\n   */\n  async initialize(): Promise<void> {\n    \n    if (typeof this.registry.initialize === 'function') {\n      await this.registry.initialize();\n    }\n    \n    \n    await this.refreshAllContexts();\n    \n    this.logger.info('CommandService \uC644\uC804\uD788 \uCD08\uAE30\uD654\uB428');\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589\n   * @param command \uC2E4\uD589\uD560 \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4\n   * @returns \uBA85\uB839\uC5B4 \uC2E4\uD589 \uACB0\uACFC\n   */\n  async executeCommand(command: string): Promise<any> {\n    try {\n      this.logger.debug(`\uBA85\uB839\uC5B4 \uC2E4\uD589: ${command}`);\n      \n      \n      const parsedCommand = this.parser.parse(command);\n      \n      if (!parsedCommand) {\n        return {\n          content: `\uBA85\uB839\uC5B4 \uD30C\uC2F1 \uC2E4\uD328: ${command}`,\n          error: true\n        };\n      }\n      \n      \n      return await this.executor.execute(parsedCommand);\n    } catch (error) {\n      this.logger.error(`\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC911 \uC624\uB958 \uBC1C\uC0DD: ${error instanceof Error ? error.message : String(error)}`);\n      return {\n        content: `\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC911 \uC624\uB958 \uBC1C\uC0DD: ${error instanceof Error ? error.message : String(error)}`,\n        error: true\n      };\n    }\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uD50C\uB7EC\uADF8\uC778\uC758 \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4 \uC0C8\uB85C\uACE0\uCE68\n   */\n  private async refreshAllContexts(): Promise<void> {\n    try {\n      \n      await this.refreshGitContext();\n      await this.refreshJiraContext();\n      await this.refreshSwdpContext();\n      await this.refreshPocketContext();\n      \n      this.emit('contexts-updated');\n    } catch (error) {\n      this.logger.error('\uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4 \uC0C8\uB85C\uACE0\uCE68 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * Git \uD50C\uB7EC\uADF8\uC778 \uCEE8\uD14D\uC2A4\uD2B8 \uC0C8\uB85C\uACE0\uCE68\n   */\n  private async refreshGitContext(): Promise<void> {\n    try {\n      const plugin = this.registry.getPlugin('git');\n      if (!plugin) return;\n      \n      const gitClient = (plugin as any).client;\n      if (!gitClient) return;\n      \n      \n      const status = await gitClient.getStatus();\n      \n      \n      const branches = await gitClient.getBranches(true);\n      \n      \n      this.contextCache.set('git', {\n        status,\n        branches,\n        lastUpdated: new Date()\n      });\n      \n      this.logger.debug('Git \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4 \uC5C5\uB370\uC774\uD2B8\uB428');\n    } catch (error) {\n      this.logger.error('Git \uCEE8\uD14D\uC2A4\uD2B8 \uC0C8\uB85C\uACE0\uCE68 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * Jira \uD50C\uB7EC\uADF8\uC778 \uCEE8\uD14D\uC2A4\uD2B8 \uC0C8\uB85C\uACE0\uCE68\n   */\n  private async refreshJiraContext(): Promise<void> {\n    try {\n      const plugin = this.registry.getPlugin('jira');\n      if (!plugin || !(plugin as any).client) return;\n      \n      const jiraClient = (plugin as any).client;\n      \n      \n      \n      \n      \n      this.contextCache.set('jira', {\n        \n        lastUpdated: new Date()\n      });\n      \n      this.logger.debug('Jira \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4 \uC5C5\uB370\uC774\uD2B8\uB428');\n    } catch (error) {\n      this.logger.error('Jira \uCEE8\uD14D\uC2A4\uD2B8 \uC0C8\uB85C\uACE0\uCE68 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * SWDP \uD50C\uB7EC\uADF8\uC778 \uCEE8\uD14D\uC2A4\uD2B8 \uC0C8\uB85C\uACE0\uCE68\n   */\n  private async refreshSwdpContext(): Promise<void> {\n    try {\n      const plugin = this.registry.getPlugin('swdp');\n      if (!plugin || !(plugin as any).swdpClient) return;\n      \n      \n      this.contextCache.set('swdp', {\n        lastUpdated: new Date()\n      });\n      \n      this.logger.debug('SWDP \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4 \uC5C5\uB370\uC774\uD2B8\uB428');\n    } catch (error) {\n      this.logger.error('SWDP \uCEE8\uD14D\uC2A4\uD2B8 \uC0C8\uB85C\uACE0\uCE68 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * Pocket \uD50C\uB7EC\uADF8\uC778 \uCEE8\uD14D\uC2A4\uD2B8 \uC0C8\uB85C\uACE0\uCE68\n   */\n  private async refreshPocketContext(): Promise<void> {\n    try {\n      const plugin = this.registry.getPlugin('pocket');\n      if (!plugin || !(plugin as any).client) return;\n      \n      \n      this.contextCache.set('pocket', {\n        lastUpdated: new Date()\n      });\n      \n      this.logger.debug('Pocket \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4 \uC5C5\uB370\uC774\uD2B8\uB428');\n    } catch (error) {\n      this.logger.error('Pocket \uCEE8\uD14D\uC2A4\uD2B8 \uC0C8\uB85C\uACE0\uCE68 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * \uC2E4\uC2DC\uAC04 \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC0DD\uC131\n   * \uC0AC\uC6A9\uC790\uAC00 \uC9C1\uC811 \uC778\uC790\uB97C \uC785\uB825\uD558\uC9C0 \uC54A\uC544\uB3C4 \uB418\uB3C4\uB85D \uC644\uC131\uB41C \uBA85\uB839\uC5B4 \uC81C\uACF5\n   * \n   * @param baseCommand \uAE30\uBCF8 \uBA85\uB839\uC5B4 (\uC608: '@git:commit')\n   * @param context \uC2E4\uD589 \uCEE8\uD14D\uC2A4\uD2B8 \uBC0F \uD658\uACBD \uC815\uBCF4\n   * @returns \uC644\uC131\uB41C \uBA85\uB839\uC5B4 \uBB38\uC790\uC5F4 \uB610\uB294 \uD6C4\uBCF4 \uBAA9\uB85D\n   */\n  async generateContextualCommand(baseCommand: string, context?: any): Promise<string | string[]> {\n    try {\n      if (!baseCommand) {\n        return '';\n      }\n      \n      \n      const parts = baseCommand.split(':');\n      const pluginPrefix = parts.length > 0 ? parts[0] : '';\n      const commandName = parts.length > 1 ? parts[1] : '';\n      \n      if (!pluginPrefix || !commandName) {\n        return baseCommand;\n      }\n      \n      const pluginId = pluginPrefix.replace('@', '');\n      \n      \n      const command = this.registry.findCommand(pluginId, commandName);\n      \n      if (!command) {\n        return baseCommand; \n      }\n      \n      \n      if (pluginId === 'git') {\n        return this.generateGitCommand(commandName, context);\n      } else if (pluginId === 'jira') {\n        return this.generateJiraCommand(commandName, context);\n      } else if (pluginId === 'swdp') {\n        return this.generateSwdpCommand(commandName, context);\n      } else if (pluginId === 'pocket') {\n        return this.generatePocketCommand(commandName, context);\n      }\n      \n      \n      return baseCommand;\n    } catch (error) {\n      this.logger.error(`\uCEE8\uD14D\uC2A4\uD2B8 \uBA85\uB839\uC5B4 \uC0DD\uC131 \uC911 \uC624\uB958: ${error}`);\n      return baseCommand; \n    }\n  }\n  \n  /**\n   * Git \uBA85\uB839\uC5B4 \uC790\uB3D9 \uC0DD\uC131\n   * \uD604\uC7AC Git \uC0C1\uD0DC\uC5D0 \uB530\uB77C \uCD5C\uC801\uD654\uB41C \uBA85\uB839\uC5B4 \uC0DD\uC131\n   * \n   * @param commandName Git \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @returns \uC644\uC131\uB41C Git \uBA85\uB839\uC5B4 \uB610\uB294 \uD6C4\uBCF4 \uBAA9\uB85D\n   */\n  private async generateGitCommand(commandName: string, context?: any): Promise<string | string[]> {\n    \n    const gitPlugin = this.registry.getPlugin('git');\n    \n    if (!gitPlugin) {\n      return `@git:${commandName}`; \n    }\n    \n    \n    const gitClient = (gitPlugin as any).client;\n    \n    if (!gitClient) {\n      return `@git:${commandName}`;\n    }\n    \n    try {\n      \n      const gitContext = this.contextCache.get('git') || {};\n      const status = gitContext.status || await gitClient.getStatus();\n      const branches = gitContext.branches || await gitClient.getBranches(true);\n      \n      \n      switch (commandName) {\n        case 'commit': {\n          \n          if (!status.changes || status.changes.length === 0) {\n            return '@git:commit \"\uBCC0\uACBD \uC0AC\uD56D \uC5C6\uC74C\" --empty';\n          }\n          \n          \n          const fileNames = status.changes.map((change: any) => change.path).join(', ');\n          const suggestedMessage = `${fileNames}\uC758 \uBCC0\uACBD \uC0AC\uD56D`;\n          \n          return `@git:commit \"${suggestedMessage}\"`;\n        }\n        \n        case 'push': {\n          \n          const currentBranch = status.branch;\n          \n          \n          if (status.tracking) {\n            return `@git:push origin ${currentBranch}`;\n          } else {\n            \n            return `@git:push origin ${currentBranch} --set-upstream`;\n          }\n        }\n        \n        case 'checkout': {\n          \n          const otherBranches = branches\n            .filter((branch: any) => !branch.isCurrent)\n            .map((branch: any) => `@git:checkout ${branch.name}`);\n          \n          \n          const priorityBranches = ['main', 'develop', 'master'];\n          \n          otherBranches.sort((a: string, b: string) => {\n            const branchA = a.split(' ')[1];\n            const branchB = b.split(' ')[1];\n            \n            const priorityA = priorityBranches.indexOf(branchA);\n            const priorityB = priorityBranches.indexOf(branchB);\n            \n            if (priorityA !== -1 && priorityB !== -1) {\n              return priorityA - priorityB;\n            } else if (priorityA !== -1) {\n              return -1;\n            } else if (priorityB !== -1) {\n              return 1;\n            }\n            \n            return 0;\n          });\n          \n          return otherBranches.length > 0 ? otherBranches : '@git:checkout';\n        }\n        \n        case 'branch': {\n          \n          const currentBranch = status.branch;\n          \n          \n          const prefixMatch = currentBranch.match(/^(feature|bugfix|hotfix|release|support)\\//);\n          const prefix = prefixMatch ? prefixMatch[1] : 'feature';\n          \n          \n          let userName = '';\n          try {\n            const configResult = await gitClient.executeGitCommand(['config', 'user.name']);\n            if (configResult.success && configResult.stdout) {\n              userName = configResult.stdout.trim().split(' ')[0].toLowerCase();\n              \n              \n              if (userName.length > 8) {\n                userName = userName.charAt(0);\n              }\n            }\n          } catch (error) {\n            \n          }\n          \n          \n          const date = new Date();\n          const month = String(date.getMonth() + 1).padStart(2, '0');\n          const day = String(date.getDate()).padStart(2, '0');\n          const dateStr = month + day;\n          \n          \n          let branchPattern = '';\n          if (userName) {\n            branchPattern = `${prefix}/${userName}/${dateStr}/`;\n          } else {\n            branchPattern = `${prefix}/${dateStr}/`;\n          }\n          \n          return `@git:branch ${branchPattern}`;\n        }\n        \n        default:\n          return `@git:${commandName}`;\n      }\n    } catch (error) {\n      this.logger.error(`Git \uBA85\uB839\uC5B4 \uC0DD\uC131 \uC911 \uC624\uB958: ${error}`);\n      return `@git:${commandName}`;\n    }\n  }\n  \n  /**\n   * Jira \uBA85\uB839\uC5B4 \uC790\uB3D9 \uC0DD\uC131\n   * \uD604\uC7AC Jira \uC0C1\uD0DC\uC5D0 \uB530\uB77C \uCD5C\uC801\uD654\uB41C \uBA85\uB839\uC5B4 \uC0DD\uC131\n   * \n   * @param commandName Jira \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @returns \uC644\uC131\uB41C Jira \uBA85\uB839\uC5B4 \uB610\uB294 \uD6C4\uBCF4 \uBAA9\uB85D\n   */\n  private async generateJiraCommand(commandName: string, context?: any): Promise<string | string[]> {\n    \n    const jiraPlugin = this.registry.getPlugin('jira');\n    \n    if (!jiraPlugin) {\n      return `@jira:${commandName}`; \n    }\n    \n    \n    const gitPlugin = this.registry.getPlugin('git');\n    \n    try {\n      \n      switch (commandName) {\n        case 'issue': {\n          \n          if (gitPlugin) {\n            const gitClient = (gitPlugin as any).client;\n            if (gitClient) {\n              \n              const gitContext = this.contextCache.get('git');\n              const status = gitContext?.status || await gitClient.getStatus();\n              const currentBranch = status.branch;\n              \n              this.logger.info(`\uD604\uC7AC Git \uBE0C\uB79C\uCE58: ${currentBranch}`);\n              \n              \n              \n              const branchIssueKeyMatch = currentBranch.match(/[A-Z]+-\\d+/);\n              if (branchIssueKeyMatch) {\n                const issueKey = branchIssueKeyMatch[0];\n                this.logger.info(`\uBE0C\uB79C\uCE58 \uC774\uB984\uC5D0\uC11C \uC774\uC288 \uD0A4 \uBC1C\uACAC: ${issueKey}`);\n                \n                \n                if (!this.contextCache.has('jira')) {\n                  this.contextCache.set('jira', {});\n                }\n                const jiraContext = this.contextCache.get('jira');\n                jiraContext.lastIssueKey = issueKey;\n                jiraContext.lastIssueKeySource = 'branch';\n                jiraContext.lastUpdated = new Date();\n                \n                return `@jira:issue ${issueKey}`;\n              }\n              \n              \n              const jiraContext = this.contextCache.get('jira');\n              if (jiraContext?.lastIssueKey && \n                  jiraContext.lastUpdated && \n                  (new Date().getTime() - jiraContext.lastUpdated.getTime() < 5 * 60 * 1000)) { \n                this.logger.info(`\uCE90\uC2DC\uB41C \uC774\uC288 \uD0A4 \uC0AC\uC6A9: ${jiraContext.lastIssueKey} (\uCD9C\uCC98: ${jiraContext.lastIssueKeySource})`);\n                return `@jira:issue ${jiraContext.lastIssueKey}`;\n              }\n                \n              \n              try {\n                const logResult = await gitClient.executeGitCommand(['log', '-n', '10', '--pretty=format:%s']);\n                if (logResult.success && logResult.stdout) {\n                  \n                  const recentCommits = logResult.stdout.split('\\n');\n                  this.logger.info(`\uCD5C\uADFC \uCEE4\uBC0B \uB85C\uADF8 ${recentCommits.length}\uAC1C \uC870\uD68C\uB428`);\n                  \n                  const llmService = this.coreService?.llmService;\n                  \n                  this.logger.debug('LLM \uC11C\uBE44\uC2A4 \uD655\uC778: ' + (llmService ? '\uC0AC\uC6A9 \uAC00\uB2A5' : '\uC0AC\uC6A9 \uBD88\uAC00'));\n                  \n                  if (llmService) {\n                    this.logger.info('LLM \uAE30\uBC18 \uC774\uC288 \uD0A4 \uCD94\uCD9C \uC2DC\uC791');\n                    \n                    \n                    const issueKeyPrompt = {\n                      messages: [\n                        {\n                          role: \"system\",\n                          content: \"\uB2F9\uC2E0\uC740 Git \uCEE4\uBC0B \uBA54\uC2DC\uC9C0\uC5D0\uC11C Jira \uC774\uC288 \uD0A4\uB97C \uCD94\uCD9C\uD558\uB294 \uC804\uBB38\uAC00\uC785\uB2C8\uB2E4. Jira \uC774\uC288 \uD0A4\uB294 \uC77C\uBC18\uC801\uC73C\uB85C PROJ-123, ABC-456 \uAC19\uC740 \uD615\uC2DD(\uB300\uBB38\uC790 \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC, \uD558\uC774\uD508, \uC22B\uC790)\uC785\uB2C8\uB2E4.\\n\\n\" + \n                                   \"\uD300\uB9C8\uB2E4 \uB2E4\uC591\uD55C \uD3EC\uB9F7\uC744 \uC0AC\uC6A9\uD569\uB2C8\uB2E4:\\n\" +\n                                   \"- [KEY-123] \uBA54\uC2DC\uC9C0\\n\" +\n                                   \"- KEY-123: \uBA54\uC2DC\uC9C0\\n\" +\n                                   \"- #KEY-123 \uBA54\uC2DC\uC9C0\\n\" +\n                                   \"- (KEY-123) \uBA54\uC2DC\uC9C0\\n\" +\n                                   \"- fix(KEY-123): \uBA54\uC2DC\uC9C0\\n\" +\n                                   \"- 'feat: \uAE30\uB2A5 \uAD6C\uD604 (KEY-123)'\\n\" +\n                                   \"- 'Implement feature KEY-123'\\n\\n\" +\n                                   \"\uAC00\uC7A5 \uCD5C\uADFC\uC758 \uAD00\uB828 \uC774\uC288 \uD0A4 \uD558\uB098\uB9CC \uCD94\uCD9C\uD574 \uC8FC\uC138\uC694. \uC804\uCCB4 \uCEE4\uBC0B \uBA54\uC2DC\uC9C0\uB97C \uC77D\uACE0 \uAC00\uC7A5 \uAD00\uB828\uC131\uC774 \uB192\uC740 \uC774\uC288 \uD0A4\uB97C \uC120\uD0DD\uD558\uC138\uC694.\"\n                        },\n                        {\n                          role: \"user\", \n                          content: `\uB2E4\uC74C Git \uCEE4\uBC0B \uBA54\uC2DC\uC9C0 \uBAA9\uB85D\uC5D0\uC11C \uAC00\uC7A5 \uCD5C\uADFC\uC758 Jira \uC774\uC288 \uD0A4\uB9CC \uD558\uB098 \uCD94\uCD9C\uD574\uC8FC\uC138\uC694. \uC5C6\uC73C\uBA74 '\uC5C6\uC74C'\uC774\uB77C\uACE0 \uC751\uB2F5\uD558\uC138\uC694. \uC751\uB2F5\uC740 \uC774\uC288 \uD0A4\uB9CC \uAC04\uACB0\uD558\uAC8C \uC791\uC131\uD574\uC8FC\uC138\uC694.\\n\\n${recentCommits.join('\\n')}`\n                        }\n                      ]\n                    };\n                    \n                    \n                    this.logger.debug('LLM \uC694\uCCAD \uD504\uB86C\uD504\uD2B8:');\n                    this.logger.debug(`\uC2DC\uC2A4\uD15C: ${issueKeyPrompt.messages[0].content.slice(0, 100)}...`);\n                    this.logger.debug(`\uC0AC\uC6A9\uC790: ${issueKeyPrompt.messages[1].content.slice(0, 100)}...`);\n                    \n                    \n                    try {\n                      this.logger.info('LLM API \uD638\uCD9C \uC2DC\uC791');\n                      \n                      const llmStartTime = Date.now();\n                      const response = await llmService.sendRequest({\n                        model: \"claude-3-haiku-20240307\", \n                        messages: issueKeyPrompt.messages,\n                        temperature: 0,\n                        max_tokens: 50\n                      });\n                      const llmDuration = Date.now() - llmStartTime;\n                      \n                      this.logger.info(`LLM \uC751\uB2F5 \uC218\uC2E0 \uC644\uB8CC (\uC18C\uC694\uC2DC\uAC04: ${llmDuration}ms)`);\n                      \n                      \n                      if (response && response.content) {\n                        const content = response.content.trim();\n                        this.logger.debug(`LLM \uC751\uB2F5 \uB0B4\uC6A9: \"${content}\"`);\n                        \n                        \n                        if (content.toLowerCase() !== '\uC5C6\uC74C') {\n                          \n                          const llmExtractedKey = content.match(/[A-Z]+-\\d+/);\n                          \n                          if (llmExtractedKey) {\n                            const issueKey = llmExtractedKey[0];\n                            this.logger.info(`LLM\uC774 \uCD94\uCD9C\uD55C \uC774\uC288 \uD0A4: ${issueKey}`);\n                            \n                            \n                            if (!this.contextCache.has('jira')) {\n                              this.contextCache.set('jira', {});\n                            }\n                            const jiraContext = this.contextCache.get('jira');\n                            jiraContext.lastIssueKey = issueKey;\n                            jiraContext.lastIssueKeySource = 'llm';\n                            jiraContext.lastUpdated = new Date();\n                            \n                            return `@jira:issue ${issueKey}`;\n                          } else {\n                            this.logger.warn(`LLM \uC751\uB2F5\uC5D0\uC11C \uC720\uD6A8\uD55C \uC774\uC288 \uD0A4 \uD328\uD134\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC74C: \"${content}\"`);\n                          }\n                        } else {\n                          this.logger.info('LLM \uC751\uB2F5: \uCEE4\uBC0B \uBA54\uC2DC\uC9C0\uC5D0\uC11C \uC774\uC288 \uD0A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C');\n                        }\n                      } else {\n                        this.logger.warn('LLM \uC751\uB2F5\uC774 \uBE44\uC5B4\uC788\uAC70\uB098 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC74C');\n                      }\n                    } catch (llmError) {\n                      this.logger.error('LLM \uD638\uCD9C \uC911 \uC624\uB958:', llmError);\n                      this.logger.error('\uC0C1\uC138 \uC624\uB958 \uC815\uBCF4:', JSON.stringify(llmError, Object.getOwnPropertyNames(llmError)));\n                      this.logger.info('\uD734\uB9AC\uC2A4\uD2F1 \uBC29\uC2DD\uC73C\uB85C \uB300\uCCB4 \uC791\uB3D9');\n                    }\n                  }\n                  \n                  \n                  this.logger.info('\uD734\uB9AC\uC2A4\uD2F1 \uBC29\uC2DD\uC73C\uB85C \uC774\uC288 \uD0A4 \uAC80\uC0C9 \uC2DC\uC791');\n                  \n                  \n                  const patterns = [\n                    /\\[([A-Z]+-\\d+)\\]/,      \n                    /([A-Z]+-\\d+):/,         \n                    /#([A-Z]+-\\d+)/,         \n                    /\\(([A-Z]+-\\d+)\\)/,      \n                    /fix\\(([A-Z]+-\\d+)\\)/,   \n                    /feat\\(([A-Z]+-\\d+)\\)/,  \n                    /feat\\s*:\\s*\\(([A-Z]+-\\d+)\\)/, \n                    /chore\\(([A-Z]+-\\d+)\\)/, \n                    /docs\\(([A-Z]+-\\d+)\\)/,  \n                    /test\\(([A-Z]+-\\d+)\\)/,  \n                    /refactor\\(([A-Z]+-\\d+)\\)/, \n                    /style\\(([A-Z]+-\\d+)\\)/, \n                    /perf\\(([A-Z]+-\\d+)\\)/,  \n                    /build\\(([A-Z]+-\\d+)\\)/, \n                    /ci\\(([A-Z]+-\\d+)\\)/,    \n                    /^([A-Z]+-\\d+)$/,        \n                    /([A-Z]+-\\d+)/           \n                  ];\n                  \n                  for (const commit of recentCommits) {\n                    for (const pattern of patterns) {\n                      const match = commit.match(pattern);\n                      if (match && match[1]) {\n                        const issueKey = match[1];\n                        this.logger.info(`\uD734\uB9AC\uC2A4\uD2F1 \uBC29\uC2DD\uC73C\uB85C \uC774\uC288 \uD0A4 \uBC1C\uACAC: ${issueKey} (\uD328\uD134: ${pattern})`);\n                        \n                        \n                        if (!this.contextCache.has('jira')) {\n                          this.contextCache.set('jira', {});\n                        }\n                        const jiraContext = this.contextCache.get('jira');\n                        jiraContext.lastIssueKey = issueKey;\n                        jiraContext.lastIssueKeySource = 'regex';\n                        jiraContext.lastUpdated = new Date();\n                        \n                        return `@jira:issue ${issueKey}`;\n                      }\n                    }\n                  }\n                  \n                  this.logger.info('\uD734\uB9AC\uC2A4\uD2F1 \uBC29\uC2DD\uC73C\uB85C\uB3C4 \uC774\uC288 \uD0A4\uB97C \uCC3E\uC9C0 \uBABB\uD568');\n                }\n              } catch (logError) {\n                this.logger.error('Git \uB85C\uADF8 \uAC00\uC838\uC624\uAE30 \uC2E4\uD328:', logError);\n                this.logger.error('\uC0C1\uC138 \uC624\uB958 \uC815\uBCF4:', JSON.stringify(logError, Object.getOwnPropertyNames(logError)));\n              }\n            }\n          }\n          \n          \n          this.logger.info('\uC774\uC288 \uD0A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC5B4 \uBE48 \uBA85\uB839\uC5B4 \uBC18\uD658');\n          return '@jira:issue ';\n        }\n        \n        case 'create': {\n          \n          let projectCode = 'PROJ';\n          \n          if (gitPlugin) {\n            const gitClient = (gitPlugin as any).client;\n            if (gitClient) {\n              try {\n                \n                const remoteResult = await gitClient.executeGitCommand(['remote', 'get-url', 'origin']);\n                if (remoteResult.success && remoteResult.stdout) {\n                  \n                  const repoName = remoteResult.stdout.trim().split('/').pop()?.replace('.git', '');\n                  if (repoName) {\n                    \n                    projectCode = repoName.replace(/[^a-zA-Z0-9]/g, '').toUpperCase();\n                    if (projectCode.length > 10) {\n                      projectCode = projectCode.substring(0, 10);\n                    }\n                  }\n                }\n              } catch (error) {\n                \n              }\n            }\n          }\n          \n          return `@jira:create ${projectCode} \"\uC81C\uBAA9\" \"\uC124\uBA85\" --type=Task`;\n        }\n        \n        case 'search': {\n          \n          const queries = [\n            `@jira:search \"assignee = currentUser()\"`,\n            `@jira:search \"project = PROJ AND status = Open\"`,\n            `@jira:search \"created >= -7d\"`,\n          ];\n          \n          return queries;\n        }\n        \n        default:\n          return `@jira:${commandName}`;\n      }\n    } catch (error) {\n      this.logger.error(`Jira \uBA85\uB839\uC5B4 \uC0DD\uC131 \uC911 \uC624\uB958: ${error}`);\n      return `@jira:${commandName}`;\n    }\n  }\n  \n  /**\n   * SWDP \uBA85\uB839\uC5B4 \uC790\uB3D9 \uC0DD\uC131\n   * \uD604\uC7AC SWDP \uC0C1\uD0DC\uC5D0 \uB530\uB77C \uCD5C\uC801\uD654\uB41C \uBA85\uB839\uC5B4 \uC0DD\uC131\n   * \n   * @param commandName SWDP \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @returns \uC644\uC131\uB41C SWDP \uBA85\uB839\uC5B4 \uB610\uB294 \uD6C4\uBCF4 \uBAA9\uB85D\n   */\n  private async generateSwdpCommand(commandName: string, context?: any): Promise<string | string[]> {\n    \n    const swdpPlugin = this.registry.getPlugin('swdp');\n    \n    if (!swdpPlugin) {\n      return `@swdp:${commandName}`; \n    }\n    \n    try {\n      \n      switch (commandName) {\n        case 'build': {\n          \n          const gitPlugin = this.registry.getPlugin('git');\n          \n          if (gitPlugin) {\n            const gitClient = (gitPlugin as any).client;\n            if (gitClient) {\n              const gitContext = this.contextCache.get('git');\n              const status = gitContext?.status || await gitClient.getStatus();\n              \n              \n              if (status.branch === 'main' || status.branch === 'master') {\n                return '@swdp:build all';\n              } else if (status.branch.startsWith('feature/')) {\n                return '@swdp:build local --watch';\n              } else if (status.branch.startsWith('release/')) {\n                return '@swdp:build layer';\n              }\n            }\n          }\n          \n          \n          return [\n            '@swdp:build local',\n            '@swdp:build local --watch',\n            '@swdp:build layer',\n            '@swdp:build all'\n          ];\n        }\n        \n        case 'build-status': {\n          \n          const swdpContext = this.contextCache.get('swdp') || {};\n          const recentBuildId = swdpContext.recentBuildId || '12345'; \n          \n          return `@swdp:build:status ${recentBuildId}`;\n        }\n        \n        case 'test': {\n          \n          return [\n            '@swdp:test unit',\n            '@swdp:test integration',\n            '@swdp:test system'\n          ];\n        }\n        \n        default:\n          return `@swdp:${commandName}`;\n      }\n    } catch (error) {\n      this.logger.error(`SWDP \uBA85\uB839\uC5B4 \uC0DD\uC131 \uC911 \uC624\uB958: ${error}`);\n      return `@swdp:${commandName}`;\n    }\n  }\n  \n  /**\n   * Pocket \uBA85\uB839\uC5B4 \uC790\uB3D9 \uC0DD\uC131\n   * \uD604\uC7AC Pocket \uC0C1\uD0DC\uC5D0 \uB530\uB77C \uCD5C\uC801\uD654\uB41C \uBA85\uB839\uC5B4 \uC0DD\uC131\n   * \n   * @param commandName Pocket \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   * @returns \uC644\uC131\uB41C Pocket \uBA85\uB839\uC5B4 \uB610\uB294 \uD6C4\uBCF4 \uBAA9\uB85D\n   */\n  private async generatePocketCommand(commandName: string, context?: any): Promise<string | string[]> {\n    \n    const pocketPlugin = this.registry.getPlugin('pocket');\n    \n    if (!pocketPlugin) {\n      return `@pocket:${commandName}`; \n    }\n    \n    try {\n      \n      switch (commandName) {\n        case 'ls': {\n          \n          return [\n            '@pocket:ls docs/',\n            '@pocket:ls config/',\n            '@pocket:ls reports/',\n            '@pocket:ls '\n          ];\n        }\n        \n        case 'load': {\n          \n          \n          const gitPlugin = this.registry.getPlugin('git');\n          \n          if (gitPlugin) {\n            const gitClient = (gitPlugin as any).client;\n            if (gitClient) {\n              try {\n                const remoteResult = await gitClient.executeGitCommand(['remote', 'get-url', 'origin']);\n                if (remoteResult.success && remoteResult.stdout) {\n                  const repoName = remoteResult.stdout.trim().split('/').pop()?.replace('.git', '');\n                  if (repoName) {\n                    return `@pocket:load ${repoName}.json`;\n                  }\n                }\n              } catch (error) {\n                \n              }\n            }\n          }\n          \n          \n          return [\n            '@pocket:load config.json',\n            '@pocket:load README.md',\n            '@pocket:load settings.json'\n          ];\n        }\n        \n        case 'search': {\n          \n          const gitPlugin = this.registry.getPlugin('git');\n          \n          if (gitPlugin) {\n            const gitClient = (gitPlugin as any).client;\n            if (gitClient) {\n              try {\n                const remoteResult = await gitClient.executeGitCommand(['remote', 'get-url', 'origin']);\n                if (remoteResult.success && remoteResult.stdout) {\n                  const repoName = remoteResult.stdout.trim().split('/').pop()?.replace('.git', '');\n                  if (repoName) {\n                    return `@pocket:search ${repoName}`;\n                  }\n                }\n              } catch (error) {\n                \n              }\n            }\n          }\n          \n          return '@pocket:search ';\n        }\n        \n        default:\n          return `@pocket:${commandName}`;\n      }\n    } catch (error) {\n      this.logger.error(`Pocket \uBA85\uB839\uC5B4 \uC0DD\uC131 \uC911 \uC624\uB958: ${error}`);\n      return `@pocket:${commandName}`;\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 Registry \uC11C\uBE44\uC2A4 \uAC00\uC838\uC624\uAE30\n   * @returns \uBA85\uB839\uC5B4 Registry \uC11C\uBE44\uC2A4\n   */\n  getCommandRegistry(): CommandRegistryService {\n    return this.registry;\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 Executor \uC11C\uBE44\uC2A4 \uAC00\uC838\uC624\uAE30\n   * @returns \uBA85\uB839\uC5B4 Executor \uC11C\uBE44\uC2A4\n   */\n  getCommandExecutor(): CommandExecutorService {\n    return this.executor;\n  }\n  \n  /**\n   * \uD604\uC7AC \uCEE8\uD14D\uC2A4\uD2B8 \uCE90\uC2DC \uC0C1\uD0DC \uAC00\uC838\uC624\uAE30\n   * @returns \uCEE8\uD14D\uC2A4\uD2B8 \uCE90\uC2DC \uB9F5\n   */\n  getContextCache(): Map<string, any> {\n    return this.contextCache;\n  }\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC120\uD638\uB3C4 \uB370\uC774\uD130 \uC5C5\uB370\uC774\uD2B8\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @param commandName \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param args \uC0AC\uC6A9\uB41C \uC778\uC790\n   */\n  updatePreference(pluginId: string, commandName: string, args: any[]): void {\n    if (!this.preferenceCache.has(pluginId)) {\n      this.preferenceCache.set(pluginId, new Map());\n    }\n    \n    const pluginPrefs = this.preferenceCache.get(pluginId)!;\n    \n    if (!pluginPrefs.has(commandName)) {\n      pluginPrefs.set(commandName, []);\n    }\n    \n    const cmdPrefs = pluginPrefs.get(commandName)!;\n    \n    \n    cmdPrefs.unshift(args);\n    if (cmdPrefs.length > 5) {\n      cmdPrefs.pop();\n    }\n  }\n}", "/**\n * \uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC\n * \n * \uB0B4\uBD80 \uBC0F \uC678\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uBC0F \uAD00\uB9AC\n * \uBA85\uB839\uC5B4 \uB4F1\uB85D \uBC0F \uC2E4\uD589 \uAD00\uB9AC\n */\n\nimport { EventEmitter } from 'events';\nimport { IPlugin, IPluginRegistry, PluginCommand, PluginType } from '../../types/PluginTypes';\nimport { IConfigLoader } from '../../types/ConfigTypes';\n\n/**\n * \uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC \uD074\uB798\uC2A4\n * \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uBC0F \uAD00\uB9AC\n */\nexport class PluginRegistryService implements IPluginRegistry {\n  private eventEmitter = new EventEmitter();\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uB4F1\uB85D \uBA54\uC11C\uB4DC\n   * @param event \uC774\uBCA4\uD2B8 \uC774\uB984\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   */\n  public on(event: string, listener: (...args: any[]) => void): void {\n    this.eventEmitter.on(event, listener);\n  }\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uC81C\uAC70 \uBA54\uC11C\uB4DC\n   * @param event \uC774\uBCA4\uD2B8 \uC774\uB984\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   */\n  public off(event: string, listener: (...args: any[]) => void): void {\n    this.eventEmitter.off(event, listener);\n  }\n  \n  /**\n   * \uB3C4\uBA54\uC778\uC73C\uB85C \uD50C\uB7EC\uADF8\uC778 \uAC00\uC838\uC624\uAE30\n   * @param domain \uD50C\uB7EC\uADF8\uC778 \uB3C4\uBA54\uC778\n   * @returns \uD50C\uB7EC\uADF8\uC778 \uB610\uB294 undefined\n   */\n  getPluginByDomain(domain: string): IPlugin | undefined {\n    return this.getAllPlugins().find(plugin => plugin.getDomain() === domain);\n  }\n  /**\n   * \uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB9F5\n   */\n  private _internalPlugins: Map<string, IPlugin> = new Map();\n  \n  /**\n   * \uC678\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB9F5\n   */\n  private _externalPlugins: Map<string, IPlugin> = new Map();\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uB808\uC9C0\uC2A4\uD2B8\uB9AC \uC0DD\uC131\uC790\n   * @param configLoader \uC124\uC815 \uB85C\uB354\n   */\n  constructor(private configLoader: IConfigLoader) {\n    \n  }\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D\n   * @param plugin \uB4F1\uB85D\uD560 \uD50C\uB7EC\uADF8\uC778\n   * @param type \uD50C\uB7EC\uADF8\uC778 \uD0C0\uC785 (\uAE30\uBCF8: \uC678\uBD80)\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  registerPlugin(plugin: IPlugin, type: PluginType | string = PluginType.EXTERNAL): boolean {\n    try {\n      if (!plugin || !plugin.id) {\n        console.error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uD50C\uB7EC\uADF8\uC778:', plugin);\n        return false;\n      }\n      \n      \n      console.log('\uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC2DC\uB3C4:', {\n        id: plugin.id,\n        name: plugin.name,\n        methods: Object.getOwnPropertyNames(plugin),\n        type: type\n      });\n      \n      \n      const pluginType = typeof type === 'string' ? \n        (type === 'internal' ? PluginType.INTERNAL : PluginType.EXTERNAL) : type;\n      \n      const pluginMap = pluginType === PluginType.INTERNAL ? \n        this._internalPlugins : this._externalPlugins;\n      \n      \n      if (pluginMap.has(plugin.id)) {\n        console.warn(`\uC774\uBBF8 \uB4F1\uB85D\uB41C \uD50C\uB7EC\uADF8\uC778: ${plugin.id}`);\n        return false;\n      }\n      \n      \n      pluginMap.set(plugin.id, plugin);\n      console.log(`\uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC131\uACF5: ${plugin.id} (${pluginType})`);\n      this.eventEmitter.emit('plugin-registered', { id: plugin.id, type: pluginType });\n      return true;\n    } catch (error) {\n      console.error(`\uD50C\uB7EC\uADF8\uC778 \uB4F1\uB85D \uC911 \uC624\uB958 \uBC1C\uC0DD (${plugin?.id}):`, error);\n      console.error('\uC624\uB958 \uC138\uBD80 \uC815\uBCF4:', JSON.stringify(error, Object.getOwnPropertyNames(error)));\n      return false;\n    }\n  }\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uC81C\uAC70\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @param type \uD50C\uB7EC\uADF8\uC778 \uD0C0\uC785 (\uAE30\uBCF8: \uC678\uBD80)\n   * @returns \uC81C\uAC70 \uC131\uACF5 \uC5EC\uBD80\n   */\n  unregisterPlugin(pluginId: string, type: PluginType | string = PluginType.EXTERNAL): boolean {\n    try {\n      \n      const pluginType = typeof type === 'string' ? \n        (type === 'internal' ? PluginType.INTERNAL : PluginType.EXTERNAL) : type;\n      \n      const pluginMap = pluginType === PluginType.INTERNAL ? \n        this._internalPlugins : this._externalPlugins;\n      \n      if (!pluginMap.has(pluginId)) {\n        console.warn(`\uB4F1\uB85D\uB418\uC9C0 \uC54A\uC740 \uD50C\uB7EC\uADF8\uC778: ${pluginId}`);\n        return false;\n      }\n      \n      pluginMap.delete(pluginId);\n      this.eventEmitter.emit('plugin-unregistered', { id: pluginId, type: pluginType });\n      return true;\n    } catch (error) {\n      console.error(`\uD50C\uB7EC\uADF8\uC778 \uC81C\uAC70 \uC911 \uC624\uB958 \uBC1C\uC0DD (${pluginId}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uAC00\uC838\uC624\uAE30\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @returns \uD50C\uB7EC\uADF8\uC778 \uB610\uB294 undefined\n   */\n  getPlugin(pluginId: string): IPlugin | undefined {\n    return this._internalPlugins.get(pluginId) || this._externalPlugins.get(pluginId);\n  }\n  \n  /**\n   * \uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @returns \uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBAA9\uB85D\n   */\n  getInternalPlugins(): IPlugin[] {\n    return Array.from(this._internalPlugins.values());\n  }\n  \n  /**\n   * \uC678\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @returns \uC678\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBAA9\uB85D\n   */\n  getExternalPlugins(): IPlugin[] {\n    return Array.from(this._externalPlugins.values());\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uD50C\uB7EC\uADF8\uC778 \uAC00\uC838\uC624\uAE30\n   * @returns \uD50C\uB7EC\uADF8\uC778 \uBAA9\uB85D\n   */\n  getAllPlugins(): IPlugin[] {\n    return [...this.getInternalPlugins(), ...this.getExternalPlugins()];\n  }\n  \n  /**\n   * \uD65C\uC131\uD654\uB41C \uD50C\uB7EC\uADF8\uC778 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @returns \uD65C\uC131\uD654\uB41C \uD50C\uB7EC\uADF8\uC778 \uBAA9\uB85D\n   */\n  getEnabledPlugins(): IPlugin[] {\n    return this.getAllPlugins().filter(plugin => plugin.isEnabled());\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uD50C\uB7EC\uADF8\uC778 \uBA85\uB839\uC5B4 \uAC00\uC838\uC624\uAE30\n   * @returns \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   */\n  getAllCommands(): PluginCommand[] {\n    const commands: PluginCommand[] = [];\n    \n    for (const plugin of this.getAllPlugins()) {\n      if (plugin.isEnabled()) {\n        commands.push(...plugin.getCommands());\n      }\n    }\n    \n    return commands;\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uD50C\uB7EC\uADF8\uC778 \uCD08\uAE30\uD654\n   * @returns \uCD08\uAE30\uD654 \uC131\uACF5 \uC5EC\uBD80\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      for (const plugin of this.getAllPlugins()) {\n        if (plugin.isEnabled()) {\n          try {\n            await plugin.initialize();\n          } catch (error) {\n            console.error(`\uD50C\uB7EC\uADF8\uC778 \uCD08\uAE30\uD654 \uC911 \uC624\uB958 \uBC1C\uC0DD (${plugin.id}):`, error);\n          }\n        }\n      }\n      \n      this.eventEmitter.emit('plugins-initialized');\n      return true;\n    } catch (error) {\n      console.error('\uD50C\uB7EC\uADF8\uC778 \uCD08\uAE30\uD654 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4\uB85C \uD50C\uB7EC\uADF8\uC778 \uBC0F \uBA54\uC11C\uB4DC \uCC3E\uAE30\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @param commandName \uBA85\uB839\uC5B4 \uC774\uB984\n   * @returns \uD50C\uB7EC\uADF8\uC778\uACFC \uBA85\uB839\uC5B4 \uC815\uBCF4\n   */\n  findCommand(pluginId: string, commandName: string): { plugin: IPlugin, command: PluginCommand } | null {\n    const plugin = this.getPlugin(pluginId);\n    \n    if (!plugin || !plugin.isEnabled()) {\n      return null;\n    }\n    \n    const command = plugin.getCommands().find(cmd => (cmd.name === commandName) || (cmd.id === commandName));\n    \n    if (!command) {\n      return null;\n    }\n    \n    return { plugin, command };\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @param commandName \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param args \uBA85\uB839\uC5B4 \uC778\uC790\n   * @returns \uC2E4\uD589 \uACB0\uACFC\n   */\n  async executeCommand(pluginId: string, commandName: string, args: any[]): Promise<any> {\n    const found = this.findCommand(pluginId, commandName);\n    \n    if (!found) {\n      throw new Error(`\uBA85\uB839\uC5B4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${pluginId}:${commandName}`);\n    }\n    \n    return await found.plugin.executeCommand(commandName, args);\n  }\n  \n  /**\n   * \uC678\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB85C\uB4DC\n   * \uCC38\uACE0: \uC2E4\uC81C \uAD6C\uD604\uC740 ExternalPluginLoader \uD074\uB798\uC2A4\uC5D0\uC11C \uCC98\uB9AC\n   * @returns \uB85C\uB4DC\uB41C \uD50C\uB7EC\uADF8\uC778 \uC218\n   */\n  async loadExternalPlugins(): Promise<number> {\n    try {\n      \n      \n      \n      \n      const pluginsConfig = this.configLoader.getPluginConfig();\n      if (!pluginsConfig) {\n        console.log('\uC678\uBD80 \uD50C\uB7EC\uADF8\uC778 \uC124\uC815\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n        return 0;\n      }\n      \n      \n      \n      \n      return this._externalPlugins.size;\n    } catch (error) {\n      console.error('\uC678\uBD80 \uD50C\uB7EC\uADF8\uC778 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return 0;\n    }\n  }\n}", "/**\n * \uD1B5\uD569 \uC124\uC815 \uAD00\uB9AC \uBAA8\uB4C8\n * \n * settings.json \uC124\uC815 \uD30C\uC77C\uC744 \uB85C\uB4DC, \uAC80\uC99D, \uAD00\uB9AC\uD558\uB294 \uD1B5\uD569 \uD074\uB798\uC2A4\n * \uB0B4\uBD80 \uD50C\uB7EC\uADF8\uC778 \uBC0F \uC678\uBD80 \uD50C\uB7EC\uADF8\uC778\uC744 \uC704\uD55C \uC124\uC815 \uC81C\uACF5\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { IConfigLoader, ConfigSection, CoreConfig, AgentConfig, PluginConfig } from '../../types/ConfigTypes';\n\n\ntype VSCodeExtensionContext = {\n  extensionPath: string;\n  globalStorageUri?: { fsPath: string };\n};\n\n/**\n * \uD1B5\uD569 \uC124\uC815 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n * settings.json \uD30C\uC77C\uC744 \uB85C\uB4DC\uD558\uACE0 \uAC80\uC99D\uD558\uBA70 \uC124\uC815 \uAC12\uC744 \uAD00\uB9AC\n * VS Code \uD655\uC7A5 \uBC0F CLI \uD658\uACBD \uBAA8\uB450 \uC9C0\uC6D0\n */\nexport class ConfigService implements IConfigLoader {\n  \n  /**\n   * \uC124\uC815 \uAC1D\uCCB4\n   */\n  protected config: any = {};\n  \n  /**\n   * \uC124\uC815 \uD30C\uC77C \uACBD\uB85C\n   */\n  protected configPath: string;\n  \n  /**\n   * JSON \uC2A4\uD0A4\uB9C8 \uB9F5\n   */\n  private schemas: Map<string, any> = new Map();\n  \n  /**\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 (\uB808\uAC70\uC2DC \uD638\uD658\uC131 \uC720\uC9C0)\n   */\n  private static instance: ConfigService;\n  \n  /**\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 \uAC00\uC838\uC624\uAE30\n   * @deprecated \uC2F1\uAE00\uD1A4 \uD328\uD134 \uB300\uC2E0 \uC758\uC874\uC131 \uC8FC\uC785 \uC0AC\uC6A9 \uAD8C\uC7A5\n   * @returns ConfigService \uC778\uC2A4\uD134\uC2A4\n   */\n  public static getInstance(): ConfigService {\n    if (!ConfigService.instance) {\n      ConfigService.instance = new ConfigService();\n    }\n    return ConfigService.instance;\n  }\n  \n  /**\n   * \uD329\uD1A0\uB9AC \uBA54\uC11C\uB4DC: \uC778\uC2A4\uD134\uC2A4 \uC0DD\uC131\n   * @param context VSCode \uD655\uC7A5 \uCEE8\uD14D\uC2A4\uD2B8 (CLI \uD658\uACBD\uC5D0\uC11C\uB294 null)\n   * @returns ConfigService \uC778\uC2A4\uD134\uC2A4\n   */\n  public static createInstance(context?: VSCodeExtensionContext | null): ConfigService {\n    return new ConfigService(context);\n  }\n\n  /**\n   * ConfigService \uC0DD\uC131\uC790\n   * @param context VSCode \uD655\uC7A5 \uCEE8\uD14D\uC2A4\uD2B8 (CLI \uD658\uACBD\uC5D0\uC11C\uB294 null)\n   */\n  constructor(private context?: VSCodeExtensionContext | null) {\n    \n    if (context) {\n      \n      try {\n        \n        if (typeof require('vscode') !== 'undefined' && require('vscode').workspace) {\n          const vscode = require('vscode');\n          const workspaceFolders = vscode.workspace.workspaceFolders;\n          if (workspaceFolders && workspaceFolders.length > 0) {\n            this.configPath = path.join(workspaceFolders[0].uri.fsPath, 'settings.json');\n            return;\n          }\n        }\n      } catch (e) {\n        \n      }\n      \n      \n      if (this.context && this.context.extensionPath) {\n        this.configPath = path.join(this.context.extensionPath, 'settings.json');\n      } else {\n        \n        this.configPath = path.join(process.cwd(), 'settings.json');\n      }\n    } else {\n      \n      this.configPath = path.join(process.cwd(), 'settings.json');\n    }\n\n    \n    this.loadDefaultSchemas();\n  }\n\n  \n  \n  /**\n   * \uC124\uC815 \uB85C\uB4DC\n   * settings.json \uD30C\uC77C\uC744 \uB85C\uB4DC\uD558\uACE0 \uC720\uD6A8\uC131 \uAC80\uC99D\n   * @returns \uB85C\uB4DC \uC131\uACF5 \uC5EC\uBD80\n   */\n  async load(): Promise<boolean> {\n    try {\n      \n      if (!fs.existsSync(this.configPath)) {\n        console.log('\uC124\uC815 \uD30C\uC77C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4. \uD15C\uD50C\uB9BF \uD30C\uC77C\uB85C\uBD80\uD130 \uAE30\uBCF8 \uC124\uC815\uC744 \uC0DD\uC131\uD569\uB2C8\uB2E4.');\n        \n        \n        let templatePath = '';\n        if (this.context) {\n          \n          templatePath = path.join(this.context.extensionPath, 'settings.json.template');\n        } else {\n          \n          const possiblePaths = [\n            path.join(process.cwd(), 'settings.json.template'),\n            path.join(__dirname, '..', '..', '..', 'settings.json.template') \n          ];\n          \n          for (const p of possiblePaths) {\n            if (fs.existsSync(p)) {\n              templatePath = p;\n              break;\n            }\n          }\n        }\n        \n        \n        if (!templatePath || !fs.existsSync(templatePath)) {\n          console.error('\uD15C\uD50C\uB9BF \uC124\uC815 \uD30C\uC77C\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC74C');\n          return false;\n        }\n        \n        \n        fs.copyFileSync(templatePath, this.configPath);\n        console.log(`\uAE30\uBCF8 \uC124\uC815 \uD30C\uC77C\uC774 \uC0DD\uC131\uB418\uC5C8\uC2B5\uB2C8\uB2E4: ${this.configPath}`);\n      }\n      \n      \n      const configContent = fs.readFileSync(this.configPath, 'utf8');\n      this.config = JSON.parse(configContent);\n      \n      \n      const localConfigPath = path.join(path.dirname(this.configPath), 'settings.local.json');\n      if (fs.existsSync(localConfigPath)) {\n        try {\n          const localConfigContent = fs.readFileSync(localConfigPath, 'utf8');\n          const localConfig = JSON.parse(localConfigContent);\n          \n          \n          this.mergeDeep(this.config, localConfig);\n          console.log('\uB85C\uCEEC \uC124\uC815\uC774 \uB85C\uB4DC\uB418\uC5C8\uC2B5\uB2C8\uB2E4:', localConfigPath);\n        } catch (localError) {\n          console.warn('\uB85C\uCEEC \uC124\uC815 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', localError);\n          \n        }\n      }\n      \n      \n      const isValid = await this.validate(this.config);\n      if (!isValid) {\n        console.error('\uC124\uC815 \uD30C\uC77C \uC720\uD6A8\uC131 \uAC80\uC99D \uC2E4\uD328');\n        return false;\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('\uC124\uC815 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uAC1D\uCCB4 \uAE4A\uC740 \uBCD1\uD569 (\uB450 \uBC88\uC9F8 \uAC1D\uCCB4\uC758 \uC18D\uC131\uC744 \uCCAB \uBC88\uC9F8 \uAC1D\uCCB4\uC5D0 \uBCD1\uD569)\n   * @param target \uB300\uC0C1 \uAC1D\uCCB4\n   * @param source \uC18C\uC2A4 \uAC1D\uCCB4\n   * @returns \uBCD1\uD569\uB41C \uAC1D\uCCB4\n   */\n  private mergeDeep(target: any, source: any): any {\n    if (!source) return target;\n    \n    for (const key in source) {\n      if (source.hasOwnProperty(key)) {\n        if (source[key] instanceof Object && !Array.isArray(source[key])) {\n          if (!target[key]) Object.assign(target, { [key]: {} });\n          this.mergeDeep(target[key], source[key]);\n        } else {\n          Object.assign(target, { [key]: source[key] });\n        }\n      }\n    }\n    \n    return target;\n  }\n  \n  /**\n   * \uD2B9\uC815 \uC139\uC158\uC758 \uC124\uC815 \uAC00\uC838\uC624\uAE30\n   * @param section \uC124\uC815 \uC139\uC158 \uACBD\uB85C\n   * @returns \uC124\uC815 \uC139\uC158 \uAC1D\uCCB4\n   */\n  getSection<T extends ConfigSection>(section: string): T {\n    return this.get<T>(section, {} as T);\n  }\n  \n  /**\n   * \uCF54\uC5B4 \uC124\uC815 \uAC00\uC838\uC624\uAE30\n   * @returns \uCF54\uC5B4 \uC124\uC815 \uAC1D\uCCB4\n   */\n  getCoreConfig(): CoreConfig {\n    return this.getSection<CoreConfig>('core');\n  }\n  \n  /**\n   * \uC5D0\uC774\uC804\uD2B8 \uC124\uC815 \uAC00\uC838\uC624\uAE30\n   * @param agentId \uC5D0\uC774\uC804\uD2B8 ID (\uC0DD\uB7B5 \uC2DC \uC804\uCCB4 \uC5D0\uC774\uC804\uD2B8 \uC124\uC815)\n   * @returns \uC5D0\uC774\uC804\uD2B8 \uC124\uC815 \uAC1D\uCCB4\n   */\n  getAgentConfig(agentId?: string): AgentConfig | Record<string, AgentConfig> {\n    if (agentId) {\n      return this.getSection<AgentConfig>(`agents.${agentId}`);\n    }\n    return this.getSection<Record<string, AgentConfig>>('agents');\n  }\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uC124\uC815 \uAC00\uC838\uC624\uAE30\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID (\uC0DD\uB7B5 \uC2DC \uC804\uCCB4 \uD50C\uB7EC\uADF8\uC778 \uC124\uC815)\n   * @returns \uD50C\uB7EC\uADF8\uC778 \uC124\uC815 \uAC1D\uCCB4\n   */\n  getPluginConfig(pluginId?: string): PluginConfig | Record<string, PluginConfig> {\n    if (pluginId) {\n      return this.getSection<PluginConfig>(`plugins.${pluginId}`);\n    }\n    return this.getSection<Record<string, PluginConfig>>('plugins');\n  }\n  \n  /**\n   * \uD50C\uB7EC\uADF8\uC778 \uC124\uC815 \uAC00\uC838\uC624\uAE30 (\uAC04\uB2E8\uD55C \uBC84\uC804)\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @returns \uD50C\uB7EC\uADF8\uC778 \uC124\uC815 \uAC1D\uCCB4 \uB610\uB294 null\n   */\n  getPlugin(pluginId: string): Record<string, any> | null {\n    try {\n      const pluginConfig = this.getPluginConfig(pluginId);\n      return pluginConfig as Record<string, any>;\n    } catch (error) {\n      console.error(`\uD50C\uB7EC\uADF8\uC778 \uC124\uC815 \uAC00\uC838\uC624\uAE30 \uC2E4\uD328 (${pluginId}):`, error);\n      return null;\n    }\n  }\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC124\uC815 \uAC00\uC838\uC624\uAE30\n   * @returns \uC0AC\uC6A9\uC790 \uC124\uC815 \uAC1D\uCCB4\n   */\n  getUserConfig(): Record<string, any> {\n    return this.getSection<Record<string, any>>('user');\n  }\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC124\uC815 \uC5C5\uB370\uC774\uD2B8\n   * @param config \uC5C5\uB370\uC774\uD2B8\uD560 \uC124\uC815 \uAC1D\uCCB4\n   * @returns \uC5C5\uB370\uC774\uD2B8 \uC131\uACF5 \uC5EC\uBD80\n   */\n  updateUserConfig(config: Record<string, any>): boolean {\n    try {\n      \n      const userConfig = this.getUserConfig();\n      \n      \n      const updatedConfig = { ...userConfig, ...config };\n      \n      \n      this.set('user', updatedConfig);\n      return this.save();\n    } catch (error) {\n      console.error('\uC0AC\uC6A9\uC790 \uC124\uC815 \uC5C5\uB370\uC774\uD2B8 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC124\uC815 \uAC00\uC838\uC624\uAE30\n   * @returns \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC124\uC815 \uAC1D\uCCB4\n   */\n  getAppConfig(): Record<string, any> {\n    return this.getSection<Record<string, any>>('app');\n  }\n  \n  /**\n   * \uC124\uC815 \uC5C5\uB370\uC774\uD2B8\n   * @param section \uC124\uC815 \uC139\uC158\n   * @param config \uC5C5\uB370\uC774\uD2B8\uD560 \uC124\uC815 \uAC1D\uCCB4\n   * @returns \uC5C5\uB370\uC774\uD2B8 \uC131\uACF5 \uC5EC\uBD80\n   */\n  updateConfig(section: string, config: Record<string, any>): boolean {\n    try {\n      \n      const currentConfig = this.getSection(section);\n      \n      \n      const updatedConfig = { ...currentConfig, ...config };\n      \n      \n      this.set(section, updatedConfig);\n      return this.save();\n    } catch (error) {\n      console.error(`\uC124\uC815 \uC5C5\uB370\uC774\uD2B8 \uC911 \uC624\uB958 \uBC1C\uC0DD (${section}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uD2B9\uC815 \uC124\uC815 \uAC12 \uAC00\uC838\uC624\uAE30\n   * @param key \uC124\uC815 \uD0A4 \uACBD\uB85C (\uC810\uC73C\uB85C \uAD6C\uBD84, \uC608: 'core.logLevel')\n   * @param defaultValue \uAE30\uBCF8\uAC12\n   * @returns \uC124\uC815 \uAC12 \uB610\uB294 \uAE30\uBCF8\uAC12\n   */\n  get<T>(key: string, defaultValue: T): T {\n    try {\n      const parts = key.split('.');\n      let current: any = this.config;\n      \n      for (const part of parts) {\n        if (current === undefined || current === null || current[part] === undefined) {\n          return defaultValue;\n        }\n        current = current[part];\n      }\n      \n      return current as T;\n    } catch (error) {\n      console.error(`\uC124\uC815 \uAC12 \uAC00\uC838\uC624\uAE30 \uC2E4\uD328 (${key}):`, error);\n      return defaultValue;\n    }\n  }\n  \n  /**\n   * \uD658\uACBD \uBCC0\uC218 \uD655\uC778 \uBC0F \uB300\uCCB4\n   * @param value \uD658\uACBD \uBCC0\uC218\uB97C \uD3EC\uD568\uD560 \uC218 \uC788\uB294 \uBB38\uC790\uC5F4\n   * @returns \uD658\uACBD \uBCC0\uC218\uAC00 \uB300\uCCB4\uB41C \uBB38\uC790\uC5F4\n   */\n  resolveEnvVars(value: string): string {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    \n    \n    return value.replace(/\\${([^}]+)}/g, (match, varName) => {\n      const envValue = process.env[varName];\n      return envValue !== undefined ? envValue : match;\n    });\n  }\n  \n  /**\n   * \uC124\uC815 \uAC12 \uC124\uC815 (\uC800\uC7A5\uD558\uC9C0 \uC54A\uC74C)\n   * @param key \uC124\uC815 \uD0A4 \uACBD\uB85C\n   * @param value \uC124\uC815 \uAC12\n   */\n  set(key: string, value: any): void {\n    const parts = key.split('.');\n    const lastPart = parts.pop();\n    \n    if (!lastPart) {\n      return;\n    }\n    \n    let current: any = this.config;\n    \n    for (const part of parts) {\n      if (current[part] === undefined) {\n        current[part] = {};\n      }\n      current = current[part];\n    }\n    \n    current[lastPart] = value;\n  }\n  \n  /**\n   * \uC124\uC815 \uC800\uC7A5\n   * @returns \uC800\uC7A5 \uC131\uACF5 \uC5EC\uBD80\n   */\n  save(): boolean {\n    try {\n      fs.writeFileSync(this.configPath, JSON.stringify(this.config, null, 2));\n      return true;\n    } catch (error) {\n      console.error('\uC124\uC815 \uC800\uC7A5 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return false;\n    }\n  }\n\n  \n\n  /**\n   * \uAE30\uBCF8 \uC2A4\uD0A4\uB9C8 \uB85C\uB4DC\n   */\n  private loadDefaultSchemas(): void {\n    \n    this.schemas.set('core', {\n      type: 'object',\n      properties: {\n        logLevel: {\n          type: 'string',\n          enum: ['debug', 'info', 'warn', 'error']\n        },\n        sslBypass: {\n          type: 'boolean'\n        },\n        storagePath: {\n          type: 'string'\n        },\n        offlineMode: {\n          type: 'boolean'\n        },\n        embedDevMode: {\n          type: 'boolean',\n          description: '\uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC \uD65C\uC131\uD654 \uC5EC\uBD80'\n        }\n      }\n    });\n    \n    \n    this.schemas.set('plugins', {\n      type: 'object',\n      additionalProperties: {\n        type: 'object',\n        properties: {\n          enabled: {\n            type: 'boolean'\n          },\n          name: {\n            type: 'string'\n          },\n          description: {\n            type: 'string'\n          },\n          commands: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string'\n                },\n                description: {\n                  type: 'string'\n                },\n                syntax: {\n                  type: 'string'\n                },\n                examples: {\n                  type: 'array',\n                  items: {\n                    type: 'string'\n                  }\n                },\n                api: {\n                  type: 'object',\n                  properties: {\n                    endpoint: {\n                      type: 'string'\n                    },\n                    method: {\n                      type: 'string',\n                      enum: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH']\n                    },\n                    headers: {\n                      type: 'object',\n                      additionalProperties: {\n                        type: 'string'\n                      }\n                    },\n                    body: {\n                      type: 'object'\n                    }\n                  },\n                  required: ['endpoint', 'method']\n                }\n              },\n              required: ['name', 'description', 'syntax']\n            }\n          }\n        },\n        required: ['enabled', 'name']\n      }\n    });\n  }\n  \n  /**\n   * \uC124\uC815 \uC720\uD6A8\uC131 \uAC80\uC99D\n   * @param config \uAC80\uC99D\uD560 \uC124\uC815 \uAC1D\uCCB4\n   * @returns \uC720\uD6A8\uC131 \uC5EC\uBD80\n   */\n  public async validate(config: any): Promise<boolean> {\n    try {\n      \n      if (!config || typeof config !== 'object') {\n        console.error('\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uC124\uC815 \uD615\uC2DD: \uAC1D\uCCB4\uAC00 \uC544\uB2D8');\n        return false;\n      }\n      \n      \n      if (!config.core) {\n        console.warn('\uCF54\uC5B4 \uC124\uC815 \uC139\uC158\uC774 \uC5C6\uC74C');\n        \n      }\n      \n      \n      if (config.core && !this.validateSection(config.core, this.schemas.get('core'))) {\n        console.error('\uCF54\uC5B4 \uC124\uC815 \uC720\uD6A8\uC131 \uAC80\uC99D \uC2E4\uD328');\n        return false;\n      }\n      \n      \n      if (config.plugins && !this.validateSection(config.plugins, this.schemas.get('plugins'))) {\n        console.error('\uD50C\uB7EC\uADF8\uC778 \uC124\uC815 \uC720\uD6A8\uC131 \uAC80\uC99D \uC2E4\uD328');\n        return false;\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('\uC124\uC815 \uAC80\uC99D \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uC124\uC815 \uC720\uD6A8\uC131 \uAC80\uC99D \n   * @returns \uC720\uD6A8\uC131 \uC5EC\uBD80\n   */\n  public async validateConfig(): Promise<boolean> {\n    try {\n      \n      if (Object.keys(this.config).length === 0) {\n        console.warn('\uC124\uC815\uC774 \uB85C\uB4DC\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uBE48 \uAC1D\uCCB4\uB85C \uAC80\uC99D\uD569\uB2C8\uB2E4.');\n        return this.validate({});\n      }\n      \n      \n      return this.validate(this.config);\n    } catch (error) {\n      console.error('\uC124\uC815 \uAC80\uC99D \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uC124\uC815 \uC139\uC158 \uC720\uD6A8\uC131 \uAC80\uC99D\n   * \uAC04\uB2E8\uD55C \uC720\uD6A8\uC131 \uAC80\uC0AC \uC218\uD589 (\uC2E4\uC81C\uB85C\uB294 \uB354 \uC815\uAD50\uD55C JSON \uC2A4\uD0A4\uB9C8 \uAC80\uC99D \uB77C\uC774\uBE0C\uB7EC\uB9AC \uC0AC\uC6A9 \uAD8C\uC7A5)\n   * @param section \uAC80\uC99D\uD560 \uC124\uC815 \uC139\uC158\n   * @param schema JSON \uC2A4\uD0A4\uB9C8\n   * @returns \uC720\uD6A8\uC131 \uC5EC\uBD80\n   */\n  private validateSection(section: any, schema: any): boolean {\n    \n    \n    \n    try {\n      \n      if (schema.type === 'object' && typeof section !== 'object') {\n        return false;\n      }\n      \n      \n      if (schema.properties) {\n        for (const [key, propSchema] of Object.entries<any>(schema.properties)) {\n          if (section[key] !== undefined) {\n            if (propSchema.type === 'string' && typeof section[key] !== 'string') {\n              return false;\n            } else if (propSchema.type === 'boolean' && typeof section[key] !== 'boolean') {\n              return false;\n            } else if (propSchema.type === 'number' && typeof section[key] !== 'number') {\n              return false;\n            } else if (propSchema.type === 'array' && !Array.isArray(section[key])) {\n              return false;\n            } else if (propSchema.type === 'object' && (typeof section[key] !== 'object' || Array.isArray(section[key]))) {\n              return false;\n            }\n            \n            \n            if (propSchema.enum && !propSchema.enum.includes(section[key])) {\n              return false;\n            }\n          }\n        }\n      }\n      \n      \n      if (schema.required) {\n        for (const requiredProp of schema.required) {\n          if (section[requiredProp] === undefined) {\n            return false;\n          }\n        }\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('\uC124\uC815 \uC139\uC158 \uAC80\uC99D \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return false;\n    }\n  }\n}", "import * as vscode from 'vscode';\nimport { \n  ChatMessage, \n  LlmRequestOptions, \n  LlmResponse, \n  ModelConfig,\n  ApiKeyError\n} from '../../types/LlmTypes';\nimport { ILlmService } from './ILlmService';\nimport { ApiClient } from './ApiClient';\nimport { environmentService } from '../env/EnvironmentService';\nimport { LoggerService } from '../utils/LoggerService';\n\nexport class LlmService implements ILlmService {\n  private modelCache: Map<string, ModelConfig> = new Map();\n  private logger: LoggerService;\n  private defaultModelId: string;\n  \n  constructor() {\n    this.logger = new LoggerService('LlmService');\n    this.loadAvailableModels();\n    this.defaultModelId = this.getDefaultModelId();\n  }\n  \n  private loadAvailableModels(): void {\n    try {\n      const models = environmentService.getAvailableModels();\n      \n      this.modelCache.clear();\n      \n      for (const model of models) {\n        this.modelCache.set(model.id, model);\n      }\n      \n      if (this.modelCache.size === 0) {\n        const fallbackModels = this.getFallbackModels();\n        for (const model of fallbackModels) {\n          this.modelCache.set(model.id, model);\n        }\n      }\n    } catch (error) {\n      this.logger.error('\uBAA8\uB378 \uBAA9\uB85D \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD', error);\n      \n      const fallbackModels = this.getFallbackModels();\n      for (const model of fallbackModels) {\n        this.modelCache.set(model.id, model);\n      }\n    }\n  }\n  \n  private getFallbackModels(): ModelConfig[] {\n    return [\n      {\n        id: 'local-fallback',\n        name: '\uB85C\uCEEC \uC2DC\uBBAC\uB808\uC774\uC158 (\uC624\uD504\uB77C\uC778)',\n        provider: 'local',\n        temperature: 0.7\n      }\n    ];\n  }\n  \n  public async sendRequest(options: LlmRequestOptions): Promise<LlmResponse> {\n    if (!options) {\n      throw new Error('\uC694\uCCAD \uC635\uC158\uC774 \uC81C\uACF5\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.');\n    }\n    \n    const { \n      model = this.getDefaultModelId(), \n      messages = [], \n      temperature, \n      maxTokens, \n      stream, \n      onUpdate \n    } = options;\n    \n    if (!Array.isArray(messages)) {\n      throw new Error('\uC694\uCCAD \uBA54\uC2DC\uC9C0\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.');\n    }\n    \n    const finalMessages = messages.length === 0 ? [{\n      role: 'user',\n      content: '\uC548\uB155\uD558\uC138\uC694'\n    }] : messages;\n    \n    const modelId = String(model || this.getDefaultModelId());\n    let modelConfig = this.getModelConfig(modelId);\n    \n    if (!modelConfig) {\n      return this.simulateLocalModel(finalMessages);\n    }\n    \n    if (modelConfig.systemPrompt && !finalMessages.some(m => m.role === 'system')) {\n      finalMessages.unshift({\n        role: 'system',\n        content: modelConfig.systemPrompt\n      });\n    }\n    \n    try {\n      const apiClient = new ApiClient(modelConfig);\n      \n      if (stream && onUpdate) {\n        const result = await apiClient.chatCompletion({\n          messages: finalMessages,\n          modelId: modelConfig.id,\n          systemPrompt: modelConfig.systemPrompt,\n          temperature: temperature || modelConfig.temperature,\n          maxTokens: maxTokens || modelConfig.maxTokens,\n          stream: true,\n          onUpdate\n        });\n        \n        return {\n          content: result.content,\n          model: modelConfig.id,\n          raw: result\n        };\n      }\n      \n      const result = await apiClient.chatCompletion({\n        messages: finalMessages,\n        modelId: modelConfig.id,\n        systemPrompt: modelConfig.systemPrompt,\n        temperature: temperature || modelConfig.temperature,\n        maxTokens: maxTokens || modelConfig.maxTokens,\n        stream: false\n      });\n      \n      return {\n        content: result.content,\n        model: modelConfig.id,\n        raw: result\n      };\n    } catch (error) {\n      this.logger.error('LlmService: \uC694\uCCAD \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      \n      const isApiKeyError = (err: unknown): err is ApiKeyError => {\n        return err instanceof Error && \n               'code' in err && \n               (err as { code?: string }).code !== undefined &&\n               ((err as { code: string }).code === 'missing_api_key' || (err as { code: string }).code === 'invalid_api_key');\n      };\n      \n      if (isApiKeyError(error)) {\n        return this.simulateLocalModel(finalMessages);\n      }\n      \n      return this.simulateLocalModel(finalMessages);\n    }\n  }\n  \n  public async queryLlm(\n    text: string, \n    model?: string, \n    options?: Partial<LlmRequestOptions>\n  ): Promise<string> {\n    if (!text) {\n      return '\uCFFC\uB9AC \uD14D\uC2A4\uD2B8\uAC00 \uBE44\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.';\n    }\n    \n    try {\n      const requestOptions: LlmRequestOptions = {\n        model: model || this.getDefaultModelId(),\n        messages: [{\n          role: 'user',\n          content: text\n        }],\n        ...options\n      };\n      \n      const response = await this.sendRequest(requestOptions);\n      \n      return response.content;\n    } catch (error) {\n      return `\uCFFC\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`;\n    }\n  }\n  \n  private async simulateLocalModel(messages: ChatMessage[]): Promise<LlmResponse> {\n    const localModelConfig: ModelConfig = {\n      id: 'local-fallback',\n      name: '\uB85C\uCEEC \uC2DC\uBBAC\uB808\uC774\uC158 (\uC624\uD504\uB77C\uC778)',\n      provider: 'local',\n      temperature: 0.7\n    };\n    \n    const lastMessage = messages[messages.length - 1];\n    const mockResponse = '\uC774\uAC83\uC740 \uB85C\uCEEC \uC2DC\uBBAC\uB808\uC774\uC158 \uC751\uB2F5\uC785\uB2C8\uB2E4.';\n    \n    return {\n      content: mockResponse,\n      model: localModelConfig.id,\n      raw: {\n        content: mockResponse,\n        model: localModelConfig.id,\n        usage: {\n          prompt_tokens: 0,\n          completion_tokens: 0,\n          total_tokens: 0\n        }\n      }\n    };\n  }\n  \n  public getDefaultModelId(): string {\n    return environmentService.getDefaultModelId();\n  }\n  \n  public async setDefaultModel(modelId: string): Promise<boolean> {\n    try {\n      if (!modelId || typeof modelId !== 'string') {\n        return false;\n      }\n    \n      const modelConfig = this.getModelConfig(modelId);\n      if (!modelConfig) {\n        return false;\n      }\n      \n      try {\n        const config = vscode.workspace.getConfiguration('ape.llm');\n        await config.update('defaultModel', modelId, vscode.ConfigurationTarget.Global);\n        return true;\n      } catch (updateError) {\n        return false;\n      }\n    } catch (error) {\n      return false;\n    }\n  }\n  \n  public getAvailableModels(): ModelConfig[] {\n    return Array.from(this.modelCache.values());\n  }\n  \n  public getModelConfig(): ModelConfig[];\n  public getModelConfig(modelId: string): ModelConfig | undefined;\n  public getModelConfig(modelId?: string): ModelConfig[] | ModelConfig | undefined {\n    if (modelId === undefined) {\n      return this.getAvailableModels();\n    }\n    return this.modelCache.get(modelId);\n  }\n}", "import * as vscode from 'vscode';\r\nimport { LoggerService } from '../utils/LoggerService';\r\n\r\nexport class EnvironmentService {\r\n  private static instance: EnvironmentService;\r\n  private config: any;\r\n  private logger: LoggerService;\r\n  \r\n  private constructor() {\r\n    this.logger = new LoggerService('EnvironmentService');\r\n    this.loadConfig();\r\n  }\r\n  \r\n  public static getInstance(): EnvironmentService {\r\n    if (!EnvironmentService.instance) {\r\n      EnvironmentService.instance = new EnvironmentService();\r\n    }\r\n    return EnvironmentService.instance;\r\n  }\r\n  \r\n  private loadConfig(): void {\r\n    try {\r\n      try {\r\n        this.config = require('../../../extension.env.js');\r\n      } catch (e) {\r\n        this.config = {};\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('\uD658\uACBD \uC124\uC815 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD', error);\r\n      this.config = {};\r\n    }\r\n  }\r\n  \r\n  public getApiEndpoint(serviceName: string): string {\r\n    return this.config.API_ENDPOINTS?.[serviceName] || '';\r\n  }\r\n  \r\n  public getApiKey(keyName: string): string {\r\n    return this.config.API_KEYS?.[keyName] || '';\r\n  }\r\n  \r\n  public getDefaultModelId(): string {\r\n    return this.config.DEFAULT_MODEL || 'gemini-2.5-flash';\r\n  }\r\n  \r\n  public getAvailableModels(): any[] {\r\n    return this.config.AVAILABLE_MODELS || [];\r\n  }\r\n  \r\n  public useMockData(): boolean {\r\n    return this.config.USE_MOCK_DATA || false;\r\n  }\r\n  \r\n  public forceSslBypass(): boolean {\r\n    return this.config.FORCE_SSL_BYPASS || false;\r\n  }\r\n  \r\n  public reload(): void {\r\n    this.loadConfig();\r\n  }\r\n}\r\n\r\nexport const environmentService = EnvironmentService.getInstance();", "/**\n * SSL \uC6B0\uD68C \uC720\uD2F8\uB9AC\uD2F0 \uBAA8\uB4C8\n * \n * SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C \uAE30\uB2A5 \uC81C\uACF5\n * \uC628\uD504\uB808\uBBF8\uC2A4 \uD658\uACBD\uC5D0\uC11C \uC790\uCCB4 \uC11C\uBA85 \uC778\uC99D\uC11C \uBB34\uC2DC \uC9C0\uC6D0\n */\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as tls from 'tls';\nimport * as constants from 'constants';\n\n/**\n * SSL \uC6B0\uD68C \uC124\uC815 \uD074\uB798\uC2A4\n * SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C \uAE30\uB2A5 \uC81C\uACF5\n */\nexport class SSLBypassService {\n  /**\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4\n   */\n  private static instance: SSLBypassService;\n  \n  /**\n   * SSL \uC6B0\uD68C \uD65C\uC131\uD654 \uC0C1\uD0DC\n   */\n  private isBypassEnabled: boolean = false;\n  \n  /**\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 \uAC00\uC838\uC624\uAE30\n   * @returns SSLBypassService \uC778\uC2A4\uD134\uC2A4\n   */\n  public static getInstance(): SSLBypassService {\n    if (!SSLBypassService.instance) {\n      SSLBypassService.instance = new SSLBypassService();\n    }\n    return SSLBypassService.instance;\n  }\n  \n  /**\n   * \uC0DD\uC131\uC790\n   */\n  private constructor() {\n    \n    this.isBypassEnabled = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n  }\n  \n  /**\n   * \uC804\uC5ED SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C \uC124\uC815 \uC801\uC6A9\n   * @returns \uC801\uC6A9 \uC131\uACF5 \uC5EC\uBD80\n   */\n  public applyGlobalBypass(): boolean {\n    try {\n      \n      process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n      \n      \n      \n      \n      this.isBypassEnabled = true;\n      console.log('SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C\uAC00 \uD65C\uC131\uD654\uB418\uC5C8\uC2B5\uB2C8\uB2E4 (\uC628\uD504\uB808\uBBF8\uC2A4 \uBAA8\uB4DC)');\n      \n      return true;\n    } catch (error) {\n      console.error('SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C \uC124\uC815 \uC801\uC6A9 \uC624\uB958:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uC694\uCCAD\uBCC4 SSL \uC6B0\uD68C \uC635\uC158 \uAC00\uC838\uC624\uAE30\n   * @returns HTTPS \uC694\uCCAD \uC635\uC158\n   */\n  public getRequestOptions(): https.RequestOptions {\n    return {\n      rejectUnauthorized: false,\n      minVersion: 'TLSv1' as tls.SecureVersion,\n      checkServerIdentity: () => undefined,  \n      secureOptions: constants.SSL_OP_NO_TLSv1_2\n    };\n  }\n  \n  /**\n   * HTTPS \uC5D0\uC774\uC804\uD2B8 \uC0DD\uC131\n   * @returns SSL \uC6B0\uD68C \uC124\uC815\uC774 \uC801\uC6A9\uB41C HTTPS \uC5D0\uC774\uC804\uD2B8\n   */\n  public createHttpsAgent(): https.Agent {\n    return new https.Agent({\n      rejectUnauthorized: false,\n      \n      minVersion: 'TLSv1' as tls.SecureVersion,\n      checkServerIdentity: () => undefined,\n      secureOptions: constants.SSL_OP_NO_TLSv1_2,\n      ciphers: 'ALL'  \n    });\n  }\n  \n  /**\n   * SSL \uC6B0\uD68C \uC0C1\uD0DC \uD655\uC778\n   * @returns SSL \uC6B0\uD68C \uD65C\uC131\uD654 \uC5EC\uBD80\n   */\n  public isBypassActive(): boolean {\n    return this.isBypassEnabled;\n  }\n  \n  /**\n   * SSL \uC6B0\uD68C \uC124\uC815 \uBE44\uD65C\uC131\uD654\n   * @returns \uBE44\uD65C\uC131\uD654 \uC131\uACF5 \uC5EC\uBD80\n   */\n  public disableBypass(): boolean {\n    try {\n      \n      process.env.NODE_TLS_REJECT_UNAUTHORIZED = '1';\n      \n      this.isBypassEnabled = false;\n      console.log('SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C\uAC00 \uBE44\uD65C\uC131\uD654\uB418\uC5C8\uC2B5\uB2C8\uB2E4');\n      \n      return true;\n    } catch (error) {\n      console.error('SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C \uC124\uC815 \uBE44\uD65C\uC131\uD654 \uC624\uB958:', error);\n      return false;\n    }\n  }\n}\n\n/**\n * \uD3B8\uC758\uC131\uC744 \uC704\uD55C \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 \uC775\uC2A4\uD3EC\uD2B8\n */\nexport const sslBypass = SSLBypassService.getInstance();", "/**\n * HTTP \uD074\uB77C\uC774\uC5B8\uD2B8 \uC11C\uBE44\uC2A4\n * \n * HTTP \uC694\uCCAD\uC744 \uCC98\uB9AC\uD558\uB294 \uC11C\uBE44\uC2A4\n * SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C \uAE30\uB2A5 \uD3EC\uD568\n */\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as url from 'url';\nimport { \n  HttpMethod, \n  HttpHeaders, \n  HttpRequestOptions, \n  HttpResponse, \n  IHttpClient \n} from '../../types/HttpTypes';\nimport { SSLBypassService } from '../utils/SSLBypassService';\n\n/**\n * HTTP \uD074\uB77C\uC774\uC5B8\uD2B8 \uD074\uB798\uC2A4\n * HTTP \uC694\uCCAD \uCC98\uB9AC \uBC0F \uC751\uB2F5 \uD30C\uC2F1\n */\nexport class HttpClientService implements IHttpClient {\n  /**\n   * HTTP \uC694\uCCAD \uC2E4\uD589\n   * @param options \uC694\uCCAD \uC635\uC158\n   * @returns HTTP \uC751\uB2F5\n   */\n  async request<T = any>(options: HttpRequestOptions): Promise<HttpResponse<T>> {\n    try {\n      const parsedUrl = url.parse(options.url);\n      const isHttps = parsedUrl.protocol === 'https:';\n      \n      \n      const requestOptions: http.RequestOptions = {\n        protocol: parsedUrl.protocol,\n        hostname: parsedUrl.hostname,\n        port: parsedUrl.port,\n        path: parsedUrl.path,\n        method: options.method,\n        headers: options.headers || {},\n      };\n      \n      \n      if (isHttps && (options.bypassSsl || SSLBypassService.getInstance().isBypassActive())) {\n        Object.assign(requestOptions, SSLBypassService.getInstance().getRequestOptions());\n      }\n      \n      \n      if (options.body && !requestOptions.headers!['Content-Type']) {\n        requestOptions.headers!['Content-Type'] = 'application/json';\n      }\n      \n      \n      return new Promise<HttpResponse<T>>((resolve, reject) => {\n        \n        const timeout = options.timeout || 30000; \n        \n        \n        const requestFn = isHttps ? https.request : http.request;\n        const req = requestFn(requestOptions, (res) => {\n          let data = '';\n          \n          \n          res.on('data', (chunk) => {\n            data += chunk;\n            \n            \n            if (options.onProgress) {\n              \n            }\n          });\n          \n          \n          res.on('end', () => {\n            try {\n              \n              let parsedData: any = data;\n              \n              if (options.parseJson !== false) {\n                try {\n                  parsedData = JSON.parse(data);\n                } catch (e) {\n                  \n                  console.warn('JSON \uD30C\uC2F1 \uC2E4\uD328, \uC6D0\uC2DC \uB370\uC774\uD130 \uC0AC\uC6A9:', e);\n                }\n              }\n              \n              \n              const response: HttpResponse<T> = {\n                statusCode: res.statusCode || 0,\n                statusText: res.statusMessage || '',\n                headers: res.headers as HttpHeaders,\n                data: parsedData,\n                url: options.url,\n                ok: res.statusCode !== undefined && res.statusCode >= 200 && res.statusCode < 300\n              };\n              \n              resolve(response);\n            } catch (error) {\n              reject(error);\n            }\n          });\n        });\n        \n        \n        req.on('error', (error) => {\n          reject(error);\n        });\n        \n        \n        req.setTimeout(timeout, () => {\n          req.destroy();\n          reject(new Error(`\uC694\uCCAD \uC2DC\uAC04 \uCD08\uACFC (${timeout}ms): ${options.url}`));\n        });\n        \n        \n        if (options.body) {\n          const bodyData = typeof options.body === 'string' \n            ? options.body \n            : JSON.stringify(options.body);\n            \n          req.write(bodyData);\n        }\n        \n        \n        req.end();\n      });\n    } catch (error) {\n      console.error('HTTP \uC694\uCCAD \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * GET \uC694\uCCAD\n   * @param url \uC694\uCCAD URL\n   * @param headers \uC694\uCCAD \uD5E4\uB354\n   * @returns HTTP \uC751\uB2F5\n   */\n  async get<T = any>(url: string, headers?: HttpHeaders): Promise<HttpResponse<T>> {\n    return this.request<T>({\n      url,\n      method: HttpMethod.GET,\n      headers\n    });\n  }\n  \n  /**\n   * POST \uC694\uCCAD\n   * @param url \uC694\uCCAD URL\n   * @param body \uC694\uCCAD \uBCF8\uBB38\n   * @param headers \uC694\uCCAD \uD5E4\uB354\n   * @returns HTTP \uC751\uB2F5\n   */\n  async post<T = any>(url: string, body?: any, headers?: HttpHeaders): Promise<HttpResponse<T>> {\n    return this.request<T>({\n      url,\n      method: HttpMethod.POST,\n      body,\n      headers\n    });\n  }\n  \n  /**\n   * PUT \uC694\uCCAD\n   * @param url \uC694\uCCAD URL\n   * @param body \uC694\uCCAD \uBCF8\uBB38\n   * @param headers \uC694\uCCAD \uD5E4\uB354\n   * @returns HTTP \uC751\uB2F5\n   */\n  async put<T = any>(url: string, body?: any, headers?: HttpHeaders): Promise<HttpResponse<T>> {\n    return this.request<T>({\n      url,\n      method: HttpMethod.PUT,\n      body,\n      headers\n    });\n  }\n  \n  /**\n   * DELETE \uC694\uCCAD\n   * @param url \uC694\uCCAD URL\n   * @param headers \uC694\uCCAD \uD5E4\uB354\n   * @returns HTTP \uC751\uB2F5\n   */\n  async delete<T = any>(url: string, headers?: HttpHeaders): Promise<HttpResponse<T>> {\n    return this.request<T>({\n      url,\n      method: HttpMethod.DELETE,\n      headers\n    });\n  }\n  \n  /**\n   * SSL \uC6B0\uD68C \uC124\uC815\n   * @param bypass SSL \uC6B0\uD68C \uC5EC\uBD80\n   */\n  setSSLBypass(bypass: boolean): void {\n    if (bypass) {\n      SSLBypassService.getInstance().applyGlobalBypass();\n    } else {\n      SSLBypassService.getInstance().disableBypass();\n    }\n  }\n}", "import { environmentService } from '../env/EnvironmentService';\r\nimport { IApiClient } from './IApiClient';\r\nimport { LoggerService } from '../utils/LoggerService';\r\nimport { SSLBypassService } from '../utils/SSLBypassService';\r\nimport { HttpClientService } from '../http/HttpClientService';\r\nimport { \r\n  ChatCompletionRequest, \r\n  ChatCompletionResponse,\r\n  ModelInfo, \r\n  ChatMessage,\r\n  LLMErrorResponse\r\n} from '../../types/LlmTypes';\r\n\r\nexport class ApiClient implements IApiClient {\r\n  private logger: LoggerService;\r\n  private httpClient: HttpClientService;\r\n  private sslBypassService: SSLBypassService;\r\n  \r\n  constructor(private modelInfo: ModelInfo) {\r\n    this.logger = new LoggerService('ApiClient');\r\n    this.httpClient = new HttpClientService();\r\n    this.sslBypassService = new SSLBypassService();\r\n    \r\n    if (environmentService.forceSslBypass()) {\r\n      this.sslBypassService.bypassSSLVerification();\r\n    }\r\n  }\r\n  \r\n  private getApiEndpoint(): string {\r\n    if (this.modelInfo.apiUrl) {\r\n      return this.modelInfo.apiUrl;\r\n    }\r\n    \r\n    switch (this.modelInfo.provider) {\r\n      case 'openrouter':\r\n        return environmentService.getApiEndpoint('OPENROUTER_API');\r\n      case 'custom':\r\n        return this.modelInfo.apiUrl || '';\r\n      default:\r\n        return environmentService.getApiEndpoint('NARRANS_API');\r\n    }\r\n  }\r\n  \r\n  private getApiKey(): string {\r\n    if (this.modelInfo.apiKey) {\r\n      return this.modelInfo.apiKey;\r\n    }\r\n    \r\n    switch (this.modelInfo.provider) {\r\n      case 'openrouter':\r\n        return environmentService.getApiKey('OPENROUTER_API_KEY');\r\n      case 'custom':\r\n        if (this.modelInfo.name?.toLowerCase().includes('narrans')) {\r\n          return environmentService.getApiKey('NARRANS_API_KEY');\r\n        } else if (this.modelInfo.name?.toLowerCase().includes('llama')) {\r\n          return environmentService.getApiKey('LLAMA4_API_KEY');\r\n        }\r\n        return '';\r\n      default:\r\n        return environmentService.getApiKey('NARRANS_API_KEY');\r\n    }\r\n  }\r\n  \r\n  private createHeaders(): Record<string, string> {\r\n    const apiKey = this.getApiKey();\r\n    const headers: Record<string, string> = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    \r\n    if (apiKey) {\r\n      if (this.modelInfo.provider === 'openrouter') {\r\n        headers['Authorization'] = `Bearer ${apiKey}`;\r\n        headers['HTTP-Referer'] = 'https://ape.samsungds.net';\r\n        headers['X-Title'] = 'APE - Agentic Pipeline Engine';\r\n      } else {\r\n        headers['Authorization'] = `Bearer ${apiKey}`;\r\n      }\r\n    }\r\n    \r\n    return headers;\r\n  }\r\n  \r\n  private createRequestBody(messages: ChatMessage[], systemPrompt?: string): any {\r\n    const requestMessages = [...messages];\r\n    \r\n    if (systemPrompt && (messages.length === 0 || messages[0].role !== 'system')) {\r\n      requestMessages.unshift({\r\n        role: 'system',\r\n        content: systemPrompt\r\n      });\r\n    }\r\n    \r\n    const requestBody: any = {\r\n      messages: requestMessages,\r\n      temperature: this.modelInfo.temperature || 0.7,\r\n      max_tokens: this.modelInfo.maxTokens || 2048,\r\n      stream: true\r\n    };\r\n    \r\n    if (this.modelInfo.provider === 'openrouter') {\r\n      requestBody.model = this.modelInfo.apiModel || 'google/gemini-2.5-flash-preview';\r\n      requestBody.transforms = ['middle-out'];\r\n    }\r\n    \r\n    if (this.modelInfo.topK) requestBody.top_k = this.modelInfo.topK;\r\n    if (this.modelInfo.topP) requestBody.top_p = this.modelInfo.topP;\r\n    if (this.modelInfo.presencePenalty) requestBody.presence_penalty = this.modelInfo.presencePenalty;\r\n    if (this.modelInfo.frequencyPenalty) requestBody.frequency_penalty = this.modelInfo.frequencyPenalty;\r\n    \r\n    return requestBody;\r\n  }\r\n  \r\n  public async chatCompletion(request: ChatCompletionRequest): Promise<ChatCompletionResponse> {\r\n    try {\r\n      if (environmentService.useMockData() || this.modelInfo.provider === 'local') {\r\n        return this.getMockResponse(request);\r\n      }\r\n      \r\n      const apiUrl = this.getApiEndpoint();\r\n      if (!apiUrl) {\r\n        throw new Error('API \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.');\r\n      }\r\n      \r\n      const headers = this.createHeaders();\r\n      const requestBody = this.createRequestBody(\r\n        request.messages, \r\n        request.systemPrompt || this.modelInfo.systemPrompt\r\n      );\r\n      \r\n      const isStreaming = request.stream !== undefined ? request.stream : true;\r\n      \r\n      if (isStreaming && request.onUpdate) {\r\n        return this.handleStreamingRequest(apiUrl, headers, requestBody, request.onUpdate);\r\n      } else {\r\n        return this.handleNonStreamingRequest(apiUrl, headers, requestBody);\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('\uCC44\uD305 \uC644\uC131 \uC694\uCCAD \uC911 \uC624\uB958 \uBC1C\uC0DD', error);\r\n      \r\n      const errorResponse: LLMErrorResponse = {\r\n        error: true,\r\n        message: error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.',\r\n        code: error instanceof Error && 'code' in error ? (error as any).code : 'UNKNOWN_ERROR'\r\n      };\r\n      \r\n      return {\r\n        error: errorResponse,\r\n        content: '',\r\n        model: this.modelInfo.id || 'unknown',\r\n        usage: {\r\n          prompt_tokens: 0,\r\n          completion_tokens: 0,\r\n          total_tokens: 0\r\n        }\r\n      };\r\n    }\r\n  }\r\n  \r\n  private async handleStreamingRequest(\r\n    apiUrl: string, \r\n    headers: Record<string, string>, \r\n    requestBody: any,\r\n    onUpdate: (content: string) => void\r\n  ): Promise<ChatCompletionResponse> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        let fullContent = '';\r\n        \r\n        const response = await this.httpClient.post(\r\n          apiUrl,\r\n          requestBody,\r\n          {\r\n            headers,\r\n            responseType: 'stream'\r\n          }\r\n        );\r\n        \r\n        for await (const chunk of response.data) {\r\n          try {\r\n            const chunkStr = chunk.toString();\r\n            const lines = chunkStr.split('\\n').filter(Boolean);\r\n            \r\n            for (const line of lines) {\r\n              if (line.startsWith('data: ')) {\r\n                const jsonStr = line.slice(6);\r\n                \r\n                if (jsonStr === '[DONE]') {\r\n                  break;\r\n                }\r\n                \r\n                try {\r\n                  const json = JSON.parse(jsonStr);\r\n                  \r\n                  const content = json.choices?.[0]?.delta?.content || '';\r\n                  if (content) {\r\n                    fullContent += content;\r\n                    onUpdate(fullContent);\r\n                  }\r\n                } catch (e) {}\r\n              }\r\n            }\r\n          } catch (e) {}\r\n        }\r\n        \r\n        resolve({\r\n          content: fullContent,\r\n          model: this.modelInfo.id || 'unknown',\r\n          usage: {\r\n            prompt_tokens: 0,\r\n            completion_tokens: 0,\r\n            total_tokens: 0\r\n          }\r\n        });\r\n        \r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  private async handleNonStreamingRequest(\r\n    apiUrl: string, \r\n    headers: Record<string, string>, \r\n    requestBody: any\r\n  ): Promise<ChatCompletionResponse> {\r\n    requestBody.stream = false;\r\n    \r\n    const response = await this.httpClient.post(apiUrl, requestBody, { headers });\r\n    const responseData = response.data;\r\n    \r\n    return {\r\n      content: responseData.choices?.[0]?.message?.content || '',\r\n      model: responseData.model || this.modelInfo.id || 'unknown',\r\n      usage: responseData.usage || {\r\n        prompt_tokens: 0,\r\n        completion_tokens: 0,\r\n        total_tokens: 0\r\n      }\r\n    };\r\n  }\r\n  \r\n  private getMockResponse(request: ChatCompletionRequest): Promise<ChatCompletionResponse> {\r\n    return new Promise(resolve => {\r\n      const lastMessage = request.messages[request.messages.length - 1];\r\n      const query = lastMessage.content;\r\n      \r\n      let mockResponse = '\uC774\uAC83\uC740 Mock \uC751\uB2F5\uC785\uB2C8\uB2E4.';\r\n      \r\n      if (request.onUpdate) {\r\n        request.onUpdate(mockResponse);\r\n      }\r\n      \r\n      resolve({\r\n        content: mockResponse,\r\n        model: `mock-${this.modelInfo.id || 'model'}`,\r\n        usage: {\r\n          prompt_tokens: query.length / 4,\r\n          completion_tokens: mockResponse.length / 4,\r\n          total_tokens: (query.length + mockResponse.length) / 4\r\n        }\r\n      });\r\n    });\r\n  }\r\n}", "import * as vscode from 'vscode';\n\n/**\n * VS Code API\uC640 \uD1B5\uD569\uD558\uB294 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\uC785\uB2C8\uB2E4.\n * VS Code \uAE30\uB2A5\uC5D0 \uB300\uD55C \uB798\uD37C\uB97C \uC81C\uACF5\uD558\uC5EC \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uCF54\uB4DC\uC640 VS Code API \uAC04\uC758 \uACB0\uD569\uB3C4\uB97C \uB0AE\uCF85\uB2C8\uB2E4.\n */\nexport class VSCodeService {\n  private _extensionContext: vscode.ExtensionContext;\n\n  constructor(context: vscode.ExtensionContext) {\n    this._extensionContext = context;\n  }\n\n  /**\n   * \uC804\uC5ED \uC0C1\uD0DC\uC5D0\uC11C \uAC12\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param key \uC0C1\uD0DC \uD0A4\n   * @param defaultValue \uAE30\uBCF8\uAC12\n   * @returns \uC0C1\uD0DC \uAC12\n   */\n  public getGlobalState<T>(key: string, defaultValue: T): T {\n    return this._extensionContext.globalState.get<T>(key, defaultValue);\n  }\n\n  /**\n   * \uC804\uC5ED \uC0C1\uD0DC\uC5D0 \uAC12\uC744 \uC800\uC7A5\uD569\uB2C8\uB2E4.\n   * @param key \uC0C1\uD0DC \uD0A4\n   * @param value \uC800\uC7A5\uD560 \uAC12\n   * @returns Promise\n   */\n  public async setGlobalState<T>(key: string, value: T): Promise<void> {\n    await this._extensionContext.globalState.update(key, value);\n  }\n\n  /**\n   * \uC791\uC5C5 \uC601\uC5ED \uC0C1\uD0DC\uC5D0\uC11C \uAC12\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param key \uC0C1\uD0DC \uD0A4\n   * @param defaultValue \uAE30\uBCF8\uAC12\n   * @returns \uC0C1\uD0DC \uAC12\n   */\n  public getWorkspaceState<T>(key: string, value: T): T {\n    return this._extensionContext.workspaceState.get<T>(key, value);\n  }\n\n  /**\n   * \uC791\uC5C5 \uC601\uC5ED \uC0C1\uD0DC\uC5D0 \uAC12\uC744 \uC800\uC7A5\uD569\uB2C8\uB2E4.\n   * @param key \uC0C1\uD0DC \uD0A4\n   * @param value \uC800\uC7A5\uD560 \uAC12\n   * @returns Promise\n   */\n  public async setWorkspaceState<T>(key: string, value: T): Promise<void> {\n    await this._extensionContext.workspaceState.update(key, value);\n  }\n\n  /**\n   * \uD604\uC7AC \uC5F4\uB9B0 \uD14D\uC2A4\uD2B8 \uD3B8\uC9D1\uAE30\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @returns \uD65C\uC131 \uD14D\uC2A4\uD2B8 \uD3B8\uC9D1\uAE30 \uB610\uB294 undefined\n   */\n  public getActiveTextEditor(): vscode.TextEditor | undefined {\n    return vscode.window.activeTextEditor;\n  }\n\n  /**\n   * \uD604\uC7AC \uC120\uD0DD\uB41C \uD14D\uC2A4\uD2B8\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @returns \uC120\uD0DD\uB41C \uD14D\uC2A4\uD2B8 \uB610\uB294 \uBE48 \uBB38\uC790\uC5F4\n   */\n  public getSelectedText(): string {\n    const editor = this.getActiveTextEditor();\n    if (!editor) return '';\n    \n    return editor.document.getText(editor.selection);\n  }\n\n  /**\n   * \uD14D\uC2A4\uD2B8 \uD3B8\uC9D1\uAE30\uC5D0 \uD14D\uC2A4\uD2B8\uB97C \uC0BD\uC785\uD569\uB2C8\uB2E4.\n   * @param text \uC0BD\uC785\uD560 \uD14D\uC2A4\uD2B8\n   * @param position \uC0BD\uC785 \uC704\uCE58 (\uC120\uD0DD \uC0AC\uD56D)\n   * @returns \uC131\uACF5 \uC5EC\uBD80\n   */\n  public async insertText(text: string, position?: vscode.Position): Promise<boolean> {\n    const editor = this.getActiveTextEditor();\n    if (!editor) return false;\n    \n    try {\n      await editor.edit(editBuilder => {\n        if (position) {\n          editBuilder.insert(position, text);\n        } else {\n          \n          const selections = editor.selections;\n          selections.forEach(selection => {\n            editBuilder.replace(selection, text);\n          });\n        }\n      });\n      return true;\n    } catch (error) {\n      console.error('\uD14D\uC2A4\uD2B8 \uC0BD\uC785 \uC624\uB958:', error);\n      return false;\n    }\n  }\n\n  /**\n   * \uBA85\uB839\uC5B4\uB97C \uB4F1\uB85D\uD569\uB2C8\uB2E4.\n   * @param command \uBA85\uB839\uC5B4 ID\n   * @param callback \uCF5C\uBC31 \uD568\uC218\n   * @returns Disposable\n   */\n  public registerCommand(command: string, callback: (...args: any[]) => any): vscode.Disposable {\n    return vscode.commands.registerCommand(command, callback);\n  }\n\n  /**\n   * \uD14D\uC2A4\uD2B8 \uBB38\uC11C \uB0B4\uC6A9 \uBCC0\uACBD \uC774\uBCA4\uD2B8\uB97C \uB4F1\uB85D\uD569\uB2C8\uB2E4.\n   * @param callback \uCF5C\uBC31 \uD568\uC218\n   * @returns Disposable\n   */\n  public onDidChangeTextDocument(callback: (e: vscode.TextDocumentChangeEvent) => any): vscode.Disposable {\n    return vscode.workspace.onDidChangeTextDocument(callback);\n  }\n\n  /**\n   * \uD65C\uC131 \uD3B8\uC9D1\uAE30 \uBCC0\uACBD \uC774\uBCA4\uD2B8\uB97C \uB4F1\uB85D\uD569\uB2C8\uB2E4.\n   * @param callback \uCF5C\uBC31 \uD568\uC218\n   * @returns Disposable\n   */\n  public onDidChangeActiveTextEditor(callback: (e: vscode.TextEditor | undefined) => any): vscode.Disposable {\n    return vscode.window.onDidChangeActiveTextEditor(callback);\n  }\n\n  /**\n   * \uC815\uBCF4 \uBA54\uC2DC\uC9C0\uB97C \uD45C\uC2DC\uD569\uB2C8\uB2E4.\n   * @param message \uBA54\uC2DC\uC9C0 \uB0B4\uC6A9\n   * @returns void\n   */\n  public showInformationMessage(message: string): Thenable<string | undefined> {\n    return vscode.window.showInformationMessage(message);\n  }\n\n  /**\n   * \uACBD\uACE0 \uBA54\uC2DC\uC9C0\uB97C \uD45C\uC2DC\uD569\uB2C8\uB2E4.\n   * @param message \uBA54\uC2DC\uC9C0 \uB0B4\uC6A9\n   * @returns void\n   */\n  public showWarningMessage(message: string): Thenable<string | undefined> {\n    return vscode.window.showWarningMessage(message);\n  }\n\n  /**\n   * \uC624\uB958 \uBA54\uC2DC\uC9C0\uB97C \uD45C\uC2DC\uD569\uB2C8\uB2E4.\n   * @param message \uBA54\uC2DC\uC9C0 \uB0B4\uC6A9\n   * @returns void\n   */\n  public showErrorMessage(message: string): Thenable<string | undefined> {\n    return vscode.window.showErrorMessage(message);\n  }\n\n  /**\n   * \uC9C4\uD589 \uC0C1\uD0DC\uB97C \uBCF4\uC5EC\uC8FC\uB294 \uD568\uC218\uC785\uB2C8\uB2E4.\n   * @param title \uC9C4\uD589 \uC0C1\uD0DC \uC81C\uBAA9\n   * @param task \uC9C4\uD589\uD560 \uC791\uC5C5 \uD568\uC218\n   * @returns Task \uACB0\uACFC\n   */\n  public async withProgress<T>(\n    title: string, \n    task: (progress: vscode.Progress<{ message?: string; increment?: number }>) => Thenable<T>\n  ): Promise<T> {\n    return vscode.window.withProgress(\n      {\n        location: vscode.ProgressLocation.Notification,\n        title,\n        cancellable: false\n      },\n      task\n    );\n  }\n\n  /**\n   * \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uCEE8\uD14D\uC2A4\uD2B8\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.\n   * @returns \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uCEE8\uD14D\uC2A4\uD2B8\n   */\n  public getExtensionContext(): vscode.ExtensionContext {\n    return this._extensionContext;\n  }\n\n  /**\n   * VS Code \uD655\uC7A5 URI\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.\n   * @returns \uD655\uC7A5 URI\n   */\n  public getExtensionUri(): vscode.Uri {\n    return this._extensionContext.extensionUri;\n  }\n  \n  /**\n   * \uD604\uC7AC \uD3B8\uC9D1\uAE30 \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\uB97C \uC218\uC9D1\uD569\uB2C8\uB2E4.\n   * \uD65C\uC131 \uD30C\uC77C, \uC120\uD0DD\uB41C \uD14D\uC2A4\uD2B8, \uD504\uB85C\uC81D\uD2B8 \uC815\uBCF4 \uB4F1\uC744 \uD3EC\uD568\uD569\uB2C8\uB2E4.\n   * @returns \uD3B8\uC9D1\uAE30 \uCEE8\uD14D\uC2A4\uD2B8 \uC815\uBCF4\n   */\n  public async getEditorContext(): Promise<any> {\n    try {\n      const editor = this.getActiveTextEditor();\n      const activeFilePath = editor?.document.uri.fsPath;\n      const selectedText = this.getSelectedText();\n      const activeFileContent = editor ? editor.document.getText() : '';\n      \n      \n      const workspaceFolders = vscode.workspace.workspaceFolders || [];\n      const workspaceInfo = workspaceFolders.map(folder => ({\n        name: folder.name,\n        path: folder.uri.fsPath\n      }));\n      \n      \n      const config = vscode.workspace.getConfiguration('ape');\n      \n      \n      const languageId = editor?.document.languageId;\n      \n      \n      const cursorPosition = editor?.selection.active;\n      const line = cursorPosition ? editor.document.lineAt(cursorPosition.line).text : '';\n      \n      \n      const editorContext = {\n        activeFile: {\n          path: activeFilePath,\n          language: languageId,\n          selection: selectedText,\n          cursorPosition: cursorPosition ? {\n            line: cursorPosition.line,\n            character: cursorPosition.character\n          } : null,\n          currentLine: line\n        },\n        workspace: {\n          folders: workspaceInfo,\n          name: workspaceFolders.length > 0 ? workspaceFolders[0].name : 'No Workspace'\n        },\n        config: {\n          settings: {\n            llm: config.get('llm'),\n            plugins: config.get('plugins')\n          }\n        }\n      };\n      \n      return editorContext;\n    } catch (error) {\n      console.error('\uD3B8\uC9D1\uAE30 \uCEE8\uD14D\uC2A4\uD2B8 \uC218\uC9D1 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return {\n        error: 'Failed to collect editor context',\n        activeFile: null,\n        workspace: null\n      };\n    }\n  }\n}", "/**\n * \uD504\uB86C\uD504\uD2B8 \uC5B4\uC148\uBE14\uB7EC \uC11C\uBE44\uC2A4\n * \n * \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uBC0F \uBCC0\uC218 \uCE58\uD658 \uAE30\uB2A5 \uC81C\uACF5\n * \uD15C\uD50C\uB9BF \uBC0F \uADDC\uCE59 \uAE30\uBC18 \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uC9C0\uC6D0\n */\n\nimport { \n  IPromptAssembler, \n  PromptTemplate, \n  PromptContext, \n  PromptTemplateType\n} from './PromptTypes';\nimport { IConfigLoader } from '../../types/ConfigTypes';\nimport { ChatMessage, MessageRole } from '../../types/LlmTypes';\nimport { RulesEngineService } from './RulesEngineService';\n\n/**\n * \uD504\uB86C\uD504\uD2B8 \uC5B4\uC148\uBE14\uB7EC \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n */\nexport class PromptAssemblerService implements IPromptAssembler {\n  /**\n   * \uD15C\uD50C\uB9BF \uB9F5\n   */\n  private templates: Map<string, PromptTemplate> = new Map();\n  \n  /**\n   * \uAE30\uBCF8 \uC2DC\uC2A4\uD15C \uD504\uB86C\uD504\uD2B8\n   */\n  private defaultSystemPrompt: string = `\n    \uB2F9\uC2E0\uC740 Ape\uC774\uB77C\uB294 \uAC1C\uBC1C \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uD5C8\uBE0C\uC5D0 \uD1B5\uD569\uB41C AI \uC5B4\uC2DC\uC2A4\uD134\uD2B8\uC785\uB2C8\uB2E4.\n    \uAC1C\uBC1C\uC790\uB4E4\uC5D0\uAC8C \uCF54\uB4DC \uC791\uC131, \uBC84\uADF8 \uD574\uACB0, \uBB38\uC11C\uD654 \uB4F1 \uB2E4\uC591\uD55C \uAC1C\uBC1C \uC791\uC5C5\uC744 \uC9C0\uC6D0\uD569\uB2C8\uB2E4.\n    \uC628\uD504\uB808\uBBF8\uC2A4 \uD658\uACBD\uC5D0\uC11C \uC2E4\uD589\uB418\uBA70, \uBCF4\uC548\uACFC \uC131\uB2A5\uC774 \uC911\uC694\uD569\uB2C8\uB2E4.\n    \uBA85\uD655\uD558\uACE0 \uC815\uD655\uD55C \uB2F5\uBCC0\uC744 \uC81C\uACF5\uD558\uB418, \uD544\uC694 \uC2DC \uCD94\uAC00 \uC815\uBCF4\uB97C \uC694\uCCAD\uD558\uC138\uC694.\n  `.trim();\n  \n  /**\n   * PromptAssemblerService \uC0DD\uC131\uC790\n   * @param configLoader \uC124\uC815 \uB85C\uB354\n   * @param rulesEngine \uADDC\uCE59 \uC5D4\uC9C4\n   */\n  constructor(\n    private configLoader: IConfigLoader,\n    private rulesEngine: RulesEngineService\n  ) {\n    \n    this.registerDefaultTemplates();\n  }\n  \n  /**\n   * \uAE30\uBCF8 \uD15C\uD50C\uB9BF \uB4F1\uB85D\n   */\n  private registerDefaultTemplates(): void {\n    \n    this.registerTemplate({\n      id: 'default_system',\n      type: PromptTemplateType.SYSTEM,\n      content: this.defaultSystemPrompt,\n      description: '\uAE30\uBCF8 \uC2DC\uC2A4\uD15C \uD504\uB86C\uD504\uD2B8'\n    });\n    \n    \n    this.registerTemplate({\n      id: 'code_generation',\n      type: PromptTemplateType.USER,\n      content: `\n        \uB2E4\uC74C \uC870\uAC74\uC73C\uB85C \uCF54\uB4DC\uB97C \uC0DD\uC131\uD574\uC8FC\uC138\uC694:\n        \n        \uC5B8\uC5B4: {{languageId}}\n        \uD30C\uC77C: {{filePath}}\n        \uC694\uCCAD: {{input}}\n        \n        \uCF54\uB4DC\uB9CC \uC0DD\uC131\uD558\uACE0 \uCD94\uAC00 \uC124\uBA85\uC740 \uC791\uC131\uD558\uC9C0 \uB9C8\uC138\uC694.\n      `.trim(),\n      description: '\uCF54\uB4DC \uC0DD\uC131 \uD504\uB86C\uD504\uD2B8',\n      tags: ['code', 'generation']\n    });\n    \n    \n    this.registerTemplate({\n      id: 'code_refactoring',\n      type: PromptTemplateType.USER,\n      content: `\n        \uB2E4\uC74C \uCF54\uB4DC\uB97C \uB9AC\uD329\uD1A0\uB9C1\uD574\uC8FC\uC138\uC694:\n        \n        \\`\\`\\`{{languageId}}\n        {{selectedCode}}\n        \\`\\`\\`\n        \n        \uC694\uCCAD: {{input}}\n        \n        \uB354 \uD6A8\uC728\uC801\uC774\uACE0 \uAC00\uB3C5\uC131 \uB192\uC740 \uCF54\uB4DC\uB85C \uBCC0\uACBD\uD574\uC8FC\uC138\uC694.\n        \uB9AC\uD329\uD1A0\uB9C1\uB41C \uCF54\uB4DC\uB9CC \uC81C\uACF5\uD558\uACE0 \uCD94\uAC00 \uC124\uBA85\uC740 \uC791\uC131\uD558\uC9C0 \uB9C8\uC138\uC694.\n      `.trim(),\n      description: '\uCF54\uB4DC \uB9AC\uD329\uD1A0\uB9C1 \uD504\uB86C\uD504\uD2B8',\n      tags: ['code', 'refactoring']\n    });\n    \n    \n    this.registerTemplate({\n      id: 'bug_fixing',\n      type: PromptTemplateType.USER,\n      content: `\n        \uB2E4\uC74C \uCF54\uB4DC\uC758 \uBC84\uADF8\uB97C \uD574\uACB0\uD574\uC8FC\uC138\uC694:\n        \n        \\`\\`\\`{{languageId}}\n        {{selectedCode}}\n        \\`\\`\\`\n        \n        \uC624\uB958 \uB0B4\uC6A9: {{input}}\n        \n        \uC218\uC815\uB41C \uCF54\uB4DC\uB97C \uC81C\uACF5\uD558\uACE0 \uBCC0\uACBD \uC0AC\uD56D\uC5D0 \uB300\uD574 \uAC04\uB7B5\uD788 \uC124\uBA85\uD574\uC8FC\uC138\uC694.\n      `.trim(),\n      description: '\uBC84\uADF8 \uD574\uACB0 \uD504\uB86C\uD504\uD2B8',\n      tags: ['code', 'bug', 'fixing']\n    });\n  }\n  \n  /**\n   * \uD15C\uD50C\uB9BF \uB4F1\uB85D\n   * @param template \uD504\uB86C\uD504\uD2B8 \uD15C\uD50C\uB9BF\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  registerTemplate(template: PromptTemplate): boolean {\n    try {\n      this.templates.set(template.id, template);\n      return true;\n    } catch (error) {\n      console.error(`\uD15C\uD50C\uB9BF \uB4F1\uB85D \uC2E4\uD328 (${template.id}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uD15C\uD50C\uB9BF \uAC00\uC838\uC624\uAE30\n   * @param templateId \uD15C\uD50C\uB9BF ID\n   * @returns \uD15C\uD50C\uB9BF \uB610\uB294 undefined\n   */\n  private getTemplate(templateId: string): PromptTemplate | undefined {\n    return this.templates.get(templateId);\n  }\n  \n  /**\n   * \uBCC0\uC218 \uCE58\uD658\n   * @param template \uD15C\uD50C\uB9BF \uBB38\uC790\uC5F4\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8\n   * @returns \uCE58\uD658\uB41C \uBB38\uC790\uC5F4\n   */\n  private replaceVariables(template: string, context: PromptContext): string {\n    if (!template) {\n      return '';\n    }\n    \n    \n    return template.replace(/\\{\\{([^}]+)\\}\\}/g, (match, varName) => {\n      \n      if (context[varName as keyof PromptContext] !== undefined) {\n        return String(context[varName as keyof PromptContext] || '');\n      }\n      \n      \n      if (context.variables && context.variables[varName] !== undefined) {\n        return String(context.variables[varName] || '');\n      }\n      \n      \n      return match;\n    });\n  }\n  \n  /**\n   * \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131\n   * @param basePrompt \uAE30\uBCF8 \uD504\uB86C\uD504\uD2B8\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8\n   * @returns \uC644\uC131\uB41C \uD504\uB86C\uD504\uD2B8\n   */\n  /**\n   * \uD14D\uC2A4\uD2B8\uB97C \uAE30\uBC18\uC73C\uB85C \uD504\uB86C\uD504\uD2B8 \uB370\uC774\uD130 \uC0DD\uC131\n   */\n  async assemblePrompt(text: string): Promise<{ messages: ChatMessage[], temperature: number }> {\n    try {\n      \n      const messages: ChatMessage[] = [\n        {\n          role: 'system' as MessageRole,\n          content: this.defaultSystemPrompt\n        },\n        {\n          role: 'user' as MessageRole,\n          content: text\n        }\n      ];\n      \n      \n      const temperature = 0.7;\n      \n      return {\n        messages,\n        temperature\n      };\n    } catch (error) {\n      console.error('\uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      \n      return {\n        messages: [\n          {\n            role: 'user' as MessageRole,\n            content: text || '\uC548\uB155\uD558\uC138\uC694'\n          }\n        ],\n        temperature: 0.7\n      };\n    }\n  }\n  \n  /**\n   * \uAE30\uC874 \uBA54\uC11C\uB4DC (\uC774\uC804 \uBC84\uC804\uACFC\uC758 \uD638\uD658\uC131\uC744 \uC704\uD574 \uC720\uC9C0)\n   */\n  assemblePromptLegacy(basePrompt: string, context: PromptContext): string {\n    try {\n      \n      const prompt = this.replaceVariables(basePrompt, context);\n      \n      \n      return this.enhancePrompt(prompt, context);\n    } catch (error) {\n      console.error('\uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return basePrompt;\n    }\n  }\n  \n  /**\n   * \uD15C\uD50C\uB9BF ID\uB85C \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131\n   * @param templateId \uD15C\uD50C\uB9BF ID\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8\n   * @returns \uC644\uC131\uB41C \uD504\uB86C\uD504\uD2B8\n   */\n  assembleFromTemplate(templateId: string, context: PromptContext): string {\n    try {\n      \n      const template = this.getTemplate(templateId);\n      \n      if (!template) {\n        console.warn(`\uD15C\uD50C\uB9BF\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${templateId}`);\n        return '';\n      }\n      \n      \n      return this.assemblePrompt(template.content, context);\n    } catch (error) {\n      console.error(`\uD15C\uD50C\uB9BF \uAE30\uBC18 \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD (${templateId}):`, error);\n      return '';\n    }\n  }\n  \n  /**\n   * \uADDC\uCE59 \uAE30\uBC18 \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8\n   * @returns \uADDC\uCE59 \uAE30\uBC18 \uD504\uB86C\uD504\uD2B8 \uBAA9\uB85D\n   */\n  assembleFromRules(context: PromptContext): string[] {\n    try {\n      \n      const rules = this.rulesEngine.getApplicableRules(context);\n      \n      \n      return rules.map(rule => {\n        const template = this.getTemplate(rule.templateId);\n        \n        if (!template) {\n          console.warn(`\uADDC\uCE59 ${rule.id}\uC5D0 \uB300\uD55C \uD15C\uD50C\uB9BF\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${rule.templateId}`);\n          return '';\n        }\n        \n        return this.assemblePrompt(template.content, context);\n      }).filter(prompt => prompt !== '');\n    } catch (error) {\n      console.error('\uADDC\uCE59 \uAE30\uBC18 \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return [];\n    }\n  }\n  \n  /**\n   * \uD504\uB86C\uD504\uD2B8 \uAC1C\uC120\n   * @param prompt \uAE30\uBCF8 \uD504\uB86C\uD504\uD2B8\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8\n   * @returns \uAC1C\uC120\uB41C \uD504\uB86C\uD504\uD2B8\n   */\n  private enhancePrompt(prompt: string, context: PromptContext): string {\n    \n    \n    \n    return prompt;\n  }\n}", "/**\n * \uADDC\uCE59 \uC5D4\uC9C4 \uC11C\uBE44\uC2A4\n * \n * \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uADDC\uCE59 \uD3C9\uAC00 \uBC0F \uC801\uC6A9 \uAE30\uB2A5 \uC81C\uACF5\n * \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131\uC744 \uC704\uD55C \uADDC\uCE59 \uAD00\uB9AC \uBC0F \uD3C9\uAC00\n */\n\nimport { \n  IRulesEngine, \n  Rule, \n  RuleCondition, \n  PromptContext \n} from './PromptTypes';\nimport { IConfigLoader } from '../../types/ConfigTypes';\n\n/**\n * \uADDC\uCE59 \uC5D4\uC9C4 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n */\nexport class RulesEngineService implements IRulesEngine {\n  /**\n   * \uADDC\uCE59 \uBAA9\uB85D\n   */\n  private rules: Rule[] = [];\n  \n  /**\n   * RulesEngineService \uC0DD\uC131\uC790\n   * @param configLoader \uC124\uC815 \uB85C\uB354\n   */\n  constructor(private configLoader: IConfigLoader) {\n    \n    this.registerDefaultRules();\n  }\n  \n  /**\n   * \uAE30\uBCF8 \uADDC\uCE59 \uB4F1\uB85D\n   */\n  private registerDefaultRules(): void {\n    \n    this.registerRule({\n      id: 'code_generation_rule',\n      name: '\uCF54\uB4DC \uC0DD\uC131 \uADDC\uCE59',\n      priority: 100,\n      conditions: [\n        {\n          field: 'input',\n          operator: 'contains',\n          value: '\uC0DD\uC131'\n        },\n        {\n          field: 'languageId',\n          operator: 'exists',\n          value: true\n        }\n      ],\n      templateId: 'code_generation',\n      tags: ['code', 'generation']\n    });\n    \n    \n    this.registerRule({\n      id: 'code_refactoring_rule',\n      name: '\uCF54\uB4DC \uB9AC\uD329\uD1A0\uB9C1 \uADDC\uCE59',\n      priority: 90,\n      conditions: [\n        {\n          field: 'input',\n          operator: 'contains',\n          value: '\uB9AC\uD329\uD1A0\uB9C1'\n        },\n        {\n          field: 'selectedCode',\n          operator: 'exists',\n          value: true\n        }\n      ],\n      templateId: 'code_refactoring',\n      tags: ['code', 'refactoring']\n    });\n    \n    \n    this.registerRule({\n      id: 'bug_fixing_rule',\n      name: '\uBC84\uADF8 \uD574\uACB0 \uADDC\uCE59',\n      priority: 80,\n      conditions: [\n        {\n          field: 'input',\n          operator: 'contains',\n          value: '\uBC84\uADF8'\n        },\n        {\n          field: 'selectedCode',\n          operator: 'exists',\n          value: true\n        }\n      ],\n      templateId: 'bug_fixing',\n      tags: ['code', 'bug', 'fixing']\n    });\n  }\n  \n  /**\n   * \uADDC\uCE59 \uB4F1\uB85D\n   * @param rule \uADDC\uCE59\n   * @returns \uB4F1\uB85D \uC131\uACF5 \uC5EC\uBD80\n   */\n  registerRule(rule: Rule): boolean {\n    try {\n      \n      const existingRuleIndex = this.rules.findIndex(r => r.id === rule.id);\n      \n      if (existingRuleIndex >= 0) {\n        \n        this.rules[existingRuleIndex] = rule;\n      } else {\n        \n        this.rules.push(rule);\n      }\n      \n      \n      this.rules.sort((a, b) => b.priority - a.priority);\n      \n      return true;\n    } catch (error) {\n      console.error(`\uADDC\uCE59 \uB4F1\uB85D \uC2E4\uD328 (${rule.id}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uCEE8\uD14D\uC2A4\uD2B8\uC5D0 \uC801\uC6A9 \uAC00\uB2A5\uD55C \uADDC\uCE59 \uC870\uD68C\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8\n   * @returns \uC801\uC6A9 \uAC00\uB2A5\uD55C \uADDC\uCE59 \uBAA9\uB85D\n   */\n  getApplicableRules(context: PromptContext): Rule[] {\n    try {\n      \n      return this.rules.filter(rule => {\n        return rule.conditions.every(condition => this.evaluateCondition(condition, context));\n      });\n    } catch (error) {\n      console.error('\uC801\uC6A9 \uAC00\uB2A5\uD55C \uADDC\uCE59 \uC870\uD68C \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return [];\n    }\n  }\n  \n  /**\n   * \uADDC\uCE59 \uC870\uAC74 \uD3C9\uAC00\n   * @param condition \uC870\uAC74\n   * @param context \uCEE8\uD14D\uC2A4\uD2B8\n   * @returns \uC870\uAC74 \uB9CC\uC871 \uC5EC\uBD80\n   */\n  evaluateCondition(condition: RuleCondition, context: PromptContext): boolean {\n    try {\n      \n      let fieldValue: any;\n      \n      if (condition.field.includes('.')) {\n        \n        const parts = condition.field.split('.');\n        let current: any = context;\n        \n        for (const part of parts) {\n          if (current === undefined || current === null) {\n            return false;\n          }\n          current = current[part as keyof typeof current];\n        }\n        \n        fieldValue = current;\n      } else {\n        \n        fieldValue = context[condition.field as keyof PromptContext];\n      }\n      \n      \n      switch (condition.operator) {\n        case 'equals':\n          return fieldValue === condition.value;\n          \n        case 'notEquals':\n          return fieldValue !== condition.value;\n          \n        case 'contains':\n          if (typeof fieldValue !== 'string') {\n            return false;\n          }\n          return fieldValue.toLowerCase().includes(\n            typeof condition.value === 'string' ? condition.value.toLowerCase() : String(condition.value)\n          );\n          \n        case 'startsWith':\n          if (typeof fieldValue !== 'string') {\n            return false;\n          }\n          return fieldValue.toLowerCase().startsWith(\n            typeof condition.value === 'string' ? condition.value.toLowerCase() : String(condition.value)\n          );\n          \n        case 'endsWith':\n          if (typeof fieldValue !== 'string') {\n            return false;\n          }\n          return fieldValue.toLowerCase().endsWith(\n            typeof condition.value === 'string' ? condition.value.toLowerCase() : String(condition.value)\n          );\n          \n        case 'regex':\n          if (typeof fieldValue !== 'string') {\n            return false;\n          }\n          return new RegExp(condition.value).test(fieldValue);\n          \n        case 'exists':\n          return condition.value ? (fieldValue !== undefined && fieldValue !== null) : \n                                  (fieldValue === undefined || fieldValue === null);\n                                  \n        default:\n          console.warn(`\uC9C0\uC6D0\uD558\uC9C0 \uC54A\uB294 \uC870\uAC74 \uC5F0\uC0B0\uC790: ${condition.operator}`);\n          return false;\n      }\n    } catch (error) {\n      console.error(`\uC870\uAC74 \uD3C9\uAC00 \uC911 \uC624\uB958 \uBC1C\uC0DD:`, error);\n      return false;\n    }\n  }\n}", "/**\n * SWDP \uB3C4\uBA54\uC778 \uC11C\uBE44\uC2A4\n * \n * SWDP \uB370\uC774\uD130 \uBAA8\uB378 \uC815\uC758 \uBC0F \uB3C4\uBA54\uC778 \uB85C\uC9C1 \uCC98\uB9AC\n * APE Core\uC640\uC758 \uD1B5\uC2E0 \uBC0F \uB370\uC774\uD130 \uCE90\uC2F1 \uCC98\uB9AC\n */\n\nimport { EventEmitter } from 'events';\nimport { SwdpClientService } from '../../plugins/internal/swdp/SwdpClientService';\nimport { UserAuthService } from '../auth/UserAuthService';\nimport { ConfigService } from '../config/ConfigService';\n\n/**\n * SWDP \uC774\uBCA4\uD2B8 \uC5F4\uAC70\uD615\n */\nexport enum SwdpEvent {\n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uB85C\uB4DC\uB428\n   */\n  PROJECTS_LOADED = 'projects_loaded',\n  \n  /**\n   * \uC791\uC5C5 \uB85C\uB4DC\uB428\n   */\n  TASKS_LOADED = 'tasks_loaded',\n  \n  /**\n   * \uBB38\uC11C \uB85C\uB4DC\uB428\n   */\n  DOCUMENTS_LOADED = 'documents_loaded',\n  \n  /**\n   * \uC791\uC5C5 \uBCC0\uACBD\uB428\n   */\n  TASK_CHANGED = 'task_changed',\n  \n  /**\n   * \uBE4C\uB4DC \uC0C1\uD0DC \uBCC0\uACBD\uB428\n   */\n  BUILD_STATUS_CHANGED = 'build_status_changed',\n  \n  /**\n   * \uC624\uB958 \uBC1C\uC0DD\n   */\n  ERROR_OCCURRED = 'error_occurred'\n}\n\n/**\n * SWDP \uD504\uB85C\uC81D\uD2B8 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface SwdpProject {\n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   */\n  code: string;\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uC774\uB984\n   */\n  name: string;\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uC0C1\uD0DC\n   */\n  status: string;\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uC124\uBA85\n   */\n  description?: string;\n  \n  /**\n   * \uC2DC\uC791\uC77C\n   */\n  startDate?: string;\n  \n  /**\n   * \uC885\uB8CC\uC77C\n   */\n  endDate?: string;\n  \n  /**\n   * \uB2F4\uB2F9\uC790\n   */\n  manager?: string;\n}\n\n/**\n * SWDP \uC791\uC5C5 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface SwdpTask {\n  /**\n   * \uC791\uC5C5 ID\n   */\n  id: string;\n  \n  /**\n   * \uC791\uC5C5 \uC81C\uBAA9\n   */\n  title: string;\n  \n  /**\n   * \uC791\uC5C5 \uC0C1\uD0DC\n   */\n  status: string;\n  \n  /**\n   * \uC791\uC5C5 \uC124\uBA85\n   */\n  description?: string;\n  \n  /**\n   * \uB2F4\uB2F9\uC790\n   */\n  assignee?: string;\n  \n  /**\n   * \uC0DD\uC131\uC77C\n   */\n  createdAt?: string;\n  \n  /**\n   * \uB9C8\uAC10\uC77C\n   */\n  dueDate?: string;\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   */\n  projectCode: string;\n}\n\n/**\n * SWDP \uBB38\uC11C \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface SwdpDocument {\n  /**\n   * \uBB38\uC11C ID\n   */\n  id: string;\n  \n  /**\n   * \uBB38\uC11C \uC81C\uBAA9\n   */\n  title: string;\n  \n  /**\n   * \uBB38\uC11C \uC720\uD615\n   */\n  type: string;\n  \n  /**\n   * \uC791\uC131\uC790\n   */\n  author?: string;\n  \n  /**\n   * \uC0DD\uC131\uC77C\n   */\n  createdAt?: string;\n  \n  /**\n   * \uB9C8\uC9C0\uB9C9 \uC218\uC815\uC77C\n   */\n  updatedAt?: string;\n  \n  /**\n   * \uBB38\uC11C \uB0B4\uC6A9\n   */\n  content?: string;\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   */\n  projectCode: string;\n}\n\n/**\n * SWDP \uBE4C\uB4DC \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface SwdpBuild {\n  /**\n   * \uBE4C\uB4DC ID\n   */\n  buildId: string;\n  \n  /**\n   * \uBE4C\uB4DC \uD0C0\uC785\n   */\n  type: string;\n  \n  /**\n   * \uBE4C\uB4DC \uC0C1\uD0DC\n   */\n  status: string;\n  \n  /**\n   * \uC6CC\uCE58 \uBAA8\uB4DC \uC5EC\uBD80\n   */\n  watchMode: boolean;\n  \n  /**\n   * PR \uC0DD\uC131 \uC5EC\uBD80\n   */\n  createPr: boolean;\n  \n  /**\n   * \uBE4C\uB4DC \uC0DD\uC131 \uC2DC\uAC04\n   */\n  timestamp: string;\n  \n  /**\n   * \uBE4C\uB4DC \uB85C\uADF8\n   */\n  logs?: string[];\n}\n\n/**\n * SWDP \uB3C4\uBA54\uC778 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n */\nexport class SwdpDomainService {\n  /**\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4\n   */\n  private static instance: SwdpDomainService;\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uC774\uBBF8\uD130\n   */\n  private eventEmitter = new EventEmitter();\n  \n  /**\n   * SWDP \uD074\uB77C\uC774\uC5B8\uD2B8 \uC11C\uBE44\uC2A4\n   */\n  private swdpClient: SwdpClientService;\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC778\uC99D \uC11C\uBE44\uC2A4\n   */\n  private userAuthService: UserAuthService;\n  \n  /**\n   * \uC124\uC815 \uC11C\uBE44\uC2A4\n   */\n  private configService: ConfigService;\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uCE90\uC2DC\n   */\n  private projectsCache: Map<string, SwdpProject> = new Map();\n  \n  /**\n   * \uC791\uC5C5 \uCE90\uC2DC (\uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\uBCC4)\n   */\n  private tasksCache: Map<string, SwdpTask[]> = new Map();\n  \n  /**\n   * \uBB38\uC11C \uCE90\uC2DC (\uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\uBCC4)\n   */\n  private documentsCache: Map<string, SwdpDocument[]> = new Map();\n  \n  /**\n   * \uBE4C\uB4DC \uCE90\uC2DC\n   */\n  private buildsCache: Map<string, SwdpBuild> = new Map();\n  \n  /**\n   * \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   */\n  private currentProject?: string;\n  \n  /**\n   * \uCD08\uAE30\uD654 \uC644\uB8CC \uC5EC\uBD80\n   */\n  private initialized: boolean = false;\n  \n  /**\n   * \uCE90\uC2DC \uC720\uD6A8 \uC2DC\uAC04 (\uBC00\uB9AC\uCD08)\n   */\n  private cacheTTL: number = 5 * 60 * 1000; \n  \n  /**\n   * \uC0DD\uC131\uC790\n   */\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userAuthService: UserAuthService,\n    private readonly swdpClient: SwdpClientService\n  ) {\n    // \uC774\uBCA4\uD2B8 \uC5D0\uBBF8\uD130 \uCD08\uAE30\uD654\uB294 \uC720\uC9C0\n  }\n\n  /**\n   * \uD329\uD1A0\uB9AC \uBA54\uC11C\uB4DC: \uC758\uC874\uC131 \uC8FC\uC785\uC744 \uD1B5\uD55C \uC778\uC2A4\uD134\uC2A4 \uC0DD\uC131\n   */\n  public static createInstance(\n    configService: ConfigService,\n    userAuthService: UserAuthService\n  ): SwdpDomainService {\n    // \uC124\uC815\uC5D0\uC11C SWDP \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131\uC5D0 \uD544\uC694\uD55C \uC815\uBCF4 \uC5BB\uAE30\n    const config = configService.getPluginConfig();\n    const swdpConfig = config && typeof config === 'object' && 'swdp' in config \n      ? (config as Record<string, any>).swdp \n      : null;\n    \n    const apeCoreUrl = swdpConfig?.apeCoreUrl || 'http://localhost:8080';\n    const bypassSsl = swdpConfig?.bypassSsl !== false;\n    \n    // \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131\n    const swdpClient = new SwdpClientService(apeCoreUrl, bypassSsl);\n    \n    // \uC778\uC2A4\uD134\uC2A4 \uC0DD\uC131 \uBC0F \uBC18\uD658\n    return new SwdpDomainService(configService, userAuthService, swdpClient);\n  }\n  \n  /**\n   * \uB808\uAC70\uC2DC \uC2F1\uAE00\uD1A4 \uC811\uADFC \uBC29\uC2DD - \uC810\uC9C4\uC801 \uB9C8\uC774\uADF8\uB808\uC774\uC158\uC744 \uC704\uD574 \uC720\uC9C0\n   * @deprecated \uC2F1\uAE00\uD1A4 \uD328\uD134 \uB300\uC2E0 \uC758\uC874\uC131 \uC8FC\uC785 \uC0AC\uC6A9 \uAD8C\uC7A5\n   * @returns SwdpDomainService \uC778\uC2A4\uD134\uC2A4\n   */\n  public static getInstance(): SwdpDomainService {\n    if (!SwdpDomainService.instance) {\n      // \uD544\uC694\uD55C \uC11C\uBE44\uC2A4 \uAC00\uC838\uC624\uAE30\n      const configService = ConfigService.getInstance();\n      const userAuthService = UserAuthService.getInstance();\n      \n      // \uD329\uD1A0\uB9AC \uBA54\uC11C\uB4DC \uC0AC\uC6A9\n      SwdpDomainService.instance = SwdpDomainService.createInstance(\n        configService,\n        userAuthService\n      );\n    }\n    return SwdpDomainService.instance;\n  }\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uB4F1\uB85D\n   * @param event \uC774\uBCA4\uD2B8 \uC774\uB984\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   */\n  public on(event: SwdpEvent, listener: (...args: any[]) => void): void {\n    this.eventEmitter.on(event, listener);\n  }\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uC81C\uAC70\n   * @param event \uC774\uBCA4\uD2B8 \uC774\uB984\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   */\n  public off(event: SwdpEvent, listener: (...args: any[]) => void): void {\n    this.eventEmitter.off(event, listener);\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654\n   */\n  public async initialize(): Promise<void> {\n    try {\n      \n      if (!this.userAuthService.isInitialized()) {\n        await this.userAuthService.initialize();\n      }\n      \n      \n      const userInfo = this.userAuthService.getUserInfo();\n      const userSettings = this.userAuthService.getUserSettings();\n      \n      \n      await this.swdpClient.initialize({\n        userId: userInfo.userId,\n        gitUsername: userInfo.gitUsername,\n        gitEmail: userInfo.gitEmail,\n        token: userInfo.token\n      });\n      \n      \n      this.currentProject = userSettings.currentProject;\n      \n      \n      const ttl = this.configService.getAppConfig()?.cache?.ttl;\n      if (ttl && typeof ttl === 'number') {\n        this.cacheTTL = ttl;\n      }\n      \n      this.initialized = true;\n      console.log('SWDP \uB3C4\uBA54\uC778 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC644\uB8CC');\n    } catch (error) {\n      console.error('SWDP \uB3C4\uBA54\uC778 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654 \uD655\uC778\n   */\n  private checkInitialized(): void {\n    if (!this.initialized) {\n      throw new Error('SWDP \uB3C4\uBA54\uC778 \uC11C\uBE44\uC2A4\uAC00 \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n    }\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654 \uC0C1\uD0DC \uD655\uC778\n   * @returns \uCD08\uAE30\uD654 \uC0C1\uD0DC\n   */\n  public isInitialized(): boolean {\n    return this.initialized;\n  }\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @param forceRefresh \uAC15\uC81C \uC0C8\uB85C\uACE0\uCE68 \uC5EC\uBD80\n   * @returns \uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D\n   */\n  public async getProjects(forceRefresh: boolean = false): Promise<SwdpProject[]> {\n    this.checkInitialized();\n    \n    try {\n      \n      if (this.projectsCache.size > 0 && !forceRefresh) {\n        return Array.from(this.projectsCache.values());\n      }\n      \n      \n      const result = await this.swdpClient.getProjects();\n      const projects = result.projects || [];\n      \n      \n      this.projectsCache.clear();\n      for (const project of projects) {\n        this.projectsCache.set(project.code, project);\n      }\n      \n      \n      this.eventEmitter.emit(SwdpEvent.PROJECTS_LOADED, projects);\n      \n      return projects;\n    } catch (error) {\n      console.error('\uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uC138\uBD80 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   * @param forceRefresh \uAC15\uC81C \uC0C8\uB85C\uACE0\uCE68 \uC5EC\uBD80\n   * @returns \uD504\uB85C\uC81D\uD2B8 \uC138\uBD80 \uC815\uBCF4\n   */\n  public async getProjectDetails(projectCode: string, forceRefresh: boolean = false): Promise<SwdpProject> {\n    this.checkInitialized();\n    \n    try {\n      \n      if (this.projectsCache.has(projectCode) && !forceRefresh) {\n        return this.projectsCache.get(projectCode)!;\n      }\n      \n      \n      const result = await this.swdpClient.getProjectDetails(projectCode);\n      const project = result.project;\n      \n      if (!project) {\n        throw new Error(`\uD504\uB85C\uC81D\uD2B8\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${projectCode}`);\n      }\n      \n      \n      this.projectsCache.set(projectCode, project);\n      \n      return project;\n    } catch (error) {\n      console.error(`\uD504\uB85C\uC81D\uD2B8 \uC138\uBD80 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30 \uC911 \uC624\uB958 \uBC1C\uC0DD (${projectCode}):`, error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8 \uC124\uC815\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   */\n  public async setCurrentProject(projectCode: string): Promise<void> {\n    this.checkInitialized();\n    \n    try {\n      \n      await this.swdpClient.setCurrentProject(projectCode);\n      \n      \n      this.currentProject = projectCode;\n      \n      \n      await this.userAuthService.setCurrentProject(projectCode);\n      \n      console.log(`\uD604\uC7AC \uD504\uB85C\uC81D\uD2B8\uAC00 \uC124\uC815\uB428: ${projectCode}`);\n    } catch (error) {\n      console.error(`\uD604\uC7AC \uD504\uB85C\uC81D\uD2B8 \uC124\uC815 \uC911 \uC624\uB958 \uBC1C\uC0DD (${projectCode}):`, error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8 \uAC00\uC838\uC624\uAE30\n   * @returns \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   */\n  public getCurrentProject(): string | undefined {\n    return this.currentProject;\n  }\n  \n  /**\n   * \uC791\uC5C5 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8)\n   * @param forceRefresh \uAC15\uC81C \uC0C8\uB85C\uACE0\uCE68 \uC5EC\uBD80\n   * @returns \uC791\uC5C5 \uBAA9\uB85D\n   */\n  public async getTasks(projectCode?: string, forceRefresh: boolean = false): Promise<SwdpTask[]> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetProject = projectCode || this.currentProject;\n      if (!targetProject) {\n        throw new Error('\uD504\uB85C\uC81D\uD2B8\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      if (this.tasksCache.has(targetProject) && !forceRefresh) {\n        return this.tasksCache.get(targetProject)!;\n      }\n      \n      \n      const result = await this.swdpClient.getTasks(targetProject);\n      const tasks = result.tasks || [];\n      \n      \n      const tasksWithProject = tasks.map(task => ({\n        ...task,\n        projectCode: targetProject\n      }));\n      \n      \n      this.tasksCache.set(targetProject, tasksWithProject);\n      \n      \n      this.eventEmitter.emit(SwdpEvent.TASKS_LOADED, tasksWithProject);\n      \n      return tasksWithProject;\n    } catch (error) {\n      console.error('\uC791\uC5C5 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uC791\uC5C5 \uC138\uBD80 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\n   * @param taskId \uC791\uC5C5 ID\n   * @returns \uC791\uC5C5 \uC138\uBD80 \uC815\uBCF4\n   */\n  public async getTaskDetails(taskId: string): Promise<SwdpTask> {\n    this.checkInitialized();\n    \n    try {\n      \n      const result = await this.swdpClient.getTaskDetails(taskId);\n      const task = result.task;\n      \n      if (!task) {\n        throw new Error(`\uC791\uC5C5\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${taskId}`);\n      }\n      \n      \n      if (!task.projectCode && task.project) {\n        task.projectCode = task.project;\n      }\n      \n      \n      if (task.projectCode) {\n        if (!this.tasksCache.has(task.projectCode)) {\n          this.tasksCache.set(task.projectCode, []);\n        }\n        \n        const tasks = this.tasksCache.get(task.projectCode)!;\n        const taskIndex = tasks.findIndex(t => t.id === taskId);\n        \n        if (taskIndex >= 0) {\n          tasks[taskIndex] = task;\n        } else {\n          tasks.push(task);\n        }\n      }\n      \n      return task;\n    } catch (error) {\n      console.error(`\uC791\uC5C5 \uC138\uBD80 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30 \uC911 \uC624\uB958 \uBC1C\uC0DD (${taskId}):`, error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uC791\uC5C5 \uC0DD\uC131\n   * @param title \uC791\uC5C5 \uC81C\uBAA9\n   * @param description \uC791\uC5C5 \uC124\uBA85\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8)\n   * @param params \uCD94\uAC00 \uD30C\uB77C\uBBF8\uD130\n   * @returns \uC0DD\uC131\uB41C \uC791\uC5C5 \uC815\uBCF4\n   */\n  public async createTask(title: string, description: string, projectCode?: string, params?: Record<string, any>): Promise<SwdpTask> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetProject = projectCode || this.currentProject;\n      if (!targetProject) {\n        throw new Error('\uD504\uB85C\uC81D\uD2B8\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      const result = await this.swdpClient.createTask(title, description, targetProject, params);\n      const task = result.task || {\n        id: result.taskId,\n        title,\n        description,\n        projectCode: targetProject,\n        status: 'created'\n      };\n      \n      \n      if (!this.tasksCache.has(targetProject)) {\n        this.tasksCache.set(targetProject, []);\n      }\n      \n      const tasks = this.tasksCache.get(targetProject)!;\n      tasks.push(task);\n      \n      \n      this.eventEmitter.emit(SwdpEvent.TASK_CHANGED, task);\n      \n      return task;\n    } catch (error) {\n      console.error('\uC791\uC5C5 \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uC791\uC5C5 \uC0C1\uD0DC \uC5C5\uB370\uC774\uD2B8\n   * @param taskId \uC791\uC5C5 ID\n   * @param status \uC0C8 \uC0C1\uD0DC\n   * @returns \uC5C5\uB370\uC774\uD2B8\uB41C \uC791\uC5C5 \uC815\uBCF4\n   */\n  public async updateTaskStatus(taskId: string, status: string): Promise<SwdpTask> {\n    this.checkInitialized();\n    \n    try {\n      \n      const result = await this.swdpClient.updateTaskStatus(taskId, status);\n      const task = result.task;\n      \n      if (!task) {\n        throw new Error(`\uC791\uC5C5\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${taskId}`);\n      }\n      \n      \n      if (!task.projectCode && task.project) {\n        task.projectCode = task.project;\n      }\n      \n      \n      if (task.projectCode) {\n        if (!this.tasksCache.has(task.projectCode)) {\n          this.tasksCache.set(task.projectCode, []);\n        }\n        \n        const tasks = this.tasksCache.get(task.projectCode)!;\n        const taskIndex = tasks.findIndex(t => t.id === taskId);\n        \n        if (taskIndex >= 0) {\n          tasks[taskIndex] = task;\n        } else {\n          tasks.push(task);\n        }\n      }\n      \n      \n      this.eventEmitter.emit(SwdpEvent.TASK_CHANGED, task);\n      \n      return task;\n    } catch (error) {\n      console.error(`\uC791\uC5C5 \uC0C1\uD0DC \uC5C5\uB370\uC774\uD2B8 \uC911 \uC624\uB958 \uBC1C\uC0DD (${taskId}):`, error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uBB38\uC11C \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8)\n   * @param forceRefresh \uAC15\uC81C \uC0C8\uB85C\uACE0\uCE68 \uC5EC\uBD80\n   * @returns \uBB38\uC11C \uBAA9\uB85D\n   */\n  public async getDocuments(projectCode?: string, forceRefresh: boolean = false): Promise<SwdpDocument[]> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetProject = projectCode || this.currentProject;\n      if (!targetProject) {\n        throw new Error('\uD504\uB85C\uC81D\uD2B8\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      if (this.documentsCache.has(targetProject) && !forceRefresh) {\n        return this.documentsCache.get(targetProject)!;\n      }\n      \n      \n      const result = await this.swdpClient.getDocuments(targetProject);\n      const documents = result.documents || [];\n      \n      \n      const documentsWithProject = documents.map(doc => ({\n        ...doc,\n        projectCode: targetProject\n      }));\n      \n      \n      this.documentsCache.set(targetProject, documentsWithProject);\n      \n      \n      this.eventEmitter.emit(SwdpEvent.DOCUMENTS_LOADED, documentsWithProject);\n      \n      return documentsWithProject;\n    } catch (error) {\n      console.error('\uBB38\uC11C \uBAA9\uB85D \uAC00\uC838\uC624\uAE30 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uBB38\uC11C \uC138\uBD80 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\n   * @param docId \uBB38\uC11C ID\n   * @returns \uBB38\uC11C \uC138\uBD80 \uC815\uBCF4\n   */\n  public async getDocumentDetails(docId: string): Promise<SwdpDocument> {\n    this.checkInitialized();\n    \n    try {\n      \n      const result = await this.swdpClient.getDocumentDetails(docId);\n      const document = result.document;\n      \n      if (!document) {\n        throw new Error(`\uBB38\uC11C\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C: ${docId}`);\n      }\n      \n      \n      if (!document.projectCode && document.project) {\n        document.projectCode = document.project;\n      }\n      \n      \n      if (document.projectCode) {\n        if (!this.documentsCache.has(document.projectCode)) {\n          this.documentsCache.set(document.projectCode, []);\n        }\n        \n        const documents = this.documentsCache.get(document.projectCode)!;\n        const docIndex = documents.findIndex(d => d.id === docId);\n        \n        if (docIndex >= 0) {\n          documents[docIndex] = document;\n        } else {\n          documents.push(document);\n        }\n      }\n      \n      return document;\n    } catch (error) {\n      console.error(`\uBB38\uC11C \uC138\uBD80 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30 \uC911 \uC624\uB958 \uBC1C\uC0DD (${docId}):`, error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uBB38\uC11C \uC0DD\uC131\n   * @param title \uBB38\uC11C \uC81C\uBAA9\n   * @param type \uBB38\uC11C \uC720\uD615\n   * @param content \uBB38\uC11C \uB0B4\uC6A9\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8)\n   * @returns \uC0DD\uC131\uB41C \uBB38\uC11C \uC815\uBCF4\n   */\n  public async createDocument(title: string, type: string, content: string, projectCode?: string): Promise<SwdpDocument> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetProject = projectCode || this.currentProject;\n      if (!targetProject) {\n        throw new Error('\uD504\uB85C\uC81D\uD2B8\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      const result = await this.swdpClient.createDocument(title, type, content, targetProject);\n      const document = result.document || {\n        id: result.docId,\n        title,\n        type,\n        content,\n        projectCode: targetProject,\n        createdAt: new Date().toISOString()\n      };\n      \n      \n      if (!this.documentsCache.has(targetProject)) {\n        this.documentsCache.set(targetProject, []);\n      }\n      \n      const documents = this.documentsCache.get(targetProject)!;\n      documents.push(document);\n      \n      return document;\n    } catch (error) {\n      console.error('\uBB38\uC11C \uC0DD\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uC2DC\uC791\n   * @param type \uBE4C\uB4DC \uD0C0\uC785\n   * @param watchMode \uC6CC\uCE58 \uBAA8\uB4DC \uC5EC\uBD80\n   * @param createPr PR \uC0DD\uC131 \uC5EC\uBD80\n   * @param params \uCD94\uAC00 \uD30C\uB77C\uBBF8\uD130\n   * @returns \uBE4C\uB4DC \uC815\uBCF4\n   */\n  public async startBuild(type: string, watchMode: boolean = false, createPr: boolean = false, params: Record<string, any> = {}): Promise<SwdpBuild> {\n    this.checkInitialized();\n    \n    try {\n      \n      const result = await this.swdpClient.startBuild({\n        type: type as any,\n        watchMode,\n        createPr,\n        params\n      });\n      \n      const build: SwdpBuild = {\n        buildId: result.buildId,\n        type,\n        status: result.status || 'pending',\n        watchMode,\n        createPr,\n        timestamp: result.timestamp || new Date().toISOString(),\n        logs: []\n      };\n      \n      \n      this.buildsCache.set(build.buildId, build);\n      \n      \n      this.startBuildStatusPolling(build.buildId);\n      \n      return build;\n    } catch (error) {\n      console.error('\uBE4C\uB4DC \uC2DC\uC791 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uC0C1\uD0DC \uAC00\uC838\uC624\uAE30\n   * @param buildId \uBE4C\uB4DC ID (\uC0DD\uB7B5 \uC2DC \uCD5C\uADFC \uBE4C\uB4DC)\n   * @returns \uBE4C\uB4DC \uC0C1\uD0DC\n   */\n  public async getBuildStatus(buildId?: string): Promise<SwdpBuild> {\n    this.checkInitialized();\n    \n    try {\n      \n      if (!buildId) {\n        \n        let latestBuild: SwdpBuild | null = null;\n        let latestTimestamp = 0;\n        \n        for (const build of this.buildsCache.values()) {\n          const timestamp = new Date(build.timestamp).getTime();\n          if (timestamp > latestTimestamp) {\n            latestBuild = build;\n            latestTimestamp = timestamp;\n          }\n        }\n        \n        if (latestBuild) {\n          buildId = latestBuild.buildId;\n        } else {\n          \n          const result = await this.swdpClient.getBuildStatus();\n          \n          if (!result.buildId) {\n            throw new Error('\uBE4C\uB4DC\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4');\n          }\n          \n          buildId = result.buildId;\n        }\n      }\n      \n      \n      const result = await this.swdpClient.getBuildStatus(buildId);\n      \n      \n      const build: SwdpBuild = {\n        buildId,\n        type: result.type || 'unknown',\n        status: result.status || 'unknown',\n        watchMode: result.watchMode || false,\n        createPr: result.createPr || false,\n        timestamp: result.timestamp || new Date().toISOString()\n      };\n      \n      \n      this.buildsCache.set(buildId, build);\n      \n      \n      this.eventEmitter.emit(SwdpEvent.BUILD_STATUS_CHANGED, build);\n      \n      return build;\n    } catch (error) {\n      console.error('\uBE4C\uB4DC \uC0C1\uD0DC \uC870\uD68C \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uB85C\uADF8 \uAC00\uC838\uC624\uAE30\n   * @param buildId \uBE4C\uB4DC ID\n   * @returns \uBE4C\uB4DC \uB85C\uADF8\n   */\n  public async getBuildLogs(buildId: string): Promise<string[]> {\n    this.checkInitialized();\n    \n    try {\n      \n      const result = await this.swdpClient.getBuildLogs(buildId);\n      const logs = result.logs ? \n        (typeof result.logs === 'string' ? result.logs.split('\\n') : result.logs) : \n        [];\n      \n      \n      if (this.buildsCache.has(buildId)) {\n        const build = this.buildsCache.get(buildId)!;\n        build.logs = logs;\n        this.buildsCache.set(buildId, build);\n      }\n      \n      return logs;\n    } catch (error) {\n      console.error(`\uBE4C\uB4DC \uB85C\uADF8 \uC870\uD68C \uC911 \uC624\uB958 \uBC1C\uC0DD (${buildId}):`, error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uCDE8\uC18C\n   * @param buildId \uBE4C\uB4DC ID\n   * @returns \uCDE8\uC18C \uACB0\uACFC\n   */\n  public async cancelBuild(buildId: string): Promise<boolean> {\n    this.checkInitialized();\n    \n    try {\n      \n      await this.swdpClient.cancelBuild(buildId);\n      \n      \n      if (this.buildsCache.has(buildId)) {\n        const build = this.buildsCache.get(buildId)!;\n        build.status = 'canceled';\n        this.buildsCache.set(buildId, build);\n        \n        \n        this.eventEmitter.emit(SwdpEvent.BUILD_STATUS_CHANGED, build);\n      }\n      \n      return true;\n    } catch (error) {\n      console.error(`\uBE4C\uB4DC \uCDE8\uC18C \uC911 \uC624\uB958 \uBC1C\uC0DD (${buildId}):`, error);\n      this.eventEmitter.emit(SwdpEvent.ERROR_OCCURRED, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uC0C1\uD0DC \uD3F4\uB9C1 \uC2DC\uC791\n   * @param buildId \uBE4C\uB4DC ID\n   */\n  private startBuildStatusPolling(buildId: string): void {\n    \n    const interval = 5;\n    \n    \n    setTimeout(async () => {\n      try {\n        \n        const build = await this.getBuildStatus(buildId);\n        \n        \n        const isCompleted = ['success', 'failed', 'canceled'].includes(build.status);\n        \n        if (isCompleted) {\n          \n          try {\n            await this.getBuildLogs(buildId);\n          } catch (error) {\n            console.warn(`\uBE4C\uB4DC \uB85C\uADF8 \uC870\uD68C \uC2E4\uD328 (${buildId}):`, error);\n          }\n        } else {\n          \n          setTimeout(() => this.startBuildStatusPolling(buildId), interval * 1000);\n        }\n      } catch (error) {\n        console.warn(`\uBE4C\uB4DC \uC0C1\uD0DC \uD3F4\uB9C1 \uC911 \uC624\uB958 \uBC1C\uC0DD (${buildId}):`, error);\n      }\n    }, 5000);\n  }\n  \n  /**\n   * \uCE90\uC2DC\uB41C \uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @returns \uCE90\uC2DC\uB41C \uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D\n   */\n  public getCachedProjects(): SwdpProject[] {\n    return Array.from(this.projectsCache.values());\n  }\n  \n  /**\n   * \uCE90\uC2DC \uBE44\uC6B0\uAE30\n   */\n  public clearCache(): void {\n    this.projectsCache.clear();\n    this.tasksCache.clear();\n    this.documentsCache.clear();\n    this.buildsCache.clear();\n    \n    console.log('SWDP \uB3C4\uBA54\uC778 \uC11C\uBE44\uC2A4 \uCE90\uC2DC \uBE44\uC6C0');\n  }\n}", "/**\n * SWDP \uD074\uB77C\uC774\uC5B8\uD2B8 \uC11C\uBE44\uC2A4\n * \n * APE Core\uC758 SWDP Agent\uC640 \uD1B5\uC2E0\uD558\uC5EC \uBE4C\uB4DC \uD30C\uC774\uD504\uB77C\uC778 \uAE30\uB2A5\uC744 \uC81C\uACF5\n * localhost:8001 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uB97C \uD1B5\uD574 \uC694\uCCAD \uC804\uB2EC\n */\n\nimport { HttpClientService } from '../../../core/http/HttpClientService';\nimport { HttpHeaders } from '../../../types/HttpTypes';\n\n/**\n * SWDP \uBE4C\uB4DC \uD0C0\uC785 \uC5F4\uAC70\uD615\n */\nexport enum SwdpBuildType {\n  /**\n   * \uB85C\uCEEC \uBE4C\uB4DC\n   */\n  LOCAL = 'local',\n  \n  /**\n   * \uB808\uC774\uC5B4 \uBE4C\uB4DC\n   */\n  LAYER = 'layer',\n  \n  /**\n   * \uD1B5\uD569 \uBE4C\uB4DC\n   */\n  INTEGRATION = 'integration',\n  \n  /**\n   * \uC804\uCCB4 \uBE4C\uB4DC\n   */\n  ALL = 'all'\n}\n\n/**\n * SWDP \uBE4C\uB4DC \uC635\uC158 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface SwdpBuildOptions {\n  /**\n   * \uBE4C\uB4DC \uD0C0\uC785\n   */\n  type: SwdpBuildType;\n  \n  /**\n   * \uC6CC\uCE58 \uBAA8\uB4DC \uC5EC\uBD80\n   */\n  watchMode?: boolean;\n  \n  /**\n   * PR \uC0DD\uC131 \uC5EC\uBD80\n   */\n  createPr?: boolean;\n  \n  /**\n   * \uBE4C\uB4DC \uD30C\uB77C\uBBF8\uD130\n   */\n  params?: Record<string, any>;\n}\n\n/**\n * SWDP \uD14C\uC2A4\uD2B8 \uC635\uC158 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface SwdpTestOptions {\n  /**\n   * \uD14C\uC2A4\uD2B8 \uC720\uD615\n   */\n  type: 'unit' | 'integration' | 'system';\n  \n  /**\n   * \uD14C\uC2A4\uD2B8 \uB300\uC0C1\n   */\n  target?: string;\n  \n  /**\n   * \uD14C\uC2A4\uD2B8 \uD30C\uB77C\uBBF8\uD130\n   */\n  params?: Record<string, any>;\n}\n\n/**\n * TR(Test Request) \uC635\uC158 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface SwdpTROptions {\n  /**\n   * TR \uC81C\uBAA9\n   */\n  title: string;\n  \n  /**\n   * TR \uC124\uBA85\n   */\n  description: string;\n  \n  /**\n   * \uD14C\uC2A4\uD2B8 \uC720\uD615\n   */\n  type: string;\n  \n  /**\n   * \uC6B0\uC120\uC21C\uC704\n   */\n  priority?: 'high' | 'medium' | 'low';\n  \n  /**\n   * \uB2F4\uB2F9\uC790\n   */\n  assignee?: string;\n}\n\n/**\n * SWDP \uC778\uC99D \uC815\uBCF4 \uC778\uD130\uD398\uC774\uC2A4\n */\ninterface SwdpCredentials {\n  /**\n   * \uC0AC\uC6A9\uC790 ID\n   */\n  userId?: string;\n  \n  /**\n   * Git \uC774\uBA54\uC77C\n   */\n  gitEmail?: string;\n  \n  /**\n   * Git \uC0AC\uC6A9\uC790\uBA85\n   */\n  gitUsername?: string;\n  \n  /**\n   * API \uD1A0\uD070\n   */\n  token?: string;\n}\n\n/**\n * SWDP \uD074\uB77C\uC774\uC5B8\uD2B8 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n */\nexport class SwdpClientService {\n  /**\n   * HTTP \uD074\uB77C\uC774\uC5B8\uD2B8\n   */\n  private httpClient: HttpClientService;\n  \n  /**\n   * APE Core \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uAE30\uBCF8 URL\n   */\n  private baseUrl: string;\n  \n  /**\n   * \uC778\uC99D \uD5E4\uB354\n   */\n  private authHeaders: HttpHeaders = {};\n  \n  /**\n   * \uCD08\uAE30\uD654 \uC644\uB8CC \uC5EC\uBD80\n   */\n  private initialized: boolean = false;\n  \n  /**\n   * SwdpClientService \uC0DD\uC131\uC790\n   * @param baseUrl APE Core \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uAE30\uBCF8 URL (\uAE30\uBCF8\uAC12: http://localhost:8080)\n   * @param bypassSsl SSL \uC778\uC99D\uC11C \uAC80\uC99D \uC6B0\uD68C \uC5EC\uBD80\n   */\n  constructor(baseUrl: string = 'http://localhost:8080', bypassSsl: boolean = true) {\n    this.baseUrl = baseUrl.endsWith('/') ? baseUrl : `${baseUrl}/`;\n    this.httpClient = new HttpClientService();\n    \n    \n    if (bypassSsl) {\n      this.httpClient.setSSLBypass(true);\n    }\n  }\n  \n  /**\n   * \uD074\uB77C\uC774\uC5B8\uD2B8 \uCD08\uAE30\uD654\n   * @param credentials \uC778\uC99D \uC815\uBCF4\n   */\n  async initialize(credentials: SwdpCredentials): Promise<void> {\n    try {\n      \n      this.authHeaders = {\n        'Content-Type': 'application/json'\n      };\n      \n      \n      if (credentials.userId) {\n        this.authHeaders['User-ID'] = credentials.userId;\n      }\n      \n      if (credentials.token) {\n        this.authHeaders['Authorization'] = `Bearer ${credentials.token}`;\n      }\n      \n      if (credentials.gitUsername) {\n        this.authHeaders['Git-Username'] = credentials.gitUsername;\n      }\n      \n      if (credentials.gitEmail) {\n        this.authHeaders['Git-Email'] = credentials.gitEmail;\n      }\n      \n      \n      await this.testConnection();\n      \n      this.initialized = true;\n      console.log('SWDP \uD074\uB77C\uC774\uC5B8\uD2B8 \uCD08\uAE30\uD654 \uC644\uB8CC');\n    } catch (error) {\n      console.error('SWDP \uD074\uB77C\uC774\uC5B8\uD2B8 \uCD08\uAE30\uD654 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uC5F0\uACB0 \uD14C\uC2A4\uD2B8\n   */\n  private async testConnection(): Promise<void> {\n    try {\n      const response = await this.httpClient.get(\n        `${this.baseUrl}api/status`,\n        this.authHeaders\n      );\n      \n      if (!response.ok) {\n        throw new Error(`APE Core \uC5F0\uACB0 \uD14C\uC2A4\uD2B8 \uC2E4\uD328: ${response.statusCode} ${response.statusText}`);\n      }\n      \n      console.log('APE Core \uC5F0\uACB0 \uD14C\uC2A4\uD2B8 \uC131\uACF5:', response.data.status);\n    } catch (error) {\n      console.error('APE Core \uC5F0\uACB0 \uD14C\uC2A4\uD2B8 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654 \uD655\uC778\n   */\n  private checkInitialized(): void {\n    if (!this.initialized) {\n      throw new Error('SWDP \uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n    }\n  }\n  \n  /**\n   * SWDP Agent\uC5D0 \uBA85\uB839 \uC804\uC1A1\n   * @param route API \uB77C\uC6B0\uD2B8\n   * @param data \uC694\uCCAD \uB370\uC774\uD130\n   * @returns \uC751\uB2F5 \uB370\uC774\uD130\n   */\n  private async sendSwdpCommand(route: string, data: any): Promise<any> {\n    this.checkInitialized();\n    \n    try {\n      \n      const apiUrl = `${this.baseUrl}api/swdp/${route}`;\n      \n      \n      const requestData = {\n        ...data,\n        timestamp: new Date().toISOString()\n      };\n      \n      \n      const response = await this.httpClient.post(\n        apiUrl,\n        requestData,\n        this.authHeaders\n      );\n      \n      if (!response.ok) {\n        throw new Error(`SWDP \uC694\uCCAD \uC2E4\uD328 (${route}): ${response.statusCode} ${response.statusText}`);\n      }\n      \n      return response.data;\n    } catch (error) {\n      console.error(`SWDP \uC694\uCCAD \uC911 \uC624\uB958 \uBC1C\uC0DD (${route}):`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * SWDP \uBE4C\uB4DC \uC2DC\uC791\n   * @param options \uBE4C\uB4DC \uC635\uC158\n   * @returns \uBE4C\uB4DC \uACB0\uACFC\n   */\n  async startBuild(options: SwdpBuildOptions): Promise<any> {\n    return this.sendSwdpCommand('builds/start', {\n      type: options.type,\n      watchMode: options.watchMode || false,\n      createPr: options.createPr || false,\n      params: options.params || {}\n    });\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uC0C1\uD0DC \uC870\uD68C\n   * @param buildId \uBE4C\uB4DC ID (\uC0DD\uB7B5 \uC2DC \uCD5C\uADFC \uBE4C\uB4DC)\n   * @returns \uBE4C\uB4DC \uC0C1\uD0DC\n   */\n  async getBuildStatus(buildId?: string): Promise<any> {\n    return this.sendSwdpCommand('builds/status', {\n      buildId: buildId\n    });\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uB85C\uADF8 \uC870\uD68C\n   * @param buildId \uBE4C\uB4DC ID\n   * @returns \uBE4C\uB4DC \uB85C\uADF8\n   */\n  async getBuildLogs(buildId: string): Promise<any> {\n    return this.sendSwdpCommand('builds/logs', {\n      buildId\n    });\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uCDE8\uC18C\n   * @param buildId \uBE4C\uB4DC ID\n   * @returns \uCDE8\uC18C \uACB0\uACFC\n   */\n  async cancelBuild(buildId: string): Promise<any> {\n    return this.sendSwdpCommand('builds/cancel', {\n      buildId\n    });\n  }\n  \n  /**\n   * \uD14C\uC2A4\uD2B8 \uC2E4\uD589\n   * @param options \uD14C\uC2A4\uD2B8 \uC635\uC158\n   * @returns \uD14C\uC2A4\uD2B8 \uACB0\uACFC\n   */\n  async runTest(options: SwdpTestOptions): Promise<any> {\n    return this.sendSwdpCommand('tests/run', {\n      type: options.type,\n      target: options.target,\n      params: options.params || {}\n    });\n  }\n  \n  /**\n   * \uD14C\uC2A4\uD2B8 \uACB0\uACFC \uC870\uD68C\n   * @param testId \uD14C\uC2A4\uD2B8 ID\n   * @returns \uD14C\uC2A4\uD2B8 \uACB0\uACFC\n   */\n  async getTestResults(testId: string): Promise<any> {\n    return this.sendSwdpCommand('tests/results', {\n      testId\n    });\n  }\n  \n  /**\n   * TR(Test Request) \uC0DD\uC131\n   * @param options TR \uC635\uC158\n   * @returns TR \uC815\uBCF4\n   */\n  async createTR(options: SwdpTROptions): Promise<any> {\n    return this.sendSwdpCommand('tr/create', {\n      title: options.title,\n      description: options.description,\n      type: options.type,\n      priority: options.priority || 'medium',\n      assignee: options.assignee\n    });\n  }\n  \n  /**\n   * TR \uC0C1\uD0DC \uC870\uD68C\n   * @param trId TR ID\n   * @returns TR \uC0C1\uD0DC\n   */\n  async getTRStatus(trId: string): Promise<any> {\n    return this.sendSwdpCommand('tr/status', {\n      trId\n    });\n  }\n  \n  /**\n   * \uBC30\uD3EC \uC2DC\uC791\n   * @param environment \uBC30\uD3EC \uD658\uACBD\n   * @param buildId \uBE4C\uB4DC ID\n   * @param params \uBC30\uD3EC \uD30C\uB77C\uBBF8\uD130\n   * @returns \uBC30\uD3EC \uACB0\uACFC\n   */\n  async startDeployment(environment: string, buildId: string, params?: Record<string, any>): Promise<any> {\n    return this.sendSwdpCommand('deployments/start', {\n      environment,\n      buildId,\n      params: params || {}\n    });\n  }\n  \n  /**\n   * \uBC30\uD3EC \uC0C1\uD0DC \uC870\uD68C\n   * @param deploymentId \uBC30\uD3EC ID\n   * @returns \uBC30\uD3EC \uC0C1\uD0DC\n   */\n  async getDeploymentStatus(deploymentId: string): Promise<any> {\n    return this.sendSwdpCommand('deployments/status', {\n      deploymentId\n    });\n  }\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D \uC870\uD68C\n   * @returns \uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D\n   */\n  async getProjects(): Promise<any> {\n    return this.sendSwdpCommand('projects/list', {});\n  }\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uC138\uBD80 \uC815\uBCF4 \uC870\uD68C\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   * @returns \uD504\uB85C\uC81D\uD2B8 \uC138\uBD80 \uC815\uBCF4\n   */\n  async getProjectDetails(projectCode: string): Promise<any> {\n    return this.sendSwdpCommand('projects/details', {\n      projectCode\n    });\n  }\n  \n  /**\n   * \uD604\uC7AC \uC791\uC5C5 \uD504\uB85C\uC81D\uD2B8 \uC124\uC815\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   * @returns \uC124\uC815 \uACB0\uACFC\n   */\n  async setCurrentProject(projectCode: string): Promise<any> {\n    return this.sendSwdpCommand('projects/set-current', {\n      projectCode\n    });\n  }\n  \n  /**\n   * \uC791\uC5C5 \uBAA9\uB85D \uC870\uD68C\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8)\n   * @returns \uC791\uC5C5 \uBAA9\uB85D\n   */\n  async getTasks(projectCode?: string): Promise<any> {\n    return this.sendSwdpCommand('tasks/list', {\n      projectCode\n    });\n  }\n  \n  /**\n   * \uC791\uC5C5 \uC138\uBD80 \uC815\uBCF4 \uC870\uD68C\n   * @param taskId \uC791\uC5C5 ID\n   * @returns \uC791\uC5C5 \uC138\uBD80 \uC815\uBCF4\n   */\n  async getTaskDetails(taskId: string): Promise<any> {\n    return this.sendSwdpCommand('tasks/details', {\n      taskId\n    });\n  }\n  \n  /**\n   * \uC791\uC5C5 \uC0DD\uC131\n   * @param title \uC791\uC5C5 \uC81C\uBAA9\n   * @param description \uC791\uC5C5 \uC124\uBA85\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8)\n   * @param params \uCD94\uAC00 \uD30C\uB77C\uBBF8\uD130\n   * @returns \uC0DD\uC131\uB41C \uC791\uC5C5 \uC815\uBCF4\n   */\n  async createTask(title: string, description: string, projectCode?: string, params?: Record<string, any>): Promise<any> {\n    return this.sendSwdpCommand('tasks/create', {\n      title,\n      description,\n      projectCode,\n      params: params || {}\n    });\n  }\n  \n  /**\n   * \uC791\uC5C5 \uC0C1\uD0DC \uC5C5\uB370\uC774\uD2B8\n   * @param taskId \uC791\uC5C5 ID\n   * @param status \uC0C8 \uC0C1\uD0DC\n   * @returns \uC5C5\uB370\uC774\uD2B8 \uACB0\uACFC\n   */\n  async updateTaskStatus(taskId: string, status: string): Promise<any> {\n    return this.sendSwdpCommand('tasks/update-status', {\n      taskId,\n      status\n    });\n  }\n  \n  /**\n   * \uBB38\uC11C \uBAA9\uB85D \uC870\uD68C\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8)\n   * @returns \uBB38\uC11C \uBAA9\uB85D\n   */\n  async getDocuments(projectCode?: string): Promise<any> {\n    return this.sendSwdpCommand('documents/list', {\n      projectCode\n    });\n  }\n  \n  /**\n   * \uBB38\uC11C \uC138\uBD80 \uC815\uBCF4 \uC870\uD68C\n   * @param docId \uBB38\uC11C ID\n   * @returns \uBB38\uC11C \uC138\uBD80 \uC815\uBCF4\n   */\n  async getDocumentDetails(docId: string): Promise<any> {\n    return this.sendSwdpCommand('documents/details', {\n      docId\n    });\n  }\n  \n  /**\n   * \uBB38\uC11C \uC0DD\uC131\n   * @param title \uBB38\uC11C \uC81C\uBAA9\n   * @param type \uBB38\uC11C \uC720\uD615\n   * @param content \uBB38\uC11C \uB0B4\uC6A9\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8)\n   * @returns \uC0DD\uC131\uB41C \uBB38\uC11C \uC815\uBCF4\n   */\n  async createDocument(title: string, type: string, content: string, projectCode?: string): Promise<any> {\n    return this.sendSwdpCommand('documents/create', {\n      title,\n      type,\n      content,\n      projectCode\n    });\n  }\n  \n  /**\n   * Git \uC800\uC7A5\uC18C\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\n   * @returns \uC0AC\uC6A9\uC790 \uC815\uBCF4\n   */\n  async getUserInfoFromGit(): Promise<any> {\n    return this.sendSwdpCommand('git/user-info', {});\n  }\n}", "/**\n * \uC0AC\uC6A9\uC790 \uC778\uC99D \uBC0F \uC124\uC815 \uAD00\uB9AC \uC11C\uBE44\uC2A4\n * \n * \uC0AC\uC6A9\uC790 \uC778\uC99D \uC815\uBCF4 \uAD00\uB9AC \uBC0F Git \uC815\uBCF4 \uCD94\uCD9C \uAE30\uB2A5 \uC81C\uACF5\n * \uC0AC\uC6A9\uC790 ID, Git \uC0AC\uC6A9\uC790\uBA85, \uC774\uBA54\uC77C \uC815\uBCF4 \uAD00\uB9AC\n */\n\nimport * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { ConfigService } from '../config/ConfigService';\nimport { EventEmitter } from 'events';\n\n/**\n * \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface UserInfo {\n  /**\n   * \uC0AC\uC6A9\uC790 ID\n   */\n  userId?: string;\n  \n  /**\n   * Git \uC0AC\uC6A9\uC790\uBA85\n   */\n  gitUsername?: string;\n  \n  /**\n   * Git \uC774\uBA54\uC77C\n   */\n  gitEmail?: string;\n  \n  /**\n   * \uC811\uADFC \uD1A0\uD070\n   */\n  token?: string;\n}\n\n/**\n * \uC0AC\uC6A9\uC790 \uC124\uC815 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface UserSettings {\n  /**\n   * \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8\n   */\n  currentProject?: string;\n  \n  /**\n   * API \uC5D4\uB4DC\uD3EC\uC778\uD2B8\n   */\n  apiEndpoint?: string;\n  \n  /**\n   * \uAE30\uD0C0 \uC0AC\uC6A9\uC790 \uC124\uC815\n   */\n  [key: string]: any;\n}\n\n/**\n * \uC0AC\uC6A9\uC790 \uC778\uC99D \uAD00\uB828 \uC774\uBCA4\uD2B8 \uD0C0\uC785\n */\nexport enum UserAuthEvent {\n  /**\n   * \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uBCC0\uACBD\uB428\n   */\n  USER_INFO_CHANGED = 'user_info_changed',\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC124\uC815 \uBCC0\uACBD\uB428\n   */\n  USER_SETTINGS_CHANGED = 'user_settings_changed',\n  \n  /**\n   * \uB85C\uADF8\uC778\uB428\n   */\n  LOGGED_IN = 'logged_in',\n  \n  /**\n   * \uB85C\uADF8\uC544\uC6C3\uB428\n   */\n  LOGGED_OUT = 'logged_out'\n}\n\n/**\n * \uC0AC\uC6A9\uC790 \uC778\uC99D \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n * Git \uAE30\uBC18 \uC0AC\uC6A9\uC790 \uC778\uC99D \uBC0F \uC124\uC815 \uAD00\uB9AC\n */\nexport class UserAuthService {\n  /**\n   * \uC774\uBCA4\uD2B8 \uC774\uBBF8\uD130\n   */\n  private eventEmitter = new EventEmitter();\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC815\uBCF4\n   */\n  private userInfo: UserInfo = {};\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC124\uC815\n   */\n  private userSettings: UserSettings = {};\n  \n  /**\n   * \uCD08\uAE30\uD654 \uC644\uB8CC \uC5EC\uBD80\n   */\n  private initialized: boolean = false;\n  \n  /**\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 (\uB808\uAC70\uC2DC \uD638\uD658\uC131 \uC720\uC9C0)\n   */\n  private static instance: UserAuthService;\n  \n  /**\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 \uAC00\uC838\uC624\uAE30\n   * @deprecated \uC2F1\uAE00\uD1A4 \uD328\uD134 \uB300\uC2E0 \uC758\uC874\uC131 \uC8FC\uC785 \uC0AC\uC6A9 \uAD8C\uC7A5\n   * @returns UserAuthService \uC778\uC2A4\uD134\uC2A4\n   */\n  public static getInstance(): UserAuthService {\n    if (!UserAuthService.instance) {\n      UserAuthService.instance = new UserAuthService(ConfigService.getInstance());\n    }\n    return UserAuthService.instance;\n  }\n  \n  /**\n   * \uD329\uD1A0\uB9AC \uBA54\uC11C\uB4DC: \uC778\uC2A4\uD134\uC2A4 \uC0DD\uC131\n   * @param configService \uC124\uC815 \uC11C\uBE44\uC2A4\n   * @returns UserAuthService \uC778\uC2A4\uD134\uC2A4\n   */\n  public static createInstance(configService: ConfigService): UserAuthService {\n    return new UserAuthService(configService);\n  }\n  \n  /**\n   * \uC0DD\uC131\uC790\n   * @param configService \uC124\uC815 \uC11C\uBE44\uC2A4\n   */\n  constructor(private readonly configService: ConfigService) {\n  }\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uB4F1\uB85D\n   * @param event \uC774\uBCA4\uD2B8 \uC774\uB984\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   */\n  public on(event: UserAuthEvent, listener: (...args: any[]) => void): void {\n    this.eventEmitter.on(event, listener);\n  }\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uC81C\uAC70\n   * @param event \uC774\uBCA4\uD2B8 \uC774\uB984\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   */\n  public off(event: UserAuthEvent, listener: (...args: any[]) => void): void {\n    this.eventEmitter.off(event, listener);\n  }\n  \n  /**\n   * \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\n   */\n  public async initialize(): Promise<void> {\n    try {\n      \n      await this.loadUserInfo();\n      \n      \n      if (!this.userInfo.gitUsername || !this.userInfo.gitEmail) {\n        try {\n          const gitInfo = await this.extractGitUserInfo();\n          if (gitInfo) {\n            this.userInfo = {\n              ...this.userInfo,\n              ...gitInfo\n            };\n            \n            \n            await this.saveUserInfo();\n          }\n        } catch (error) {\n          console.warn('Git \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uCD94\uCD9C \uC2E4\uD328:', error);\n        }\n      }\n      \n      \n      await this.loadUserSettings();\n      \n      this.initialized = true;\n      console.log('\uC0AC\uC6A9\uC790 \uC778\uC99D \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC644\uB8CC');\n    } catch (error) {\n      console.error('\uC0AC\uC6A9\uC790 \uC778\uC99D \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654 \uD655\uC778\n   */\n  private checkInitialized(): void {\n    if (!this.initialized) {\n      throw new Error('\uC0AC\uC6A9\uC790 \uC778\uC99D \uC11C\uBE44\uC2A4\uAC00 \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n    }\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654 \uC0C1\uD0DC \uD655\uC778\n   * @returns \uCD08\uAE30\uD654 \uC0C1\uD0DC\n   */\n  public isInitialized(): boolean {\n    return this.initialized;\n  }\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\n   * @returns \uC0AC\uC6A9\uC790 \uC815\uBCF4\n   */\n  public getUserInfo(): UserInfo {\n    this.checkInitialized();\n    return { ...this.userInfo };\n  }\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC124\uC815 \uAC00\uC838\uC624\uAE30\n   * @returns \uC0AC\uC6A9\uC790 \uC124\uC815\n   */\n  public getUserSettings(): UserSettings {\n    this.checkInitialized();\n    return { ...this.userSettings };\n  }\n  \n  /**\n   * \uC0AC\uC6A9\uC790 ID \uC124\uC815\n   * @param userId \uC0AC\uC6A9\uC790 ID\n   */\n  public async setUserId(userId: string): Promise<void> {\n    this.checkInitialized();\n    \n    this.userInfo.userId = userId;\n    await this.saveUserInfo();\n    \n    this.eventEmitter.emit(UserAuthEvent.USER_INFO_CHANGED, this.userInfo);\n  }\n  \n  /**\n   * \uC811\uADFC \uD1A0\uD070 \uC124\uC815\n   * @param token \uC811\uADFC \uD1A0\uD070\n   */\n  public async setToken(token: string): Promise<void> {\n    this.checkInitialized();\n    \n    this.userInfo.token = token;\n    await this.saveUserInfo();\n    \n    this.eventEmitter.emit(UserAuthEvent.USER_INFO_CHANGED, this.userInfo);\n  }\n  \n  /**\n   * \uD604\uC7AC \uD504\uB85C\uC81D\uD2B8 \uC124\uC815\n   * @param projectCode \uD504\uB85C\uC81D\uD2B8 \uCF54\uB4DC\n   */\n  public async setCurrentProject(projectCode: string): Promise<void> {\n    this.checkInitialized();\n    \n    this.userSettings.currentProject = projectCode;\n    await this.saveUserSettings();\n    \n    this.eventEmitter.emit(UserAuthEvent.USER_SETTINGS_CHANGED, this.userSettings);\n  }\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC124\uC815 \uC5C5\uB370\uC774\uD2B8\n   * @param settings \uC5C5\uB370\uC774\uD2B8\uD560 \uC124\uC815\n   */\n  public async updateUserSettings(settings: Partial<UserSettings>): Promise<void> {\n    this.checkInitialized();\n    \n    this.userSettings = {\n      ...this.userSettings,\n      ...settings\n    };\n    \n    await this.saveUserSettings();\n    \n    this.eventEmitter.emit(UserAuthEvent.USER_SETTINGS_CHANGED, this.userSettings);\n  }\n  \n  /**\n   * \uB85C\uADF8\uC778\n   * @param userId \uC0AC\uC6A9\uC790 ID\n   * @param token \uC811\uADFC \uD1A0\uD070\n   */\n  public async login(userId: string, token: string): Promise<void> {\n    this.checkInitialized();\n    \n    this.userInfo.userId = userId;\n    this.userInfo.token = token;\n    \n    await this.saveUserInfo();\n    \n    this.eventEmitter.emit(UserAuthEvent.LOGGED_IN, this.userInfo);\n    this.eventEmitter.emit(UserAuthEvent.USER_INFO_CHANGED, this.userInfo);\n  }\n  \n  /**\n   * \uB85C\uADF8\uC544\uC6C3\n   */\n  public async logout(): Promise<void> {\n    this.checkInitialized();\n    \n    \n    delete this.userInfo.token;\n    \n    await this.saveUserInfo();\n    \n    this.eventEmitter.emit(UserAuthEvent.LOGGED_OUT);\n    this.eventEmitter.emit(UserAuthEvent.USER_INFO_CHANGED, this.userInfo);\n  }\n  \n  /**\n   * Git \uC800\uC7A5\uC18C\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uCD94\uCD9C\n   * @returns Git \uC0AC\uC6A9\uC790 \uC815\uBCF4\n   */\n  private async extractGitUserInfo(): Promise<{ gitUsername?: string, gitEmail?: string }> {\n    try {\n      \n      const workspaceFolders = vscode.workspace.workspaceFolders;\n      if (!workspaceFolders || workspaceFolders.length === 0) {\n        throw new Error('\uC5F4\uB9B0 \uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4');\n      }\n      \n      const workspaceRoot = workspaceFolders[0].uri.fsPath;\n      const gitConfigPath = path.join(workspaceRoot, '.git', 'config');\n      \n      \n      if (!fs.existsSync(gitConfigPath)) {\n        throw new Error('Git \uC800\uC7A5\uC18C\uAC00 \uC544\uB2D9\uB2C8\uB2E4');\n      }\n      \n      \n      const configContent = fs.readFileSync(gitConfigPath, 'utf8');\n      \n      \n      const usernameMatch = configContent.match(/\\[user\\][^\\[]*name\\s*=\\s*([^\\n\\r]*)/);\n      const emailMatch = configContent.match(/\\[user\\][^\\[]*email\\s*=\\s*([^\\n\\r]*)/);\n      \n      const gitUsername = usernameMatch?.[1]?.trim();\n      const gitEmail = emailMatch?.[1]?.trim();\n      \n      const result: { gitUsername?: string, gitEmail?: string } = {};\n      if (gitUsername) result.gitUsername = gitUsername;\n      if (gitEmail) result.gitEmail = gitEmail;\n      return result;\n    } catch (error) {\n      console.warn('Git \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uCD94\uCD9C \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return {};\n    }\n  }\n  \n  /**\n   * \uC124\uC815\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uB85C\uB4DC\n   */\n  private async loadUserInfo(): Promise<void> {\n    try {\n      const userConfig = this.configService.getUserConfig();\n      if (userConfig && userConfig['auth']) {\n        const auth = userConfig['auth'];\n        this.userInfo = {\n          userId: auth['userId'],\n          gitUsername: auth['gitUsername'],\n          gitEmail: auth['gitEmail'],\n          token: auth['token']\n        };\n      }\n    } catch (error) {\n      console.warn('\uC0AC\uC6A9\uC790 \uC815\uBCF4 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * \uC124\uC815\uC5D0 \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uC800\uC7A5\n   */\n  private async saveUserInfo(): Promise<void> {\n    try {\n      await this.configService.updateUserConfig({\n        auth: { ...this.userInfo }\n      });\n    } catch (error) {\n      console.error('\uC0AC\uC6A9\uC790 \uC815\uBCF4 \uC800\uC7A5 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uC124\uC815\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC124\uC815 \uB85C\uB4DC\n   */\n  private async loadUserSettings(): Promise<void> {\n    try {\n      const userConfig = this.configService.getUserConfig();\n      if (userConfig && userConfig['settings']) {\n        this.userSettings = { ...userConfig['settings'] };\n      }\n    } catch (error) {\n      console.warn('\uC0AC\uC6A9\uC790 \uC124\uC815 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * \uC124\uC815\uC5D0 \uC0AC\uC6A9\uC790 \uC124\uC815 \uC800\uC7A5\n   */\n  private async saveUserSettings(): Promise<void> {\n    try {\n      await this.configService.updateUserConfig({\n        settings: { ...this.userSettings }\n      });\n    } catch (error) {\n      console.error('\uC0AC\uC6A9\uC790 \uC124\uC815 \uC800\uC7A5 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      throw error;\n    }\n  }\n}", "/**\n * SWDP \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC11C\uBE44\uC2A4\n * \n * Git, Jira \uB4F1\uACFC SWDP \uC791\uC5C5\uC744 \uC5F0\uACB0\uD558\uB294 \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC11C\uBE44\uC2A4\n * \uC791\uC5C5 \uC0C1\uD0DC \uBCC0\uACBD, \uD788\uC2A4\uD1A0\uB9AC \uCD94\uC801 \uAE30\uB2A5 \uC81C\uACF5\n */\n\nimport { EventEmitter } from 'events';\nimport { SwdpDomainService, SwdpTask, SwdpEvent } from '../domain/SwdpDomainService';\nimport { UserAuthService } from '../auth/UserAuthService';\nimport { ConfigService } from '../config/ConfigService';\n\n/**\n * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC774\uBCA4\uD2B8 \uC5F4\uAC70\uD615\n */\nexport enum WorkflowEvent {\n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC2DC\uC791\uB428\n   */\n  WORKFLOW_STARTED = 'workflow_started',\n  \n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC644\uB8CC\uB428\n   */\n  WORKFLOW_COMPLETED = 'workflow_completed',\n  \n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC2E4\uD328\uD568\n   */\n  WORKFLOW_FAILED = 'workflow_failed',\n  \n  /**\n   * \uC791\uC5C5 \uC5F0\uACB0 \uC0DD\uC131\uB428\n   */\n  TASK_LINKED = 'task_linked',\n  \n  /**\n   * \uC791\uC5C5 \uC0C1\uD0DC \uBCC0\uACBD\uB428\n   */\n  TASK_STATUS_CHANGED = 'task_status_changed'\n}\n\n/**\n * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8 \uD56D\uBAA9 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface WorkflowLogItem {\n  /**\n   * \uD0C0\uC784\uC2A4\uD0EC\uD504\n   */\n  timestamp: string;\n  \n  /**\n   * \uC791\uC5C5 ID\n   */\n  taskId?: string;\n  \n  /**\n   * \uC791\uC5C5 \uC720\uD615\n   */\n  actionType: string;\n  \n  /**\n   * \uC124\uBA85\n   */\n  description: string;\n  \n  /**\n   * \uC0C1\uD0DC\n   */\n  status: 'success' | 'failed' | 'pending';\n  \n  /**\n   * \uBA54\uD0C0\uB370\uC774\uD130\n   */\n  metadata?: Record<string, any>;\n}\n\n/**\n * SWDP \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n */\nexport class SwdpWorkflowService {\n  /**\n   * \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4\n   * @deprecated \uC2F1\uAE00\uD1A4 \uD328\uD134 \uB300\uC2E0 \uC758\uC874\uC131 \uC8FC\uC785 \uC0AC\uC6A9 \uAD8C\uC7A5\n   */\n  private static instance: SwdpWorkflowService;\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uC774\uBBF8\uD130\n   */\n  private eventEmitter = new EventEmitter();\n  \n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8\n   */\n  private workflowLogs: Map<string, WorkflowLogItem[]> = new Map();\n  \n  /**\n   * \uD604\uC7AC \uC791\uC5C5 ID\n   */\n  private currentTaskId?: string;\n  \n  /**\n   * \uCD08\uAE30\uD654 \uC644\uB8CC \uC5EC\uBD80\n   */\n  private initialized: boolean = false;\n  \n  /**\n   * \uD329\uD1A0\uB9AC \uBA54\uC11C\uB4DC: \uC758\uC874\uC131 \uC8FC\uC785\uC744 \uD1B5\uD55C \uC778\uC2A4\uD134\uC2A4 \uC0DD\uC131\n   */\n  public static createInstance(\n    configService: ConfigService,\n    userAuthService: UserAuthService,\n    swdpDomainService: SwdpDomainService\n  ): SwdpWorkflowService {\n    return new SwdpWorkflowService(configService, userAuthService, swdpDomainService);\n  }\n  \n  /**\n   * \uB808\uAC70\uC2DC \uC2F1\uAE00\uD1A4 \uC811\uADFC \uBC29\uC2DD - \uC810\uC9C4\uC801 \uB9C8\uC774\uADF8\uB808\uC774\uC158\uC744 \uC704\uD574 \uC720\uC9C0\n   * @deprecated \uC2F1\uAE00\uD1A4 \uD328\uD134 \uB300\uC2E0 \uC758\uC874\uC131 \uC8FC\uC785 \uC0AC\uC6A9 \uAD8C\uC7A5\n   * @returns SwdpWorkflowService \uC778\uC2A4\uD134\uC2A4\n   */\n  public static getInstance(): SwdpWorkflowService {\n    if (!SwdpWorkflowService.instance) {\n      // \uD544\uC694\uD55C \uC11C\uBE44\uC2A4 \uAC00\uC838\uC624\uAE30\n      const configService = ConfigService.getInstance();\n      const userAuthService = UserAuthService.getInstance();\n      const swdpDomainService = SwdpDomainService.getInstance();\n      \n      // \uD329\uD1A0\uB9AC \uBA54\uC11C\uB4DC \uC0AC\uC6A9\n      SwdpWorkflowService.instance = SwdpWorkflowService.createInstance(\n        configService,\n        userAuthService,\n        swdpDomainService\n      );\n    }\n    return SwdpWorkflowService.instance;\n  }\n  \n  /**\n   * \uC0DD\uC131\uC790\n   */\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userAuthService: UserAuthService,\n    private readonly swdpDomainService: SwdpDomainService\n  ) {\n    this.swdpDomainService.on(SwdpEvent.TASK_CHANGED, (task) => {\n      this.handleTaskChanged(task);\n    });\n  }\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uB4F1\uB85D\n   * @param event \uC774\uBCA4\uD2B8 \uC774\uB984\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   */\n  public on(event: WorkflowEvent, listener: (...args: any[]) => void): void {\n    this.eventEmitter.on(event, listener);\n  }\n  \n  /**\n   * \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uC81C\uAC70\n   * @param event \uC774\uBCA4\uD2B8 \uC774\uB984\n   * @param listener \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108\n   */\n  public off(event: WorkflowEvent, listener: (...args: any[]) => void): void {\n    this.eventEmitter.off(event, listener);\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654\n   */\n  public async initialize(): Promise<void> {\n    try {\n      \n      if (!this.userAuthService.isInitialized()) {\n        await this.userAuthService.initialize();\n      }\n      \n      \n      if (!this.swdpDomainService.isInitialized()) {\n        await this.swdpDomainService.initialize();\n      }\n      \n      \n      const userSettings = this.userAuthService.getUserSettings();\n      if (userSettings.currentTask) {\n        this.currentTaskId = userSettings.currentTask;\n        console.log(`\uD604\uC7AC \uC791\uC5C5\uC774 \uC124\uC815\uB428: ${this.currentTaskId}`);\n      }\n      \n      this.initialized = true;\n      console.log('SWDP \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC644\uB8CC');\n    } catch (error) {\n      console.error('SWDP \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654 \uD655\uC778\n   */\n  private checkInitialized(): void {\n    if (!this.initialized) {\n      throw new Error('SWDP \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC11C\uBE44\uC2A4\uAC00 \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n    }\n  }\n  \n  /**\n   * \uCD08\uAE30\uD654 \uC0C1\uD0DC \uD655\uC778\n   * @returns \uCD08\uAE30\uD654 \uC0C1\uD0DC\n   */\n  public isInitialized(): boolean {\n    return this.initialized;\n  }\n  \n  /**\n   * \uD604\uC7AC \uC791\uC5C5 \uC124\uC815\n   * @param taskId \uC791\uC5C5 ID\n   */\n  public async setCurrentTask(taskId: string): Promise<void> {\n    this.checkInitialized();\n    \n    try {\n      \n      const task = await this.swdpDomainService.getTaskDetails(taskId);\n      \n      \n      this.currentTaskId = taskId;\n      \n      \n      await this.userAuthService.updateUserSettings({\n        currentTask: taskId\n      });\n      \n      console.log(`\uD604\uC7AC \uC791\uC5C5\uC774 \uC124\uC815\uB428: ${taskId} (${task.title})`);\n      \n      \n      this.addWorkflowLog(taskId, {\n        timestamp: new Date().toISOString(),\n        taskId,\n        actionType: 'task_selection',\n        description: `\uC791\uC5C5 \"${task.title}\" \uC120\uD0DD\uB428`,\n        status: 'success',\n        metadata: {\n          taskStatus: task.status\n        }\n      });\n    } catch (error) {\n      console.error(`\uD604\uC7AC \uC791\uC5C5 \uC124\uC815 \uC911 \uC624\uB958 \uBC1C\uC0DD (${taskId}):`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uD604\uC7AC \uC791\uC5C5 \uAC00\uC838\uC624\uAE30\n   * @returns \uD604\uC7AC \uC791\uC5C5 ID\n   */\n  public getCurrentTaskId(): string | undefined {\n    return this.currentTaskId;\n  }\n  \n  /**\n   * \uD604\uC7AC \uC791\uC5C5 \uC0C1\uC138 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\n   * @returns \uD604\uC7AC \uC791\uC5C5 \uC0C1\uC138 \uC815\uBCF4\n   */\n  public async getCurrentTask(): Promise<SwdpTask | undefined> {\n    this.checkInitialized();\n    \n    if (!this.currentTaskId) {\n      return undefined;\n    }\n    \n    try {\n      return await this.swdpDomainService.getTaskDetails(this.currentTaskId);\n    } catch (error) {\n      console.error(`\uD604\uC7AC \uC791\uC5C5 \uC870\uD68C \uC911 \uC624\uB958 \uBC1C\uC0DD (${this.currentTaskId}):`, error);\n      return undefined;\n    }\n  }\n  \n  /**\n   * Git \uCEE4\uBC0B\uACFC \uC791\uC5C5 \uC5F0\uACB0\n   * @param commitId Git \uCEE4\uBC0B ID\n   * @param taskId \uC791\uC5C5 ID (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uC791\uC5C5)\n   * @param message \uCEE4\uBC0B \uBA54\uC2DC\uC9C0\n   * @returns \uC5F0\uACB0 \uC131\uACF5 \uC5EC\uBD80\n   */\n  public async linkCommitToTask(commitId: string, taskId?: string, message?: string): Promise<boolean> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetTaskId = taskId || this.currentTaskId;\n      if (!targetTaskId) {\n        throw new Error('\uC791\uC5C5\uC774 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      const task = await this.swdpDomainService.getTaskDetails(targetTaskId);\n      \n      \n      \n      \n      this.addWorkflowLog(targetTaskId, {\n        timestamp: new Date().toISOString(),\n        taskId: targetTaskId,\n        actionType: 'git_commit_linked',\n        description: `Git \uCEE4\uBC0B \"${commitId.substring(0, 8)}\" \uC5F0\uACB0\uB428${message ? ': ' + message : ''}`,\n        status: 'success',\n        metadata: {\n          commitId,\n          commitMessage: message,\n          taskStatus: task.status\n        }\n      });\n      \n      \n      this.eventEmitter.emit(WorkflowEvent.TASK_LINKED, {\n        taskId: targetTaskId,\n        commitId,\n        message\n      });\n      \n      return true;\n    } catch (error) {\n      console.error(`Git \uCEE4\uBC0B \uC5F0\uACB0 \uC911 \uC624\uB958 \uBC1C\uC0DD (${commitId}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * Jira \uC774\uC288\uC640 \uC791\uC5C5 \uC5F0\uACB0\n   * @param issueKey Jira \uC774\uC288 \uD0A4\n   * @param taskId \uC791\uC5C5 ID (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uC791\uC5C5)\n   * @returns \uC5F0\uACB0 \uC131\uACF5 \uC5EC\uBD80\n   */\n  public async linkJiraIssueToTask(issueKey: string, taskId?: string): Promise<boolean> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetTaskId = taskId || this.currentTaskId;\n      if (!targetTaskId) {\n        throw new Error('\uC791\uC5C5\uC774 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      const task = await this.swdpDomainService.getTaskDetails(targetTaskId);\n      \n      \n      \n      \n      this.addWorkflowLog(targetTaskId, {\n        timestamp: new Date().toISOString(),\n        taskId: targetTaskId,\n        actionType: 'jira_issue_linked',\n        description: `Jira \uC774\uC288 \"${issueKey}\" \uC5F0\uACB0\uB428`,\n        status: 'success',\n        metadata: {\n          issueKey,\n          taskStatus: task.status\n        }\n      });\n      \n      \n      this.eventEmitter.emit(WorkflowEvent.TASK_LINKED, {\n        taskId: targetTaskId,\n        issueKey\n      });\n      \n      return true;\n    } catch (error) {\n      console.error(`Jira \uC774\uC288 \uC5F0\uACB0 \uC911 \uC624\uB958 \uBC1C\uC0DD (${issueKey}):`, error);\n      return false;\n    }\n  }\n  \n  /**\n   * \uC791\uC5C5 \uC0C1\uD0DC \uBCC0\uACBD\n   * @param taskId \uC791\uC5C5 ID (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uC791\uC5C5)\n   * @param status \uC0C8 \uC0C1\uD0DC\n   * @returns \uC5C5\uB370\uC774\uD2B8\uB41C \uC791\uC5C5\n   */\n  public async updateTaskStatus(taskId: string | undefined, status: string): Promise<SwdpTask> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetTaskId = taskId || this.currentTaskId;\n      if (!targetTaskId) {\n        throw new Error('\uC791\uC5C5\uC774 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      const updatedTask = await this.swdpDomainService.updateTaskStatus(targetTaskId, status);\n      \n      \n      this.addWorkflowLog(targetTaskId, {\n        timestamp: new Date().toISOString(),\n        taskId: targetTaskId,\n        actionType: 'task_status_changed',\n        description: `\uC791\uC5C5 \uC0C1\uD0DC\uAC00 \"${status}\"(\uC73C)\uB85C \uBCC0\uACBD\uB428`,\n        status: 'success',\n        metadata: {\n          newStatus: status,\n          oldStatus: updatedTask.status !== status ? updatedTask.status : undefined\n        }\n      });\n      \n      \n      this.eventEmitter.emit(WorkflowEvent.TASK_STATUS_CHANGED, {\n        taskId: targetTaskId,\n        status,\n        task: updatedTask\n      });\n      \n      return updatedTask;\n    } catch (error) {\n      console.error(`\uC791\uC5C5 \uC0C1\uD0DC \uBCC0\uACBD \uC911 \uC624\uB958 \uBC1C\uC0DD (${taskId}, ${status}):`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uC791\uC5C5 \uBCC0\uACBD \uCC98\uB9AC\n   * @param task \uBCC0\uACBD\uB41C \uC791\uC5C5\n   */\n  private handleTaskChanged(task: SwdpTask): void {\n    \n    if (this.currentTaskId === task.id) {\n      \n      this.eventEmitter.emit(WorkflowEvent.TASK_STATUS_CHANGED, {\n        taskId: task.id,\n        status: task.status,\n        task\n      });\n    }\n  }\n  \n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8 \uCD94\uAC00\n   * @param taskId \uC791\uC5C5 ID\n   * @param logItem \uB85C\uADF8 \uD56D\uBAA9\n   */\n  private addWorkflowLog(taskId: string, logItem: WorkflowLogItem): void {\n    if (!this.workflowLogs.has(taskId)) {\n      this.workflowLogs.set(taskId, []);\n    }\n    \n    const logs = this.workflowLogs.get(taskId)!;\n    logs.push(logItem);\n    \n    \n    this.saveWorkflowLogs(taskId);\n  }\n  \n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8 \uAC00\uC838\uC624\uAE30\n   * @param taskId \uC791\uC5C5 ID (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uC791\uC5C5)\n   * @returns \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8\n   */\n  public getWorkflowLogs(taskId?: string): WorkflowLogItem[] {\n    \n    const targetTaskId = taskId || this.currentTaskId;\n    if (!targetTaskId) {\n      return [];\n    }\n    \n    \n    if (this.workflowLogs.has(targetTaskId)) {\n      return [...this.workflowLogs.get(targetTaskId)!];\n    }\n    \n    \n    this.loadWorkflowLogs(targetTaskId);\n    \n    return this.workflowLogs.has(targetTaskId) ? \n      [...this.workflowLogs.get(targetTaskId)!] : \n      [];\n  }\n  \n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8 \uC800\uC7A5\n   * @param taskId \uC791\uC5C5 ID\n   */\n  private saveWorkflowLogs(taskId: string): void {\n    try {\n      \n      const logs = this.workflowLogs.get(taskId);\n      if (!logs) return;\n      \n      \n      const workflowLogsConfig = this.configService.getUserConfig()?.workflowLogs || {};\n      workflowLogsConfig[taskId] = logs;\n      \n      this.configService.updateUserConfig({\n        workflowLogs: workflowLogsConfig\n      });\n    } catch (error) {\n      console.warn(`\uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8 \uC800\uC7A5 \uC911 \uC624\uB958 \uBC1C\uC0DD (${taskId}):`, error);\n    }\n  }\n  \n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8 \uB85C\uB4DC\n   * @param taskId \uC791\uC5C5 ID\n   */\n  private loadWorkflowLogs(taskId: string): void {\n    try {\n      \n      const workflowLogsConfig = this.configService.getUserConfig()?.workflowLogs || {};\n      const logs = workflowLogsConfig[taskId] || [];\n      \n      \n      this.workflowLogs.set(taskId, logs);\n    } catch (error) {\n      console.warn(`\uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD (${taskId}):`, error);\n    }\n  }\n  \n  /**\n   * \uC791\uC5C5 \uC885\uB8CC\n   * @param taskId \uC791\uC5C5 ID (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uC791\uC5C5)\n   * @param status \uC885\uB8CC \uC0C1\uD0DC (\uAE30\uBCF8\uAC12: 'completed')\n   * @param comment \uC885\uB8CC \uCF54\uBA58\uD2B8\n   * @returns \uC131\uACF5 \uC5EC\uBD80\n   */\n  public async completeTask(taskId?: string, status: string = 'completed', comment?: string): Promise<boolean> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetTaskId = taskId || this.currentTaskId;\n      if (!targetTaskId) {\n        throw new Error('\uC791\uC5C5\uC774 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      await this.swdpDomainService.updateTaskStatus(targetTaskId, status);\n      \n      \n      this.addWorkflowLog(targetTaskId, {\n        timestamp: new Date().toISOString(),\n        taskId: targetTaskId,\n        actionType: 'task_completed',\n        description: `\uC791\uC5C5 \uC885\uB8CC: ${comment || '\uC791\uC5C5 \uC644\uB8CC'}`,\n        status: 'success',\n        metadata: {\n          finalStatus: status,\n          comment\n        }\n      });\n      \n      \n      if (targetTaskId === this.currentTaskId) {\n        this.currentTaskId = undefined;\n        \n        \n        await this.userAuthService.updateUserSettings({\n          currentTask: undefined\n        });\n      }\n      \n      \n      this.eventEmitter.emit(WorkflowEvent.WORKFLOW_COMPLETED, {\n        taskId: targetTaskId,\n        status,\n        comment\n      });\n      \n      return true;\n    } catch (error) {\n      console.error(`\uC791\uC5C5 \uC885\uB8CC \uC911 \uC624\uB958 \uBC1C\uC0DD (${taskId}):`, error);\n      \n      \n      this.eventEmitter.emit(WorkflowEvent.WORKFLOW_FAILED, {\n        taskId,\n        error\n      });\n      \n      return false;\n    }\n  }\n  \n  /**\n   * \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC2DC\uC791\n   * @param taskId \uC791\uC5C5 ID (\uC0DD\uB7B5 \uC2DC \uD604\uC7AC \uC791\uC5C5)\n   * @param workflowType \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC720\uD615\n   * @param params \uCD94\uAC00 \uD30C\uB77C\uBBF8\uD130\n   * @returns \uC131\uACF5 \uC5EC\uBD80\n   */\n  public async startWorkflow(taskId?: string, workflowType: string = 'default', params?: Record<string, any>): Promise<boolean> {\n    this.checkInitialized();\n    \n    try {\n      \n      const targetTaskId = taskId || this.currentTaskId;\n      if (!targetTaskId) {\n        throw new Error('\uC791\uC5C5\uC774 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4');\n      }\n      \n      \n      const task = await this.swdpDomainService.getTaskDetails(targetTaskId);\n      \n      \n      this.addWorkflowLog(targetTaskId, {\n        timestamp: new Date().toISOString(),\n        taskId: targetTaskId,\n        actionType: 'workflow_started',\n        description: `\uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC2DC\uC791: ${workflowType}`,\n        status: 'success',\n        metadata: {\n          workflowType,\n          taskStatus: task.status,\n          params\n        }\n      });\n      \n      \n      this.eventEmitter.emit(WorkflowEvent.WORKFLOW_STARTED, {\n        taskId: targetTaskId,\n        workflowType,\n        params,\n        task\n      });\n      \n      return true;\n    } catch (error) {\n      console.error(`\uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC2DC\uC791 \uC911 \uC624\uB958 \uBC1C\uC0DD (${taskId}, ${workflowType}):`, error);\n      \n      \n      this.eventEmitter.emit(WorkflowEvent.WORKFLOW_FAILED, {\n        taskId,\n        workflowType,\n        error\n      });\n      \n      return false;\n    }\n  }\n}", "/**\n * \uD50C\uB7EC\uADF8\uC778 \uC790\uC5F0\uC5B4 \uCC98\uB9AC \uC11C\uBE44\uC2A4\n * \n * \uC790\uC5F0\uC5B4 \uBA85\uB839\uC744 \uD2B9\uC815 \uD50C\uB7EC\uADF8\uC778 \uBA85\uB839\uC5B4\uB85C \uBCC0\uD658\uD558\uB294 \uC11C\uBE44\uC2A4\n * \uBAA8\uB4E0 \uD50C\uB7EC\uADF8\uC778\uC5D0\uC11C \uACF5\uD1B5\uC73C\uB85C \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 \uC790\uC5F0\uC5B4 \uCC98\uB9AC \uAE30\uB2A5 \uC81C\uACF5\n */\n\nimport { LlmService } from '../../llm';\nimport { LoggerService, ILoggerService } from '../../utils/LoggerService';\nimport { PluginCommand } from '../../../types/PluginTypes';\n\n/**\n * \uBA85\uB839\uC5B4 \uBCC0\uD658 \uACB0\uACFC \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface CommandConversion {\n  command: string;    \n  args: string[];     \n  confidence: number; \n  explanation: string; \n  alternatives?: Array<{  \n    command: string;\n    args: string[];\n    confidence: number;\n  }>;\n}\n\n/**\n * \uBA85\uB839\uC5B4 \uD328\uD134 \uC815\uC758 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface CommandPattern {\n  command: string;     \n  patterns: string[];  \n  extractArgs?: (input: string) => string[];  \n}\n\n/**\n * \uD50C\uB7EC\uADF8\uC778 \uC790\uC5F0\uC5B4 \uCC98\uB9AC \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n */\nexport class PluginNaturalLanguageService {\n  private llmService: LlmService;\n  private logger: ILoggerService;\n  private pluginId: string;\n  private commandPatterns: CommandPattern[];\n  private availableCommands: PluginCommand[];\n  \n  /**\n   * PluginNaturalLanguageService \uC0DD\uC131\uC790\n   * @param llmService LLM \uC11C\uBE44\uC2A4\n   * @param logger \uB85C\uAC70 \uC11C\uBE44\uC2A4\n   * @param pluginId \uD50C\uB7EC\uADF8\uC778 ID\n   * @param commandPatterns \uBA85\uB839\uC5B4 \uD328\uD134 \uB9F5\n   * @param availableCommands \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uBA85\uB839\uC5B4 \uBAA9\uB85D\n   */\n  constructor(\n    llmService: LlmService,\n    logger: ILoggerService,\n    pluginId: string,\n    commandPatterns: CommandPattern[],\n    availableCommands: PluginCommand[]\n  ) {\n    this.llmService = llmService;\n    this.logger = logger;\n    this.pluginId = pluginId;\n    this.commandPatterns = commandPatterns;\n    this.availableCommands = availableCommands;\n  }\n  \n  /**\n   * \uC790\uC5F0\uC5B4 \uBA85\uB839\uC744 \uD50C\uB7EC\uADF8\uC778 \uBA85\uB839\uC5B4\uB85C \uBCC0\uD658\n   * @param naturalCommand \uC790\uC5F0\uC5B4 \uBA85\uB839\n   * @returns \uBCC0\uD658\uB41C \uBA85\uB839\uC5B4 \uC815\uBCF4\n   */\n  async convertNaturalCommand(naturalCommand: string): Promise<CommandConversion> {\n    try {\n      this.logger.info(`\uC790\uC5F0\uC5B4 ${this.pluginId} \uBA85\uB839 \uBCC0\uD658 \uC2DC\uC791: \"${naturalCommand}\"`);\n      \n      \n      const heuristicMatch = this.heuristicCommandMatch(naturalCommand);\n      \n      if (heuristicMatch && heuristicMatch.confidence > 0.8) {\n        this.logger.info(`\uD734\uB9AC\uC2A4\uD2F1 \uB9E4\uCE6D \uACB0\uACFC: ${heuristicMatch.command} (\uC2E0\uB8B0\uB3C4: ${heuristicMatch.confidence})`);\n        return heuristicMatch;\n      }\n      \n      \n      return await this.llmCommandMatch(naturalCommand, heuristicMatch);\n    } catch (error) {\n      this.logger.error(`\uC790\uC5F0\uC5B4 \uBA85\uB839 \uBCC0\uD658 \uC911 \uC624\uB958 \uBC1C\uC0DD: ${error}`);\n      \n      \n      const defaultCommand = this.getDefaultCommand();\n      return {\n        command: defaultCommand,\n        args: [],\n        confidence: 0.5,\n        explanation: `\uBA85\uB839\uC5B4 \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD558\uC5EC \uAE30\uBCF8 ${defaultCommand} \uBA85\uB839\uC73C\uB85C \uCC98\uB9AC\uD569\uB2C8\uB2E4.`\n      };\n    }\n  }\n  \n  /**\n   * \uD734\uB9AC\uC2A4\uD2F1 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uB9E4\uCE6D\n   * @param naturalCommand \uC790\uC5F0\uC5B4 \uBA85\uB839\n   * @returns \uB9E4\uCE6D\uB41C \uBA85\uB839\uC5B4 \uC815\uBCF4\n   */\n  private heuristicCommandMatch(naturalCommand: string): CommandConversion | null {\n    const normalizedInput = naturalCommand.toLowerCase().trim();\n    \n    \n    let bestMatch = {\n      command: '',\n      score: 0,\n      args: [] as string[],\n      patternIndex: -1\n    };\n    \n    this.commandPatterns.forEach((cmdPattern, index) => {\n      for (const pattern of cmdPattern.patterns) {\n        if (normalizedInput.includes(pattern)) {\n          const score = pattern.length / normalizedInput.length;\n          \n          if (score > bestMatch.score) {\n            bestMatch = {\n              command: cmdPattern.command,\n              score,\n              args: cmdPattern.extractArgs ? cmdPattern.extractArgs(normalizedInput) : [],\n              patternIndex: index\n            };\n          }\n        }\n      }\n    });\n    \n    if (bestMatch.command) {\n      return {\n        command: bestMatch.command,\n        args: bestMatch.args,\n        confidence: bestMatch.score * 0.8, \n        explanation: `\uC790\uC5F0\uC5B4 \uBA85\uB839 \"${naturalCommand}\"\uC744(\uB97C) @${this.pluginId}:${bestMatch.command} \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\uD588\uC2B5\uB2C8\uB2E4.`\n      };\n    }\n    \n    return null;\n  }\n  \n  /**\n   * LLM \uAE30\uBC18 \uBA85\uB839\uC5B4 \uB9E4\uCE6D\n   * @param naturalCommand \uC790\uC5F0\uC5B4 \uBA85\uB839\n   * @param heuristicMatch \uD734\uB9AC\uC2A4\uD2F1 \uB9E4\uCE6D \uACB0\uACFC\n   * @returns \uB9E4\uCE6D\uB41C \uBA85\uB839\uC5B4 \uC815\uBCF4\n   */\n  private async llmCommandMatch(\n    naturalCommand: string, \n    heuristicMatch: CommandConversion | null\n  ): Promise<CommandConversion> {\n    \n    const commandDescriptions = this.availableCommands\n      .filter(cmd => cmd.id !== '') \n      .map(cmd => `- ${cmd.id}: ${cmd.description} (\uC0AC\uC6A9\uBC95: ${cmd.syntax})`)\n      .join('\\n');\n    \n    \n    let pluginSpecificInstructions = '';\n    \n    switch (this.pluginId) {\n      case 'git':\n        pluginSpecificInstructions = `\n## Git \uBA85\uB839\uC5B4 \uBCC0\uD658 \uAC00\uC774\uB4DC\uB77C\uC778:\n- 'commit', '\uCEE4\uBC0B', '\uBCC0\uACBD\uC0AC\uD56D \uC800\uC7A5' \uB4F1\uC758 \uD45C\uD604\uC740 'commit' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC0C1\uD0DC', '\uBCC0\uACBD\uC0AC\uD56D', '\uBB50\uAC00 \uBC14\uB00C\uC5C8\uB294\uC9C0' \uB4F1\uC740 'status' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uBE0C\uB79C\uCE58 \uC0DD\uC131', '\uC0C8 \uBE0C\uB79C\uCE58' \uB4F1\uC740 'branch' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- 'pull request', 'PR', '\uD480\uB9AC\uD018' \uB4F1\uC740 'pr' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC800\uC7A5\uC18C \uBCF5\uC81C', '\uD074\uB860' \uB4F1\uC740 'clone' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC790\uB3D9 \uCEE4\uBC0B'\uC740 'auto-commit' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658 (\uD2B9\uD788 \uC88B\uC740 \uCEE4\uBC0B \uBA54\uC2DC\uC9C0\uB97C \uC694\uCCAD\uD558\uB294 \uACBD\uC6B0)\n- 'diff', '\uCC28\uC774', '\uBE44\uAD50' \uB4F1\uC740 'diff' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n\n## \uC6B0\uC120\uC21C\uC704:\n1. \uBA85\uB839\uC5B4 \uC758\uB3C4\uAC00 \uBA85\uD655\uD55C \uACBD\uC6B0 \uD574\uB2F9 \uBA85\uB839\uC5B4\uB85C \uBCC0\uD658\n2. 'auto-commit'\uC740 \uBA85\uD655\uD55C \uCEE4\uBC0B \uC791\uC5C5\uC774 \uD544\uC694\uD560 \uB54C\uB9CC \uC0AC\uC6A9\n3. \uB2E8\uC21C \uC870\uD68C\uB098 \uC0C1\uD0DC \uD655\uC778\uC740 'status' \uBA85\uB839 \uC6B0\uC120 \uACE0\uB824\n`;\n        break;\n        \n      case 'jira':\n        pluginSpecificInstructions = `\n## Jira \uBA85\uB839\uC5B4 \uBCC0\uD658 \uAC00\uC774\uB4DC\uB77C\uC778:\n- '\uC774\uC288 \uC0DD\uC131', '\uD2F0\uCF13 \uB9CC\uB4E4\uAE30', '\uC0C8 \uC791\uC5C5' \uB4F1\uC740 'create' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC774\uC288 \uC870\uD68C', '\uD2F0\uCF13 \uBCF4\uAE30', '\uC774\uC288 \uD655\uC778' \uB4F1\uC740 'issue' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC774\uC288 \uBAA9\uB85D', '\uD2F0\uCF13 \uBAA9\uB85D', '\uC791\uC5C5 \uB9AC\uC2A4\uD2B8' \uB4F1\uC740 'list' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC774\uC288 \uD560\uB2F9', '\uB2F4\uB2F9\uC790 \uBCC0\uACBD' \uB4F1\uC740 'assign' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC774\uC288 \uC0C1\uD0DC \uBCC0\uACBD', '\uC9C4\uD589\uC911\uC73C\uB85C \uBCC0\uACBD' \uB4F1\uC740 'transition' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC774\uC288 \uB313\uAE00', '\uCF54\uBA58\uD2B8 \uCD94\uAC00' \uB4F1\uC740 'comment' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC774\uC288 \uC218\uC815', '\uD2F0\uCF13 \uC5C5\uB370\uC774\uD2B8' \uB4F1\uC740 'update' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n\n## \uC6B0\uC120\uC21C\uC704:\n1. \uD2B9\uC815 \uC774\uC288 \uD0A4(\uC608: PROJ-123)\uAC00 \uC5B8\uAE09\uB41C \uACBD\uC6B0 \uD574\uB2F9 \uC774\uC288\uC5D0 \uB300\uD55C \uC791\uC5C5\uC73C\uB85C \uD310\uB2E8\n2. \uC774\uC288 \uC870\uD68C \uAD00\uB828 \uBA85\uB839\uC774 \uC6B0\uC120 (issue, list \uB4F1)\n3. \uC774\uC288 \uC0DD\uC131 \uBC0F \uC218\uC815 \uAD00\uB828 \uBA85\uB839 (create, update \uB4F1)\n`;\n        break;\n        \n      case 'swdp':\n        pluginSpecificInstructions = `\n## SWDP \uBA85\uB839\uC5B4 \uBCC0\uD658 \uAC00\uC774\uB4DC\uB77C\uC778:\n- '\uBE4C\uB4DC', '\uCEF4\uD30C\uC77C', '\uB85C\uCEEC \uBE4C\uB4DC' \uB4F1\uC740 'build' \uB610\uB294 'build:local' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uBC30\uD3EC', '\uB9B4\uB9AC\uC988', '\uC5C5\uB85C\uB4DC' \uB4F1\uC740 'deploy' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uBE4C\uB4DC \uC0C1\uD0DC', '\uBE4C\uB4DC \uACB0\uACFC', '\uC9C4\uD589 \uC0C1\uD669' \uB4F1\uC740 'status' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uD14C\uC2A4\uD2B8 \uC694\uCCAD', 'TR \uC0DD\uC131', '\uD14C\uC2A4\uD2B8 \uC0DD\uC131' \uB4F1\uC740 'test-request' \uB610\uB294 'tr' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uB808\uC774\uC5B4 \uBE4C\uB4DC', '\uACC4\uCE35 \uBE4C\uB4DC' \uB4F1\uC740 'build:layer' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uC124\uC815', '\uD658\uACBD \uC124\uC815' \uB4F1\uC740 'config' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n\n## \uC6B0\uC120\uC21C\uC704:\n1. \uBE4C\uB4DC/\uBC30\uD3EC \uAD00\uB828 \uC791\uC5C5 \uBA85\uB839 \uC6B0\uC120 (build, deploy \uB4F1)\n2. \uC0C1\uD0DC \uD655\uC778 \uAD00\uB828 \uBA85\uB839 (status)\n3. \uD14C\uC2A4\uD2B8 \uAD00\uB828 \uBA85\uB839 (test-request \uB4F1)\n`;\n        break;\n        \n      case 'pocket':\n        pluginSpecificInstructions = `\n## Pocket \uBA85\uB839\uC5B4 \uBCC0\uD658 \uAC00\uC774\uB4DC\uB77C\uC778:\n- '\uD30C\uC77C \uBAA9\uB85D', '\uB514\uB809\uD1A0\uB9AC \uB0B4\uC6A9', '\uD3F4\uB354 \uBCF4\uAE30' \uB4F1\uC740 'ls' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uD30C\uC77C \uC815\uBCF4', '\uBA54\uD0C0\uB370\uC774\uD130', '\uC18D\uC131' \uB4F1\uC740 'info' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uD30C\uC77C \uB0B4\uC6A9', '\uD30C\uC77C \uC5F4\uAE30', '\uB0B4\uC6A9 \uBCF4\uAE30' \uB4F1\uC740 'load' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uD30C\uC77C \uC694\uC57D', '\uB0B4\uC6A9 \uC694\uC57D', '\uC694\uC57D\uD574\uC918' \uB4F1\uC740 'summarize' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uB514\uB809\uD1A0\uB9AC \uAD6C\uC870', '\uD3F4\uB354 \uD2B8\uB9AC', '\uD2B8\uB9AC \uBCF4\uAE30' \uB4F1\uC740 'tree' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uD30C\uC77C \uAC80\uC0C9', '\uC774\uB984\uC73C\uB85C \uAC80\uC0C9', '\uCC3E\uAE30' \uB4F1\uC740 'search' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uB0B4\uC6A9 \uAC80\uC0C9', '\uD14D\uC2A4\uD2B8 \uAC80\uC0C9', '\uD328\uD134 \uAC80\uC0C9' \uB4F1\uC740 'grep' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n- '\uBC84\uD0B7 \uC815\uBCF4', '\uC2A4\uD1A0\uB9AC\uC9C0 \uC815\uBCF4' \uB4F1\uC740 'bucket' \uBA85\uB839\uC73C\uB85C \uBCC0\uD658\n\n## \uC6B0\uC120\uC21C\uC704:\n1. \uD2B9\uC815 \uD30C\uC77C \uACBD\uB85C\uAC00 \uC5B8\uAE09\uB41C \uACBD\uC6B0 \uD574\uB2F9 \uD30C\uC77C\uC5D0 \uB300\uD55C \uC791\uC5C5\uC73C\uB85C \uD310\uB2E8\n2. \uBAA9\uB85D/\uAD6C\uC870 \uC870\uD68C \uAD00\uB828 \uBA85\uB839\uC774 \uC6B0\uC120 (ls, tree \uB4F1)\n3. \uD30C\uC77C \uB0B4\uC6A9 \uAD00\uB828 \uBA85\uB839 (load, summarize \uB4F1)\n4. \uAC80\uC0C9 \uAD00\uB828 \uBA85\uB839 (search, grep \uB4F1)\n\n## \uC778\uC790 \uCD94\uCD9C \uAC00\uC774\uB4DC:\n- \uB530\uC634\uD45C(\", ')\uB85C \uAC10\uC2F8\uC9C4 \uD14D\uC2A4\uD2B8\uB294 \uAC80\uC0C9\uC5B4\uB098 \uACBD\uB85C\uB85C \uCD94\uCD9C\n- \uD30C\uC77C \uACBD\uB85C\uB294 \uC77C\uBC18\uC801\uC73C\uB85C \uD655\uC7A5\uC790(.txt, .json \uB4F1)\uAC00 \uD3EC\uD568\uB41C \uD615\uD0DC\n- \uB514\uB809\uD1A0\uB9AC \uACBD\uB85C\uB294 \uC77C\uBC18\uC801\uC73C\uB85C \uC2AC\uB798\uC2DC(/)\uB85C \uB05D\uB098\uB294 \uD615\uD0DC\n`;\n        break;\n        \n      default:\n        \n        break;\n    }\n    \n    const prompt = `\n\uB2F9\uC2E0\uC740 ${this.pluginId} \uBA85\uB839\uC5B4 \uBCC0\uD658 \uC804\uBB38\uAC00\uC785\uB2C8\uB2E4. \uC0AC\uC6A9\uC790\uC758 \uC790\uC5F0\uC5B4 \uBA85\uB839\uC744 \uC801\uC808\uD55C ${this.pluginId} \uBA85\uB839\uC5B4\uB85C \uBCC0\uD658\uD574\uC8FC\uC138\uC694.\n\n## \uC0AC\uC6A9 \uAC00\uB2A5\uD55C ${this.pluginId} \uBA85\uB839\uC5B4:\n${commandDescriptions}\n\n${pluginSpecificInstructions}\n\n## \uC0AC\uC6A9\uC790 \uC785\uB825:\n\"${naturalCommand}\"\n\n${heuristicMatch ? `\n## \uD734\uB9AC\uC2A4\uD2F1 \uBD84\uC11D \uACB0\uACFC:\n- \uBA85\uB839\uC5B4: ${heuristicMatch.command}\n- \uC778\uC790: ${JSON.stringify(heuristicMatch.args)}\n- \uC2E0\uB8B0\uB3C4: ${heuristicMatch.confidence}\n` : ''}\n\n## \uCD9C\uB825 \uD615\uC2DD:\nJSON \uD615\uC2DD\uC73C\uB85C \uB2E4\uC74C \uD544\uB4DC\uB97C \uD3EC\uD568\uD574 \uC751\uB2F5\uD574\uC8FC\uC138\uC694:\n{\n  \"command\": \"\uC801\uC808\uD55C ${this.pluginId} \uBA85\uB839\uC5B4\",\n  \"args\": [\"\uBA85\uB839\uC5B4 \uC778\uC790\uB4E4\uC758 \uBC30\uC5F4\"],\n  \"confidence\": 0.1~1.0 \uC0AC\uC774\uC758 \uC2E0\uB8B0\uB3C4 \uAC12,\n  \"explanation\": \"\uBCC0\uD658 \uC774\uC720\uC5D0 \uB300\uD55C \uAC04\uB2E8\uD55C \uC124\uBA85\",\n  \"alternatives\": [\n    {\n      \"command\": \"\uB300\uC548 ${this.pluginId} \uBA85\uB839\uC5B4\",\n      \"args\": [\"\uBA85\uB839\uC5B4 \uC778\uC790\uB4E4\uC758 \uBC30\uC5F4\"],\n      \"confidence\": 0.1~1.0 \uC0AC\uC774\uC758 \uC2E0\uB8B0\uB3C4 \uAC12\n    }\n  ]\n}\n\n\uBA85\uB839\uC5B4 \uBD84\uC11D \uACB0\uACFC\uB9CC JSON \uD615\uC2DD\uC73C\uB85C \uBC18\uD658\uD574\uC8FC\uC138\uC694. \uB2E4\uB978 \uC124\uBA85\uC774\uB098 \uB0B4\uC6A9\uC740 \uD3EC\uD568\uD558\uC9C0 \uB9C8\uC138\uC694.\n`;\n\n    try {\n      \n      const response = await this.llmService.sendRequest({\n        model: this.llmService.getDefaultModelId(),\n        messages: [\n          {\n            role: 'system',\n            content: '\uB2F9\uC2E0\uC740 \uBA85\uB839\uC5B4 \uBCC0\uD658 \uC804\uBB38\uAC00\uC785\uB2C8\uB2E4. JSON \uD615\uC2DD\uC73C\uB85C \uC751\uB2F5\uD574\uC8FC\uC138\uC694.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        temperature: 0.3\n      }).then(result => result.content);\n      \n      \n      const jsonMatch = response.match(/```json\\s*([\\s\\S]*?)\\s*```|{[\\s\\S]*}/);\n      \n      if (!jsonMatch) {\n        throw new Error('LLM \uC751\uB2F5\uC5D0\uC11C JSON\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4');\n      }\n      \n      const jsonStr = jsonMatch[1] || jsonMatch[0];\n      const result = JSON.parse(jsonStr) as CommandConversion;\n      \n      this.logger.info(`LLM \uBA85\uB839\uC5B4 \uBCC0\uD658 \uACB0\uACFC: ${result.command}`);\n      return result;\n    } catch (error) {\n      this.logger.error(`LLM \uBA85\uB839\uC5B4 \uBCC0\uD658 \uC911 \uC624\uB958 \uBC1C\uC0DD: ${error}`);\n      \n      \n      if (heuristicMatch) {\n        return heuristicMatch;\n      }\n      \n      const defaultCommand = this.getDefaultCommand();\n      return {\n        command: defaultCommand,\n        args: [],\n        confidence: 0.3,\n        explanation: 'LLM \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD558\uC5EC \uAE30\uBCF8 \uBA85\uB839\uC73C\uB85C \uCC98\uB9AC\uD569\uB2C8\uB2E4.'\n      };\n    }\n  }\n  \n  /**\n   * \uAE30\uBCF8 \uBA85\uB839\uC5B4 \uAC00\uC838\uC624\uAE30 (\uC624\uB958 \uC0C1\uD669\uC5D0\uC11C \uC0AC\uC6A9)\n   * @returns \uAE30\uBCF8 \uBA85\uB839\uC5B4\n   */\n  private getDefaultCommand(): string {\n    \n    switch (this.pluginId) {\n      case 'git':\n        return 'status';\n      case 'jira':\n        return 'list';\n      case 'swdp':\n        return 'status';\n      case 'pocket':\n        return 'ls';\n      default:\n        return 'help';\n    }\n  }\n  \n  /**\n   * \uC790\uC5F0\uC5B4 \uBA85\uB839\uC5B4 \uCC98\uB9AC \uC720\uD2F8\uB9AC\uD2F0 \uBA54\uC11C\uB4DC \uC81C\uACF5\n   */\n  \n  /**\n   * \uCEE4\uBC0B \uBA54\uC2DC\uC9C0 \uCD94\uCD9C \uC720\uD2F8\uB9AC\uD2F0\n   * @param input \uC790\uC5F0\uC5B4 \uC785\uB825\n   * @returns \uCD94\uCD9C\uB41C \uCEE4\uBC0B \uBA54\uC2DC\uC9C0\n   */\n  static extractCommitMessage(input: string): string | null {\n    const messageMatch = input.match(/[\"'](.+?)[\"']|\uBA54\uC2DC\uC9C0\\s*[:\\s]\\s*(.+?)(?:\\s|$)/i);\n    if (messageMatch) {\n      return messageMatch[1] || messageMatch[2];\n    }\n    return null;\n  }\n  \n  /**\n   * \uD30C\uC77C \uACBD\uB85C \uCD94\uCD9C \uC720\uD2F8\uB9AC\uD2F0\n   * @param input \uC790\uC5F0\uC5B4 \uC785\uB825\n   * @returns \uCD94\uCD9C\uB41C \uD30C\uC77C \uACBD\uB85C \uBAA9\uB85D\n   */\n  static extractFilePaths(input: string): string[] {\n    const fileMatch = input.match(/([./\\\\a-zA-Z0-9_-]+\\.[a-zA-Z0-9]+)/g);\n    return fileMatch || [];\n  }\n  \n  /**\n   * \uC774\uC288 ID \uCD94\uCD9C \uC720\uD2F8\uB9AC\uD2F0\n   * @param input \uC790\uC5F0\uC5B4 \uC785\uB825\n   * @returns \uCD94\uCD9C\uB41C \uC774\uC288 ID\n   */\n  static extractIssueId(input: string): string | null {\n    const issueMatch = input.match(/([A-Z]+-\\d+)/);\n    return issueMatch ? issueMatch[1] : null;\n  }\n  \n  /**\n   * \uC22B\uC790 \uCD94\uCD9C \uC720\uD2F8\uB9AC\uD2F0\n   * @param input \uC790\uC5F0\uC5B4 \uC785\uB825\n   * @returns \uCD94\uCD9C\uB41C \uC22B\uC790\n   */\n  static extractNumber(input: string): number | null {\n    const numberMatch = input.match(/(\\d+)/);\n    return numberMatch ? parseInt(numberMatch[1], 10) : null;\n  }\n}", "/**\n * SWDP \uC790\uC5F0\uC5B4 \uC11C\uBE44\uC2A4\n * \n * SWDP \uAD00\uB828 \uC790\uC5F0\uC5B4 \uCC98\uB9AC \uBC0F \uBA85\uB839\uC5B4 \uBCC0\uD658 \uAE30\uB2A5 \uC81C\uACF5\n * \uC0AC\uC6A9\uC790\uC758 \uC9C8\uBB38\uC744 SWDP \uBA85\uB839\uC5B4\uB85C \uBCC0\uD658\n */\n\nimport { PluginNaturalLanguageService } from '../../../core/plugin-system/llm/PluginNaturalLanguageService';\nimport { SwdpDomainService } from '../../../core/domain/SwdpDomainService';\nimport { SwdpWorkflowService } from '../../../core/workflow/SwdpWorkflowService';\nimport { ConfigService } from '../../../core/config/ConfigService';\nimport { UserAuthService } from '../../../core/auth/UserAuthService';\n\n/**\n * SWDP \uC790\uC5F0\uC5B4 \uCC98\uB9AC \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n */\nexport class SwdpNaturalLanguageService extends PluginNaturalLanguageService {\n  /**\n   * SWDP \uB3C4\uBA54\uC778 \uC11C\uBE44\uC2A4\n   */\n  private readonly swdpDomainService: SwdpDomainService;\n  \n  /**\n   * SWDP \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC11C\uBE44\uC2A4\n   */\n  private readonly swdpWorkflowService: SwdpWorkflowService;\n  \n  /**\n   * \uC124\uC815 \uC11C\uBE44\uC2A4\n   */\n  private readonly configService: ConfigService;\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uC778\uC99D \uC11C\uBE44\uC2A4\n   */\n  private readonly userAuthService: UserAuthService;\n  \n  /**\n   * SWDP \uC790\uC5F0\uC5B4 \uCC98\uB9AC \uC11C\uBE44\uC2A4 \uC0DD\uC131\uC790\n   * @param swdpDomainService SWDP \uB3C4\uBA54\uC778 \uC11C\uBE44\uC2A4 (\uC120\uD0DD\uC801)\n   * @param swdpWorkflowService SWDP \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uC11C\uBE44\uC2A4 (\uC120\uD0DD\uC801)\n   * @param configService \uC124\uC815 \uC11C\uBE44\uC2A4 (\uC120\uD0DD\uC801)\n   * @param userAuthService \uC0AC\uC6A9\uC790 \uC778\uC99D \uC11C\uBE44\uC2A4 (\uC120\uD0DD\uC801)\n   */\n  constructor(\n    swdpDomainService?: SwdpDomainService,\n    swdpWorkflowService?: SwdpWorkflowService,\n    configService?: ConfigService,\n    userAuthService?: UserAuthService\n  ) {\n    super('swdp');\n    \n    // \uC8FC\uC785\uB418\uC9C0 \uC54A\uC740 \uACBD\uC6B0 \uC2F1\uAE00\uD1A4 \uC778\uC2A4\uD134\uC2A4 \uC0AC\uC6A9 (\uB808\uAC70\uC2DC \uD638\uD658\uC131)\n    this.swdpDomainService = swdpDomainService || SwdpDomainService.getInstance();\n    this.swdpWorkflowService = swdpWorkflowService || SwdpWorkflowService.getInstance();\n    this.configService = configService || ConfigService.getInstance();\n    this.userAuthService = userAuthService || UserAuthService.getInstance();\n  }\n  \n  /**\n   * \uC790\uC5F0\uC5B4 \uC9C8\uBB38\uC744 SWDP \uBA85\uB839\uC5B4\uB85C \uBCC0\uD658\n   * @param question \uC0AC\uC6A9\uC790 \uC9C8\uBB38\n   * @returns SWDP \uBA85\uB839\uC5B4 \uB610\uB294 null (\uCC98\uB9AC\uD560 \uC218 \uC5C6\uB294 \uACBD\uC6B0)\n   */\n  public async processNaturalLanguage(question: string): Promise<string | null> {\n    \n    const normalizedQuestion = question.trim().toLowerCase();\n    \n    \n    if (this.isProjectRelatedQuestion(normalizedQuestion)) {\n      return this.processProjectQuestion(normalizedQuestion);\n    }\n    \n    \n    if (this.isTaskRelatedQuestion(normalizedQuestion)) {\n      return this.processTaskQuestion(normalizedQuestion);\n    }\n    \n    \n    if (this.isBuildRelatedQuestion(normalizedQuestion)) {\n      return this.processBuildQuestion(normalizedQuestion);\n    }\n    \n    \n    if (this.isDocumentRelatedQuestion(normalizedQuestion)) {\n      return this.processDocumentQuestion(normalizedQuestion);\n    }\n    \n    \n    return null;\n  }\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uAD00\uB828 \uC9C8\uBB38\uC778\uC9C0 \uD655\uC778\n   * @param question \uC9C8\uBB38\n   * @returns \uD504\uB85C\uC81D\uD2B8 \uAD00\uB828 \uC5EC\uBD80\n   */\n  private isProjectRelatedQuestion(question: string): boolean {\n    const projectKeywords = [\n      '\uD504\uB85C\uC81D\uD2B8', '\uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D', '\uD504\uB85C\uC81D\uD2B8 \uB9AC\uC2A4\uD2B8', '\uD504\uB85C\uC81D\uD2B8 \uC815\uBCF4',\n      'project', 'projects', 'project list', 'project info'\n    ];\n    \n    return projectKeywords.some(keyword => question.includes(keyword));\n  }\n  \n  /**\n   * \uC791\uC5C5 \uAD00\uB828 \uC9C8\uBB38\uC778\uC9C0 \uD655\uC778\n   * @param question \uC9C8\uBB38\n   * @returns \uC791\uC5C5 \uAD00\uB828 \uC5EC\uBD80\n   */\n  private isTaskRelatedQuestion(question: string): boolean {\n    const taskKeywords = [\n      '\uC791\uC5C5', '\uC791\uC5C5 \uBAA9\uB85D', '\uC791\uC5C5 \uB9AC\uC2A4\uD2B8', '\uC791\uC5C5 \uC815\uBCF4', '\uD0DC\uC2A4\uD06C',\n      'task', 'tasks', 'task list', 'task info'\n    ];\n    \n    return taskKeywords.some(keyword => question.includes(keyword));\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uAD00\uB828 \uC9C8\uBB38\uC778\uC9C0 \uD655\uC778\n   * @param question \uC9C8\uBB38\n   * @returns \uBE4C\uB4DC \uAD00\uB828 \uC5EC\uBD80\n   */\n  private isBuildRelatedQuestion(question: string): boolean {\n    const buildKeywords = [\n      '\uBE4C\uB4DC', '\uBE4C\uB4DC \uC2DC\uC791', '\uBE4C\uB4DC \uC0C1\uD0DC', '\uBE4C\uB4DC \uB85C\uADF8', '\uBE4C\uB4DC \uCDE8\uC18C',\n      'build', 'build start', 'build status', 'build log', 'build cancel'\n    ];\n    \n    return buildKeywords.some(keyword => question.includes(keyword));\n  }\n  \n  /**\n   * \uBB38\uC11C \uAD00\uB828 \uC9C8\uBB38\uC778\uC9C0 \uD655\uC778\n   * @param question \uC9C8\uBB38\n   * @returns \uBB38\uC11C \uAD00\uB828 \uC5EC\uBD80\n   */\n  private isDocumentRelatedQuestion(question: string): boolean {\n    const documentKeywords = [\n      '\uBB38\uC11C', '\uBB38\uC11C \uBAA9\uB85D', '\uBB38\uC11C \uB9AC\uC2A4\uD2B8', '\uBB38\uC11C \uC815\uBCF4', '\uB3C4\uD050\uBA3C\uD2B8',\n      'document', 'documents', 'document list', 'document info'\n    ];\n    \n    return documentKeywords.some(keyword => question.includes(keyword));\n  }\n  \n  /**\n   * \uD504\uB85C\uC81D\uD2B8 \uAD00\uB828 \uC9C8\uBB38 \uCC98\uB9AC\n   * @param question \uC9C8\uBB38\n   * @returns SWDP \uBA85\uB839\uC5B4\n   */\n  private processProjectQuestion(question: string): string {\n    \n    if (question.includes('\uBAA9\uB85D') || question.includes('\uB9AC\uC2A4\uD2B8') || \n        question.includes('list') || question.match(/\uD504\uB85C\uC81D\uD2B8(\\s+)?$/) || \n        question.match(/projects?(\\s+)?$/)) {\n      return '@swdp:projects';\n    }\n    \n    \n    const projectCodeMatch = question.match(/\uD504\uB85C\uC81D\uD2B8\\s+\uC815\uBCF4\\s+(\\w+)/) || \n                             question.match(/\uD504\uB85C\uC81D\uD2B8\\s+(\\w+)/) || \n                             question.match(/project\\s+info\\s+(\\w+)/) || \n                             question.match(/project\\s+(\\w+)/);\n    \n    if (projectCodeMatch) {\n      return `@swdp:project ${projectCodeMatch[1]}`;\n    }\n    \n    \n    const setProjectMatch = question.match(/\uD504\uB85C\uC81D\uD2B8\\s+\uC124\uC815\\s+(\\w+)/) || \n                           question.match(/\uD504\uB85C\uC81D\uD2B8\\s+\uC120\uD0DD\\s+(\\w+)/) || \n                           question.match(/set\\s+project\\s+(\\w+)/);\n    \n    if (setProjectMatch) {\n      return `@swdp:set-project ${setProjectMatch[1]}`;\n    }\n    \n    \n    return '@swdp:projects';\n  }\n  \n  /**\n   * \uC791\uC5C5 \uAD00\uB828 \uC9C8\uBB38 \uCC98\uB9AC\n   * @param question \uC9C8\uBB38\n   * @returns SWDP \uBA85\uB839\uC5B4\n   */\n  private processTaskQuestion(question: string): string {\n    \n    if (question.includes('\uBAA9\uB85D') || question.includes('\uB9AC\uC2A4\uD2B8') || \n        question.includes('list') || question.match(/\uC791\uC5C5(\\s+)?$/) || \n        question.match(/tasks?(\\s+)?$/)) {\n      \n      const projectCodeMatch = question.match(/\uD504\uB85C\uC81D\uD2B8\\s+(\\w+)/) || \n                              question.match(/project\\s+(\\w+)/);\n      \n      return projectCodeMatch ? \n        `@swdp:tasks ${projectCodeMatch[1]}` : \n        '@swdp:tasks';\n    }\n    \n    \n    const taskIdMatch = question.match(/\uC791\uC5C5\\s+\uC815\uBCF4\\s+(\\w+)/) || \n                       question.match(/\uC791\uC5C5\\s+(\\w+)/) || \n                       question.match(/task\\s+info\\s+(\\w+)/) || \n                       question.match(/task\\s+(\\w+)/);\n    \n    if (taskIdMatch) {\n      return `@swdp:task ${taskIdMatch[1]}`;\n    }\n    \n    \n    if (question.includes('\uC0DD\uC131') || question.includes('\uCD94\uAC00') || \n        question.includes('create') || question.includes('add')) {\n      const titleMatch = question.match(/\"([^\"]+)\"/) || question.match(/'([^']+)'/);\n      const descriptionMatch = question.match(/\uB0B4\uC6A9[\uC740|\uC774]?\\s+\"([^\"]+)\"/) || \n                              question.match(/\uB0B4\uC6A9[\uC740|\uC774]?\\s+'([^']+)'/) || \n                              question.match(/description\\s+\"([^\"]+)\"/) || \n                              question.match(/description\\s+'([^']+)'/);\n      \n      if (titleMatch) {\n        const title = titleMatch[1];\n        const description = descriptionMatch ? descriptionMatch[1] : '\uC790\uB3D9 \uC0DD\uC131\uB41C \uC791\uC5C5';\n        \n        \n        const projectCodeMatch = question.match(/\uD504\uB85C\uC81D\uD2B8\\s+(\\w+)/) || \n                                question.match(/project\\s+(\\w+)/);\n        \n        return projectCodeMatch ? \n          `@swdp:create-task \"${title}\" \"${description}\" ${projectCodeMatch[1]}` : \n          `@swdp:create-task \"${title}\" \"${description}\"`;\n      }\n    }\n    \n    \n    if (question.includes('\uC0C1\uD0DC') || question.includes('\uC5C5\uB370\uC774\uD2B8') || \n        question.includes('\uBCC0\uACBD') || question.includes('update') || \n        question.includes('status') || question.includes('change')) {\n      const taskIdMatch = question.match(/\uC791\uC5C5\\s+(\\w+)/) || \n                         question.match(/task\\s+(\\w+)/);\n      \n      const statusMatch = question.match(/\uC0C1\uD0DC[\uB97C|\uC744]?\\s+(\\w+)/) || \n                         question.match(/status\\s+(\\w+)/);\n      \n      if (taskIdMatch && statusMatch) {\n        return `@swdp:update-task ${taskIdMatch[1]} ${statusMatch[1]}`;\n      }\n    }\n    \n    \n    return '@swdp:tasks';\n  }\n  \n  /**\n   * \uBE4C\uB4DC \uAD00\uB828 \uC9C8\uBB38 \uCC98\uB9AC\n   * @param question \uC9C8\uBB38\n   * @returns SWDP \uBA85\uB839\uC5B4\n   */\n  private processBuildQuestion(question: string): string {\n    \n    if (question.includes('\uC2DC\uC791') || question.includes('\uC2E4\uD589') || \n        question.includes('start') || question.includes('run')) {\n      \n      let buildType = 'local'; \n      \n      if (question.includes('\uC804\uCCB4') || question.includes('all')) {\n        buildType = 'all';\n      } else if (question.includes('\uD1B5\uD569') || question.includes('integration')) {\n        buildType = 'integration';\n      } else if (question.includes('\uB808\uC774\uC5B4') || question.includes('layer')) {\n        buildType = 'layer';\n      }\n      \n      \n      const options = [];\n      \n      if (question.includes('\uC6CC\uCE58') || question.includes('watch')) {\n        options.push('--watch');\n      }\n      \n      if (question.includes('pr') || question.includes('pull request')) {\n        options.push('--pr');\n      }\n      \n      return `@swdp:build ${buildType} ${options.join(' ')}`.trim();\n    }\n    \n    \n    if (question.includes('\uC0C1\uD0DC') || question.includes('status')) {\n      const buildIdMatch = question.match(/\uBE4C\uB4DC\\s+(\\w+)/) || \n                          question.match(/build\\s+(\\w+)/);\n      \n      return buildIdMatch ? \n        `@swdp:build:status ${buildIdMatch[1]}` : \n        '@swdp:build:status';\n    }\n    \n    \n    if (question.includes('\uB85C\uADF8') || question.includes('log')) {\n      const buildIdMatch = question.match(/\uBE4C\uB4DC\\s+(\\w+)/) || \n                          question.match(/build\\s+(\\w+)/);\n      \n      if (buildIdMatch) {\n        return `@swdp:build:logs ${buildIdMatch[1]}`;\n      }\n    }\n    \n    \n    if (question.includes('\uCDE8\uC18C') || question.includes('\uC911\uB2E8') || \n        question.includes('cancel') || question.includes('stop')) {\n      const buildIdMatch = question.match(/\uBE4C\uB4DC\\s+(\\w+)/) || \n                          question.match(/build\\s+(\\w+)/);\n      \n      if (buildIdMatch) {\n        return `@swdp:build:cancel ${buildIdMatch[1]}`;\n      }\n    }\n    \n    \n    return '@swdp:build:status';\n  }\n  \n  /**\n   * \uBB38\uC11C \uAD00\uB828 \uC9C8\uBB38 \uCC98\uB9AC\n   * @param question \uC9C8\uBB38\n   * @returns SWDP \uBA85\uB839\uC5B4\n   */\n  private processDocumentQuestion(question: string): string {\n    \n    if (question.includes('\uBAA9\uB85D') || question.includes('\uB9AC\uC2A4\uD2B8') || \n        question.includes('list') || question.match(/\uBB38\uC11C(\\s+)?$/) || \n        question.match(/documents?(\\s+)?$/)) {\n      \n      const projectCodeMatch = question.match(/\uD504\uB85C\uC81D\uD2B8\\s+(\\w+)/) || \n                              question.match(/project\\s+(\\w+)/);\n      \n      return projectCodeMatch ? \n        `@swdp:documents ${projectCodeMatch[1]}` : \n        '@swdp:documents';\n    }\n    \n    \n    const docIdMatch = question.match(/\uBB38\uC11C\\s+\uC815\uBCF4\\s+(\\w+)/) || \n                      question.match(/\uBB38\uC11C\\s+(\\w+)/) || \n                      question.match(/document\\s+info\\s+(\\w+)/) || \n                      question.match(/document\\s+(\\w+)/);\n    \n    if (docIdMatch) {\n      return `@swdp:document ${docIdMatch[1]}`;\n    }\n    \n    \n    if (question.includes('\uC0DD\uC131') || question.includes('\uCD94\uAC00') || \n        question.includes('create') || question.includes('add')) {\n      const titleMatch = question.match(/\"([^\"]+)\"/) || question.match(/'([^']+)'/);\n      const typeMatch = question.match(/\uD0C0\uC785[\uC740|\uC774]?\\s+(\\w+)/) || \n                       question.match(/\uC720\uD615[\uC740|\uC774]?\\s+(\\w+)/) || \n                       question.match(/type\\s+(\\w+)/);\n      \n      if (titleMatch && typeMatch) {\n        const title = titleMatch[1];\n        const type = typeMatch[1];\n        \n        \n        const contentMatch = question.match(/\uB0B4\uC6A9[\uC740|\uC774]?\\s+\"([^\"]+)\"/) || \n                            question.match(/\uB0B4\uC6A9[\uC740|\uC774]?\\s+'([^']+)'/) || \n                            question.match(/content\\s+\"([^\"]+)\"/) || \n                            question.match(/content\\s+'([^']+)'/);\n        \n        const content = contentMatch ? contentMatch[1] : '# ' + title + '\\n\\n\uC790\uB3D9 \uC0DD\uC131\uB41C \uBB38\uC11C';\n        \n        \n        const projectCodeMatch = question.match(/\uD504\uB85C\uC81D\uD2B8\\s+(\\w+)/) || \n                                question.match(/project\\s+(\\w+)/);\n        \n        return projectCodeMatch ? \n          `@swdp:create-document \"${title}\" \"${type}\" \"${content}\" ${projectCodeMatch[1]}` : \n          `@swdp:create-document \"${title}\" \"${type}\" \"${content}\"`;\n      }\n    }\n    \n    \n    return '@swdp:documents';\n  }\n  \n  /**\n   * \uC774 \uD50C\uB7EC\uADF8\uC778\uC774 \uC9C8\uBB38\uC744 \uCC98\uB9AC\uD560 \uC218 \uC788\uB294\uC9C0 \uD655\uC778\n   * @param question \uC0AC\uC6A9\uC790 \uC9C8\uBB38\n   * @returns \uCC98\uB9AC \uAC00\uB2A5 \uC5EC\uBD80\n   */\n  public canProcessQuestion(question: string): boolean {\n    const normalizedQuestion = question.trim().toLowerCase();\n    \n    \n    const swdpKeywords = [\n      'swdp', '\uD504\uB85C\uC81D\uD2B8', '\uC791\uC5C5', '\uBE4C\uB4DC', '\uBB38\uC11C', '\uD0DC\uC2A4\uD06C',\n      'project', 'task', 'build', 'document'\n    ];\n    \n    return swdpKeywords.some(keyword => normalizedQuestion.includes(keyword));\n  }\n  \n  /**\n   * \uB3C4\uC6C0\uB9D0 \uC0DD\uC131\n   * @returns \uB3C4\uC6C0\uB9D0 \uBB38\uC790\uC5F4\n   */\n  public getHelp(): string {\n    return `\n# SWDP \uBA85\uB839\uC5B4 \uB3C4\uC6C0\uB9D0\n\n## \uD504\uB85C\uC81D\uD2B8 \uAD00\uB828 \uBA85\uB839\uC5B4\n- @swdp:projects - \uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D \uC870\uD68C\n- @swdp:project <project_code> - \uD504\uB85C\uC81D\uD2B8 \uC138\uBD80 \uC815\uBCF4 \uC870\uD68C\n- @swdp:set-project <project_code> - \uD604\uC7AC \uC791\uC5C5 \uD504\uB85C\uC81D\uD2B8 \uC124\uC815\n\n## \uC791\uC5C5 \uAD00\uB828 \uBA85\uB839\uC5B4\n- @swdp:tasks [project_code] - \uC791\uC5C5 \uBAA9\uB85D \uC870\uD68C\n- @swdp:task <task_id> - \uC791\uC5C5 \uC138\uBD80 \uC815\uBCF4 \uC870\uD68C\n- @swdp:create-task <title> <description> [project_code] - \uC0C8 \uC791\uC5C5 \uC0DD\uC131\n- @swdp:update-task <task_id> <status> - \uC791\uC5C5 \uC0C1\uD0DC \uC5C5\uB370\uC774\uD2B8\n\n## \uBE4C\uB4DC \uAD00\uB828 \uBA85\uB839\uC5B4\n- @swdp:build [type] [--watch] [--pr] - \uBE4C\uB4DC \uC2DC\uC791\n- @swdp:build:status [buildId] - \uBE4C\uB4DC \uC0C1\uD0DC \uD655\uC778\n- @swdp:build:logs <buildId> - \uBE4C\uB4DC \uB85C\uADF8 \uD655\uC778\n- @swdp:build:cancel <buildId> - \uBE4C\uB4DC \uCDE8\uC18C\n\n## \uBB38\uC11C \uAD00\uB828 \uBA85\uB839\uC5B4\n- @swdp:documents [project_code] - \uBB38\uC11C \uBAA9\uB85D \uC870\uD68C\n- @swdp:document <doc_id> - \uBB38\uC11C \uC138\uBD80 \uC815\uBCF4 \uC870\uD68C\n- @swdp:create-document <title> <type> <content> [project_code] - \uC0C8 \uBB38\uC11C \uC0DD\uC131\n\n\uC790\uC5F0\uC5B4 \uC608\uC2DC:\n- \"SWDP \uD504\uB85C\uC81D\uD2B8 \uBAA9\uB85D \uBCF4\uC5EC\uC918\"\n- \"\uD504\uB85C\uC81D\uD2B8 PRJ001 \uC815\uBCF4 \uC54C\uB824\uC918\"\n- \"\uD604\uC7AC \uD504\uB85C\uC81D\uD2B8\uB97C PRJ001\uB85C \uC124\uC815\uD574\uC918\"\n- \"\uC791\uC5C5 \uBAA9\uB85D \uBCF4\uC5EC\uC918\"\n- \"\uC791\uC5C5 TASK001 \uC0C1\uD0DC\uB97C in_progress\uB85C \uBCC0\uACBD\uD574\uC918\"\n- \"\uBE4C\uB4DC \uC2DC\uC791\uD574\uC918 (local)\"\n- \"\uBB38\uC11C \uBAA9\uB85D \uBCF4\uC5EC\uC918\"\n    `.trim();\n  }\n}", "/**\n * \uCC44\uD305 \uC6F9\uBDF0 \uC81C\uACF5\uC790\n * VS Code \uC6F9\uBDF0 UI \uAD00\uB9AC \uBC0F \uBA54\uC2DC\uC9C0 \uCC98\uB9AC\n */\n\nimport * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { ChatService } from '../services/ChatService';\nimport { ICoreService } from '../core/ICoreService';\nimport { CommandResult } from '../types/CommandTypes';\nimport { LoggerService } from '../core/utils/LoggerService';\n\n/**\n * \uCC44\uD305 \uC6F9\uBDF0 \uC81C\uACF5\uC790 \uD074\uB798\uC2A4\n */\nexport class ApeChatViewProvider implements vscode.WebviewViewProvider {\n  \n  public _view?: vscode.WebviewView;\n\n  private logger: LoggerService;\n\n  constructor(\n    private readonly _extensionUri: vscode.Uri,\n    private readonly _chatService: ChatService,\n    private readonly _coreService: ICoreService\n  ) {\n    this.logger = new LoggerService();\n    this.logger.info('ApeChatViewProvider \uC0DD\uC131\uC790 - CoreService \uC9C1\uC811 \uC8FC\uC785\uB428');\n  }\n\n  public resolveWebviewView(\n    webviewView: vscode.WebviewView,\n    context: vscode.WebviewViewResolveContext,\n    _token: vscode.CancellationToken\n  ) {\n    this._view = webviewView;\n\n    \n    webviewView.description = \"\uCC44\uD305 \uC778\uD130\uD398\uC774\uC2A4\";\n\n    webviewView.webview.options = {\n      enableScripts: true,\n      localResourceRoots: [this._extensionUri]\n    };\n    \n    // \uBDF0\uC758 \uD06C\uAE30 \uBCC0\uACBD \uC18D\uC131 \uC124\uC815\n    webviewView.onDidChangeVisibility(() => {\n      if (webviewView.visible) {\n        this.logger.info('\uCC44\uD305 \uC6F9\uBDF0\uAC00 \uD45C\uC2DC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.');\n        this._sendCurrentTheme();\n      }\n    });\n    \n    // \uC6F9\uBDF0\uAC00 \uB9AC\uC0AC\uC774\uC988\uB420 \uB54C \uB300\uC751\n    webviewView.onDidChangeViewState(e => {\n      this.logger.info('\uCC44\uD305 \uC6F9\uBDF0 \uC0C1\uD0DC \uBCC0\uACBD\uB428');\n      if (this._view && this._view.visible) {\n        this._view.webview.postMessage({\n          command: 'viewStateChanged',\n          isVisible: e.webviewView.visible\n        });\n      }\n    });\n    \n    \n    webviewView.webview.html = this._getHtmlContent(webviewView.webview);\n    this.logger.info('\uCC44\uD305 \uC6F9\uBDF0 HTML\uC774 \uC124\uC815\uB418\uC5C8\uC2B5\uB2C8\uB2E4.');\n    \n    // VS Code \uD14C\uB9C8 \uBCC0\uACBD \uC774\uBCA4\uD2B8 \uAD6C\uB3C5\n    this._registerThemeChangeListener();\n    \n    // \uBDF0 \uB108\uBE44 \uBC0F \uB192\uC774 \uBCC0\uACBD \uC54C\uB9BC\n    const viewStateChangeEmitter = new vscode.EventEmitter<void>();\n    const onDidChangeViewState = viewStateChangeEmitter.event;\n    \n    // \uBDF0 \uD06C\uAE30 \uBCC0\uACBD \uC774\uBCA4\uD2B8 \uB9AC\uC2A4\uB108 \uCD94\uAC00\n    webviewView.onDidChangeVisibility(() => {\n      if (webviewView.visible) {\n        this._sendViewDimensions();\n      }\n    });\n    \n    // \uC8FC\uAE30\uC801\uC73C\uB85C \uBDF0 \uD06C\uAE30\uB97C \uD655\uC778\uD558\uACE0 \uBCC0\uACBD\uC0AC\uD56D \uC804\uC1A1\n    const resizeInterval = setInterval(() => {\n      if (this._view && this._view.visible) {\n        this._sendViewDimensions();\n      }\n    }, 2000);\n    \n    // \uD655\uC7A5 \uD504\uB85C\uADF8\uB7A8 \uBE44\uD65C\uC131\uD654 \uC2DC \uC778\uD130\uBC8C \uC81C\uAC70\n    context.subscriptions.push({\n      dispose: () => {\n        clearInterval(resizeInterval);\n      }\n    });\n    \n    setTimeout(() => {\n      if (this._view && this._view.visible) {\n        webviewView.webview.postMessage({\n          command: 'initialized',\n          timestamp: Date.now()\n        });\n        this.logger.info('\uC6F9\uBDF0 \uCD08\uAE30\uD654 \uC644\uB8CC \uBA54\uC2DC\uC9C0 \uC804\uC1A1');\n        \n        // \uCD08\uAE30 \uBDF0 \uD06C\uAE30 \uC804\uC1A1\n        this._sendViewDimensions();\n      }\n    }, 1000);\n\n    \n    webviewView.webview.onDidReceiveMessage(message => {\n      this.logger.info('\uCC44\uD305 \uC6F9\uBDF0\uB85C\uBD80\uD130 \uBA54\uC2DC\uC9C0\uB97C \uBC1B\uC558\uC2B5\uB2C8\uB2E4:', message);\n      \n      switch (message.command) {\n        case 'resizeStart':\n          // \uD06C\uAE30 \uC870\uC808 \uC2DC\uC791 \uCC98\uB9AC\n          this.logger.info('\uC6F9\uBDF0 \uD06C\uAE30 \uC870\uC808 \uC2DC\uC791');\n          return;\n          \n        case 'resizeEnd':\n          // \uD06C\uAE30 \uC870\uC808 \uC644\uB8CC \uCC98\uB9AC\n          this.logger.info('\uC6F9\uBDF0 \uD06C\uAE30 \uC870\uC808 \uC644\uB8CC');\n          // \uD2B8\uB9AC\uBDF0\uC640 \uCC44\uD305\uBDF0 \uC0AC\uC774\uC758 \uD06C\uAE30 \uC870\uC815 \uCC98\uB9AC\n          this._sendViewDimensions();\n          return;\n        case 'sendMessage':\n          this._handleUserMessage(message);\n          return;\n          \n        case 'clearChat':\n          this.clearChat();\n          this._chatService.clearConversation();\n          return;\n          \n        case 'changeModel':\n          this._changeModel(message.model);\n          return;\n          \n        case 'getTheme':\n          this._sendCurrentTheme();\n          return;\n          \n        case 'getModelList':\n          \n          this.logger.info('\uC6F9\uBDF0\uC5D0\uC11C \uBAA8\uB378 \uBAA9\uB85D \uC694\uCCAD \uBC1B\uC74C');\n          this._sendModelList();\n          this._sendCurrentModel();\n          return;\n          \n        case 'toggleEmbedDevMode':\n          \n          this.logger.info(`\uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC: ${message.enabled ? '\uD65C\uC131\uD654' : '\uBE44\uD65C\uC131\uD654'}`);\n          \n          vscode.workspace.getConfiguration('ape.core').update(\n            'embedDevMode', \n            message.enabled, \n            vscode.ConfigurationTarget.Global\n          );\n          return;\n          \n        case 'toggleApeMode':\n          \n          this.logger.info(`\uB3C4\uAD6C \uD65C\uC6A9 \uBAA8\uB4DC: ${message.enabled ? '\uD65C\uC131\uD654' : '\uBE44\uD65C\uC131\uD654'}`);\n          \n          \n          vscode.workspace.getConfiguration('ape.ui').update(\n            'apeMode', \n            message.enabled, \n            vscode.ConfigurationTarget.Global\n          );\n          \n          \n          const newMode = message.enabled ? 'hybrid' : 'standard';\n          vscode.workspace.getConfiguration('ape').update(\n            'uiMode', \n            newMode, \n            vscode.ConfigurationTarget.Global\n          );\n          \n          \n          vscode.window.showInformationMessage(`\uB3C4\uAD6C \uD65C\uC6A9 \uBAA8\uB4DC\uAC00 ${message.enabled ? '\uD65C\uC131\uD654' : '\uBE44\uD65C\uC131\uD654'}\uB418\uC5C8\uC2B5\uB2C8\uB2E4.`);\n          \n          this.logger.info('\uB3C4\uAD6C \uD65C\uC6A9 \uBAA8\uB4DC \uC124\uC815 \uBCC0\uACBD \uC644\uB8CC');\n          return;\n          \n        case 'getCommands':\n          \n          this._sendCommandsList();\n          return;\n          \n        case 'executeCommand':\n          \n          this.logger.info('\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC694\uCCAD:', message.commandId);\n          if (message.commandId) {\n            this._executeCommand(message.commandId);\n          }\n          return;\n          \n        case 'copyToClipboard':\n          \n          if (message.text) {\n            vscode.env.clipboard.writeText(message.text)\n              .then(() => {\n                \n                this.logger.info('\uD074\uB9BD\uBCF4\uB4DC\uC5D0 \uBCF5\uC0AC\uB428:', message.text);\n              }, (err: Error) => {\n                \n                this.logger.error('\uD074\uB9BD\uBCF4\uB4DC \uBCF5\uC0AC \uC624\uB958:', err);\n              });\n          }\n          return;\n          \n        case 'newChat':\n          // \uC0C8 \uCC44\uD305 \uC2DC\uC791\n          this.clearChat();\n          this._chatService.clearConversation();\n          return;\n          \n        case 'saveAndNewChat':\n          // \uD604\uC7AC \uB300\uD654 \uC800\uC7A5 \uD6C4 \uC0C8 \uCC44\uD305 \uC2DC\uC791\n          this.saveCurrentSession();\n          this.clearChat();\n          this._chatService.clearConversation();\n          return;\n          \n        case 'saveChatSession':\n          // \uD604\uC7AC \uB300\uD654 \uC800\uC7A5\n          this.saveCurrentSession(message.title);\n          return;\n          \n        case 'treeViewAction':\n          \n          this._handleTreeViewAction(message);\n          return;\n          \n        case 'changeUiMode':\n          \n          this.logger.info(`UI \uBAA8\uB4DC \uBCC0\uACBD \uC694\uCCAD \uC218\uC2E0: ${message.mode}`);\n          \n          if (this._view && this._view.visible) {\n            this._view.webview.postMessage({\n              command: 'setApeMode',\n              enabled: message.mode === 'hybrid'\n            });\n          }\n          return;\n      }\n    });\n    \n    \n    setTimeout(() => {\n      this._sendModelList();\n    }, 500);\n    \n    \n    setTimeout(() => {\n      this._sendCurrentModel();\n    }, 600);\n    \n    \n    setTimeout(() => {\n      this._sendResponse(this._chatService.getWelcomeMessage(), 'assistant');\n    }, 1000);\n    \n    \n    setTimeout(() => {\n      \n      const config = vscode.workspace.getConfiguration('ape');\n      const currentMode = config.get<string>('uiMode', 'standard');\n      \n      \n      if (this._view && this._view.visible) {\n        this._view.webview.postMessage({\n          command: 'setApeMode',\n          enabled: currentMode === 'hybrid'\n        });\n        this.logger.info(`\uCD08\uAE30 UI \uBAA8\uB4DC \uC124\uC815\uB428: ${currentMode}`);\n      }\n    }, 1200);\n  }\n\n  /**\n   * \uC0AC\uC6A9\uC790 \uBA54\uC2DC\uC9C0 \uCC98\uB9AC\n   */\n  private async _handleUserMessage(message: {text: string; model?: string; embedDevMode?: boolean}): Promise<void> {\n    this.logger.info('\uC0AC\uC6A9\uC790 \uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC2DC\uC791:', message);\n    \n    if (!this._view) {\n      this.logger.error('\uCC44\uD305 \uBDF0\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4. \uBA54\uC2DC\uC9C0\uB97C \uCC98\uB9AC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      return;\n    }\n\n    const text = message.text;\n    const selectedModel = message.model; \n    const embedDevMode = message.embedDevMode; \n    const useStreaming = true; \n    \n    this.logger.info(`\uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC138\uBD80\uC815\uBCF4:\n    - \uD14D\uC2A4\uD2B8: ${text}\n    - \uC120\uD0DD \uBAA8\uB378: ${selectedModel || '\uAE30\uBCF8\uAC12'}\n    - \uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC: ${embedDevMode ? '\uD65C\uC131\uD654' : '\uBE44\uD65C\uC131\uD654'}\n    - \uC2A4\uD2B8\uB9AC\uBC0D: ${useStreaming ? '\uC0AC\uC6A9' : '\uBBF8\uC0AC\uC6A9'}`)\n\n    try {\n      \n      this._sendResponse('\uC0DD\uAC01 \uC911...', 'system');\n      \n      \n      if (selectedModel) {\n        this._changeModel(selectedModel);\n      }\n      \n      \n      if (this._view && this._view.visible) {\n        this._view.webview.postMessage({\n          command: 'removeSystemMessage',\n          content: '\uC0DD\uAC01 \uC911...'\n        });\n      }\n      \n      \n      const isAtCommand = text.trim().startsWith('@');\n      const isSlashCommand = text.trim().startsWith('/');\n      \n      \n      if (isAtCommand || isSlashCommand) {\n        this.logger.info(`ApeChatViewProvider: ${isAtCommand ? '@' : '/'}\uBA85\uB839\uC5B4 \uAC10\uC9C0 - \"${text}\"`);\n        \n        \n        const commandResponseId = `cmd-${Date.now()}`;\n        this._view.webview.postMessage({\n          command: 'startStreaming',\n          responseId: commandResponseId,\n          type: 'system'\n        });\n        \n        \n        const commandResponse = await this._chatService.processMessage(text);\n        \n        \n        if (commandResponse) {\n          \n          let responseContent = '';\n          let responseType: 'system' | 'assistant' = 'system';\n          let hasError = false;\n          \n          if (typeof commandResponse === 'object' && commandResponse !== null) {\n            \n            if (commandResponse && 'success' in commandResponse && 'message' in commandResponse) {\n              \n              const result = commandResponse as CommandResult;\n              responseContent = result.message || JSON.stringify(result, null, 2);\n              responseType = result.error ? 'system' : 'assistant';\n              hasError = !!result.error;\n            }\n            \n            else if (commandResponse && 'content' in commandResponse) {\n              const content = (commandResponse as {content: string}).content;\n              hasError = 'error' in commandResponse && !!(commandResponse as {error?: unknown}).error;\n              responseType = hasError ? 'system' : 'assistant';\n              responseContent = content;\n            } else {\n              responseContent = JSON.stringify(commandResponse, null, 2);\n            }\n          } else {\n            responseContent = String(commandResponse);\n          }\n          \n          \n          if (this._view && this._view.visible) {\n            \n            this._view.webview.postMessage({\n              command: 'endStreaming',\n              responseId: commandResponseId\n            });\n            \n            \n            this._sendResponse(responseContent, responseType);\n            \n            \n            this._view.webview.postMessage({\n              command: 'commandExecuted',\n              commandId: text, \n              success: !hasError\n            });\n          }\n        }\n        \n        return;\n      }\n      \n      \n      if (useStreaming) {\n        \n        let isFirstChunk = true;\n        let chunkCount = 0;\n        let startTime = Date.now();\n        \n        \n        const responseId = `resp-${Date.now()}`;\n        \n        this.logger.info(`ApeChatViewProvider: \uC2A4\uD2B8\uB9AC\uBC0D \uC2DC\uC791 - \uC751\uB2F5 ID: ${responseId}`);\n        \n        \n        if (embedDevMode) {\n          this.logger.info(`\uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC\uB85C \uCC98\uB9AC - \uACE0\uAE09 \uD504\uB86C\uD504\uD2B8 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1 \uBC0F \uB0B4\uBD80\uB9DD \uB370\uC774\uD130 \uBD84\uC11D \uC801\uC6A9`);\n        }\n        \n        \n        this._view.webview.postMessage({\n          command: 'startStreaming',\n          responseId: responseId,\n          type: 'assistant'\n        });\n        \n        \n        const streamHandler = (chunk: string) => {\n          if (!this._view || !this._view.visible) return;\n          \n          chunkCount++;\n          \n          \n          if (isFirstChunk) {\n            this.logger.info(`ApeChatViewProvider: \uCCAB \uCCAD\uD06C \uC218\uC2E0 - \uAE38\uC774: ${chunk.length}\uC790`);\n            isFirstChunk = false;\n          }\n          \n          \n          if (chunkCount <= 2 || chunkCount % 50 === 0) {\n            this.logger.info(`ApeChatViewProvider: \uC2A4\uD2B8\uB9AC\uBC0D \uCCAD\uD06C #${chunkCount} \uC218\uC2E0 - \uAE38\uC774: ${chunk.length}\uC790`);\n          }\n          \n          \n          this._view.webview.postMessage({\n            command: 'appendStreamChunk',\n            responseId: responseId,\n            content: chunk,\n            type: 'assistant'\n          });\n        };\n        \n        \n        await this._chatService.processMessage(text, streamHandler, { embedDevMode: embedDevMode || false });\n        \n        \n        if (this._view && this._view.visible) {\n          const endTime = Date.now();\n          const duration = (endTime - startTime) / 1000;\n          \n          this.logger.info(`ApeChatViewProvider: \uC2A4\uD2B8\uB9AC\uBC0D \uC644\uB8CC - \uCD1D \uCCAD\uD06C: ${chunkCount}, \uC18C\uC694 \uC2DC\uAC04: ${duration.toFixed(2)}\uCD08`);\n          \n          this._view.webview.postMessage({\n            command: 'endStreaming',\n            responseId: responseId\n          });\n        }\n      } else {\n        \n        const response = await this._chatService.processMessage(text);\n        \n        \n        if (response && this._view && this._view.visible) {\n          \n          if (typeof response === 'object' && response !== null) {\n            if (response && 'content' in response && (response as {content?: string}).content) {\n              const responseType = response && 'error' in response && !!(response as {error?: unknown}).error ? 'system' : 'assistant';\n              this._sendResponse((response as {content: string}).content, responseType);\n            } else if (response) {\n              this._sendResponse(JSON.stringify(response, null, 2), 'assistant');\n            }\n          } else if (typeof response === 'string' && response.trim && response.trim() !== '') {\n            this._sendResponse(response, 'assistant');\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.error('\uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this._sendResponse('\uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uB2E4\uC2DC \uC2DC\uB3C4\uD574\uC8FC\uC138\uC694.', 'system');\n    }\n  }\n\n  /**\n   * \uC751\uB2F5 \uBA54\uC2DC\uC9C0 \uC804\uC1A1\n   */\n  private _sendResponse(text: string, type: 'assistant' | 'system' = 'assistant'): void {\n    if (this._view) {\n      this._view.webview.postMessage({\n        command: 'addMessage',\n        type: type,\n        content: text\n      });\n    }\n  }\n  \n  /**\n   * \uBAA8\uB378 \uBAA9\uB85D \uC804\uC1A1\n   */\n  private _sendModelList() {\n    if (!this._view) {\n      this.logger.error('[UI<-EXT] _sendModelList: \uBDF0\uAC00 \uC5C6\uC5B4 \uBAA8\uB378 \uBAA9\uB85D\uC744 \uC804\uC1A1\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      return;\n    }\n\n    try {\n      this.logger.info('[UI<-EXT] \uBAA8\uB378 \uBAA9\uB85D \uC804\uC1A1 \uC2DC\uC791');\n      \n      \n      // CoreService\uB294 \uC0DD\uC131\uC790\uC5D0\uC11C \uC8FC\uC785\uB418\uBBC0\uB85C \uAC80\uC0AC \uD544\uC694 \uC5C6\uC74C\n      const coreService = this._coreService;\n      const llmService = coreService.llmService;\n      \n      if (!llmService) {\n        this.logger.error('[UI<-EXT] LLM \uC11C\uBE44\uC2A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n        throw new Error('LLM \uC11C\uBE44\uC2A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      }\n      \n      \n      this.logger.info('[UI<-EXT] \uAE30\uBCF8 \uBAA8\uB378 ID:', llmService.getDefaultModelId());\n      \n      \n      let modelsArray = llmService.getAvailableModels();\n      this.logger.info(`[UI<-EXT] \uAC00\uC838\uC628 \uBAA8\uB378 \uC218: ${modelsArray.length}`);\n      \n      \n      if (!Array.isArray(modelsArray)) {\n        this.logger.warn('[UI<-EXT] \uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uBAA8\uB378 \uBC30\uC5F4 \uBC18\uD658\uB428. \uBE48 \uBC30\uC5F4\uB85C \uCD08\uAE30\uD654.');\n        modelsArray = [];\n      }\n      \n      \n      // \uBAA8\uB378 \uBAA9\uB85D\uC774 \uBE44\uC5B4\uC788\uC73C\uBA74 \uAE30\uBCF8 \uBAA8\uB378 \uCD94\uAC00\n      if (modelsArray.length < 2) {\n        this.logger.info('[UI<-EXT] \uBAA8\uB378 \uBAA9\uB85D\uC774 \uBD88\uCDA9\uBD84\uD558\uC5EC \uAE30\uBCF8 \uBAA8\uB378 \uCD94\uAC00');\n        \n        // \uAE30\uBCF8 \uBAA8\uB378 \uCD94\uAC00\n        modelsArray.push({\n          id: 'gemini-2.5-flash',\n          name: 'Google Gemini 2.5 Flash',\n          provider: 'openrouter',\n          temperature: 0.7,\n          apiUrl: 'https://openrouter.ai/api/v1/chat/completions',\n          apiModel: 'google/gemini-2.5-flash-preview'\n        });\n        \n        // \uB85C\uCEEC \uBAA8\uB378 \uC5C6\uC73C\uBA74 \uCD94\uAC00\n        if (!modelsArray.some(m => m.provider === 'local')) {\n          modelsArray.push({\n            id: 'local-fallback',\n            name: '\uB85C\uCEEC \uC2DC\uBBAC\uB808\uC774\uC158 \uBAA8\uB378',\n            provider: 'local',\n            temperature: 0.7\n          });\n          this.logger.info('[UI<-EXT] \uB85C\uCEEC \uBAA8\uB378 \uCD94\uAC00\uB428');\n        }\n        \n        this.logger.info(`[UI<-EXT] \uAE30\uBCF8 \uBAA8\uB378 \uCD94\uAC00 \uD6C4 \uBAA8\uB378 \uC218: ${modelsArray.length}`);\n      }\n      \n      \n      const models = modelsArray.map((model, index) => {\n        try {\n          \n          let modelId = model.id || model.modelId || `model-${index}`;\n          \n          \n          if (modelId.includes('/') || modelId.includes(':')) {\n            modelId = modelId.replace(/[\\/:.]/g, '-');\n          }\n          \n          \n          const modelName = model.name || `\uBAA8\uB378 ${index + 1}`;\n          \n          \n          return {\n            id: modelId,\n            name: modelName,\n            provider: model.provider || 'unknown'\n          };\n        } catch (err) {\n          this.logger.error(`[UI<-EXT] \uBAA8\uB378 \uBCC0\uD658 \uC911 \uC624\uB958 (\uC778\uB371\uC2A4 ${index}):`, err);\n          \n          return {\n            id: `model-${index}`,\n            name: `\uBAA8\uB378 ${index + 1}`,\n            provider: 'unknown'\n          };\n        }\n      });\n      \n      \n      const uniqueModels = this._removeDuplicateModels(models);\n      \n      \n      this.logger.info(`[UI<-EXT] \uC804\uC1A1\uD560 \uBAA8\uB378 \uBAA9\uB85D: ${uniqueModels.length}\uAC1C (\uC911\uBCF5 \uC81C\uAC70 \uD6C4)`);\n      uniqueModels.forEach((model, index) => {\n        this.logger.info(`[UI<-EXT] \uBAA8\uB378 ${index + 1}: ID=${model.id}, \uC774\uB984=${model.name}, \uC81C\uACF5\uC790=${model.provider}`);\n      });\n      \n      \n      this._view.webview.postMessage({\n        command: 'updateModels',\n        models: uniqueModels\n      });\n      \n      this.logger.info('[UI<-EXT] \uBAA8\uB378 \uBAA9\uB85D \uC804\uC1A1 \uC644\uB8CC');\n      \n      \n      setTimeout(() => {\n        if (this._view && this._view.visible) {\n          \n          let defaultModelId = llmService.getDefaultModelId();\n          \n          \n          if (!defaultModelId && uniqueModels.length > 0) {\n            defaultModelId = uniqueModels[0].id;\n            this.logger.info(`[UI<-EXT] \uAE30\uBCF8 \uBAA8\uB378 ID \uBBF8\uC124\uC815, \uCCAB \uBC88\uC9F8 \uBAA8\uB378\uB85C \uC124\uC815: ${defaultModelId}`);\n          }\n          \n          if (defaultModelId) {\n            this._view.webview.postMessage({\n              command: 'setCurrentModel',\n              modelId: defaultModelId\n            });\n            \n            this.logger.info(`[UI<-EXT] \uD604\uC7AC \uBAA8\uB378 ID \uC804\uC1A1: ${defaultModelId}`);\n          }\n        }\n      }, 500);\n    } catch (error: unknown) {\n      this.logger.error('[UI<-EXT] \uBAA8\uB378 \uBAA9\uB85D \uC804\uC1A1 \uC624\uB958:', error);\n      \n      \n      const fallbackModels = [\n        { id: 'narrans-emergency', name: 'NARRANS (\uB0B4\uBD80\uB9DD)', provider: 'custom' },\n        { id: 'openrouter-emergency', name: 'Claude 3 Haiku', provider: 'openrouter' },\n        { id: 'local-emergency', name: '\uC624\uD504\uB77C\uC778 \uC751\uAE09 \uBAA8\uB4DC', provider: 'local' }\n      ];\n      \n      this.logger.info('[UI<-EXT] \uBC31\uC5C5 \uBAA8\uB378 \uBAA9\uB85D \uC804\uC1A1:');\n      \n      try {\n        this._view.webview.postMessage({\n          command: 'updateModels',\n          models: fallbackModels\n        });\n        \n        \n        this._view.webview.postMessage({\n          command: 'setCurrentModel',\n          modelId: 'narrans-emergency'\n        });\n        \n        this.logger.info('[UI<-EXT] \uBC31\uC5C5 \uBAA8\uB378 \uBAA9\uB85D \uBC0F \uAE30\uBCF8 \uBAA8\uB378 \uC804\uC1A1 \uC131\uACF5');\n      } catch (postError) {\n        this.logger.error('[UI<-EXT] \uBC31\uC5C5 \uBAA8\uB378 \uBAA9\uB85D \uC804\uC1A1 \uC2E4\uD328:', postError);\n      }\n    }\n  }\n  \n  /**\n   * \uBAA8\uB378 \uBAA9\uB85D\uC5D0\uC11C \uC911\uBCF5 \uC81C\uAC70 \uBC0F \uC815\uB82C\n   * @param models \uBAA8\uB378 \uBAA9\uB85D\n   * @returns \uC911\uBCF5\uC774 \uC81C\uAC70\uB41C \uBAA8\uB378 \uBAA9\uB85D\n   */\n  private _removeDuplicateModels(models: Array<{id: string; name: string; provider: string}>) {\n    \n    const uniqueIds = new Set<string>();\n    const uniqueModels: Array<{id: string; name: string; provider: string}> = [];\n    \n    \n    const providerPriority: Record<string, number> = {\n      'custom': 0,   \n      'openrouter': 1,  \n      'local': 2,    \n      'unknown': 3   \n    };\n    \n    \n    for (const model of models) {\n      if (!uniqueIds.has(model.id)) {\n        uniqueIds.add(model.id);\n        uniqueModels.push(model);\n      }\n    }\n    \n    \n    uniqueModels.sort((a, b) => {\n      \n      const priorityA = providerPriority[a.provider] ?? 999;\n      const priorityB = providerPriority[b.provider] ?? 999;\n      \n      \n      if (priorityA !== priorityB) {\n        return priorityA - priorityB;\n      }\n      \n      \n      return a.name.localeCompare(b.name);\n    });\n    \n    return uniqueModels;\n  }\n  \n  /**\n   * VS Code \uD14C\uB9C8 \uBCC0\uACBD \uB9AC\uC2A4\uB108 \uB4F1\uB85D\n   */\n  private _registerThemeChangeListener(): void {\n    // \uD604\uC7AC \uD14C\uB9C8 \uC815\uBCF4 \uC804\uC1A1\n    this._sendCurrentTheme();\n    \n    // \uD14C\uB9C8 \uBCC0\uACBD \uC774\uBCA4\uD2B8 \uAD6C\uB3C5\n    vscode.window.onDidChangeActiveColorTheme((colorTheme) => {\n      if (this._view && this._view.visible) {\n        this.logger.info(`VS Code \uD14C\uB9C8 \uBCC0\uACBD\uB428: ${colorTheme.kind}`);\n        \n        this._sendCurrentTheme();\n      }\n    });\n  }\n  \n  /**\n   * \uD604\uC7AC \uD14C\uB9C8 \uC815\uBCF4 \uC804\uC1A1\n   */\n  private _sendCurrentTheme(): void {\n    if (!this._view || !this._view.visible) return;\n    \n    try {\n      const currentTheme = vscode.window.activeColorTheme;\n      let themeName: string;\n      \n      // \uD14C\uB9C8 \uC885\uB958\uC5D0 \uB530\uB77C \uD074\uB798\uC2A4 \uC774\uB984 \uACB0\uC815\n      switch (currentTheme.kind) {\n        case vscode.ColorThemeKind.Light:\n          themeName = 'vscode-light';\n          break;\n        case vscode.ColorThemeKind.Dark:\n          themeName = 'vscode-dark';\n          break;\n        case vscode.ColorThemeKind.HighContrast:\n          themeName = 'vscode-high-contrast';\n          break;\n        case vscode.ColorThemeKind.HighContrastLight:\n          themeName = 'vscode-high-contrast-light';\n          break;\n        default:\n          themeName = 'vscode-dark'; // \uAE30\uBCF8\uAC12\n      }\n      \n      this.logger.info(`\uD14C\uB9C8 \uC815\uBCF4 \uC804\uC1A1: ${themeName}`);\n      \n      this._view.webview.postMessage({\n        type: 'theme-update',\n        theme: themeName\n      });\n    } catch (error) {\n      this.logger.error('\uD14C\uB9C8 \uC815\uBCF4 \uC804\uC1A1 \uC911 \uC624\uB958:', error);\n    }\n  }\n  \n  /**\n   * \uD604\uC7AC \uBAA8\uB378 \uC804\uC1A1\n   */\n  private _sendCurrentModel() {\n    if (!this._view) {\n      this.logger.error('_sendCurrentModel: \uBDF0\uAC00 \uC5C6\uC5B4 \uD604\uC7AC \uBAA8\uB378\uC744 \uC804\uC1A1\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      return;\n    }\n\n    try {\n      this.logger.info('\uD604\uC7AC \uBAA8\uB378 \uC804\uC1A1 \uC2DC\uC791');\n      \n      \n      // CoreService\uB294 \uC0DD\uC131\uC790\uC5D0\uC11C \uC8FC\uC785\uB418\uBBC0\uB85C \uAC80\uC0AC \uD544\uC694 \uC5C6\uC74C\n      const coreService = this._coreService;\n      if (!coreService) {\n        this.logger.error('_sendCurrentModel: coreService\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n        throw new Error('Core \uC11C\uBE44\uC2A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      }\n      \n      const llmService = coreService.llmService;\n      if (!llmService) {\n        this.logger.error('_sendCurrentModel: llmService\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n        throw new Error('LLM \uC11C\uBE44\uC2A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      }\n      \n      \n      const availableModels = llmService.getAvailableModels();\n      const modelIds = availableModels.map(m => m.id || m.modelId).filter(Boolean);\n      this.logger.info(`\uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uBAA8\uB378 ID: ${JSON.stringify(modelIds)}`);\n      \n      \n      this.logger.info('getDefaultModelId \uBA54\uC11C\uB4DC \uD638\uCD9C \uC2DC\uB3C4...');\n      let defaultModelId = llmService.getDefaultModelId();\n      \n      \n      if (!defaultModelId || !modelIds.includes(defaultModelId)) {\n        this.logger.warn(`\uAE30\uBCF8 \uBAA8\uB378 ID(${defaultModelId || 'undefined'})\uAC00 \uC5C6\uAC70\uB098 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uD3F4\uBC31 \uBAA8\uB378 \uC120\uD0DD...`);\n        \n        \n        \n        const internalModel = availableModels.find(m => m.provider === 'custom');\n        \n        const openRouterModel = availableModels.find(m => m.provider === 'openrouter');\n        \n        const localModel = availableModels.find(m => m.provider === 'local');\n        \n        const firstAvailableModel = availableModels[0];\n        \n        \n        defaultModelId = (\n          (internalModel && (internalModel.id || internalModel.modelId)) ||\n          (openRouterModel && (openRouterModel.id || openRouterModel.modelId)) ||\n          (localModel && (localModel.id || localModel.modelId)) ||\n          (firstAvailableModel && (firstAvailableModel.id || firstAvailableModel.modelId)) ||\n          'openrouter-claude-3-haiku' \n        );\n        \n        this.logger.info(`\uD3F4\uBC31 \uBAA8\uB378 ID\uB85C \uC124\uC815\uB428: ${defaultModelId}`);\n      } else {\n        this.logger.info(`\uD604\uC7AC \uAE30\uBCF8 \uBAA8\uB378: ${defaultModelId}`);\n      }\n      \n      \n      if (defaultModelId && (defaultModelId.includes('/') || defaultModelId.includes(':'))) {\n        const cleanModelId = defaultModelId.replace(/[\\/:.]/g, '-');\n        this.logger.info(`\uBAA8\uB378 ID\uC5D0 \uD2B9\uC218 \uBB38\uC790 \uD3EC\uD568, \uC815\uB9AC\uB428: ${defaultModelId} -> ${cleanModelId}`);\n        defaultModelId = cleanModelId;\n      }\n      \n      \n      if (defaultModelId) {\n        const selectedModel = availableModels.find(m => \n          (m.id === defaultModelId) || (m.modelId === defaultModelId)\n        );\n        \n        if (selectedModel) {\n          this.logger.info(`\uC120\uD0DD\uB41C \uBAA8\uB378 \uC815\uBCF4: ${JSON.stringify({\n            id: selectedModel.id || selectedModel.modelId,\n            name: selectedModel.name,\n            provider: selectedModel.provider\n          })}`);\n        }\n      }\n      \n      \n      if (this._view && this._view.visible && defaultModelId) {\n        try {\n          this._view.webview.postMessage({\n            command: 'setCurrentModel',\n            modelId: defaultModelId\n          });\n          this.logger.info(`\uD604\uC7AC \uBAA8\uB378 ID(${defaultModelId}) \uC804\uC1A1 \uC131\uACF5`);\n          \n          \n          vscode.workspace.getConfiguration('ape.llm').update(\n            'defaultModel', \n            defaultModelId, \n            vscode.ConfigurationTarget.Global\n          ).then(() => {\n            this.logger.info(`\uBAA8\uB378 ID\uAC00 \uC124\uC815\uC5D0 \uC800\uC7A5\uB428: ${defaultModelId}`);\n          }).catch(err => {\n            this.logger.error('\uC124\uC815 \uC800\uC7A5 \uC911 \uC624\uB958:', err);\n          });\n        } catch (postError) {\n          this.logger.error('\uD604\uC7AC \uBAA8\uB378 ID \uC804\uC1A1 \uC911 \uC624\uB958:', postError);\n        }\n      }\n    } catch (error: unknown) {\n      this.logger.error('\uD604\uC7AC \uBAA8\uB378 \uC804\uC1A1 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.logger.error('\uC624\uB958 \uC0C1\uC138:', error instanceof Error ? error.stack : 'Error stack not available');\n      \n      \n      try {\n        \n        const fallbackModelIds = [\n          'narrans-emergency',        \n          'openrouter-claude-3-haiku', \n          'local-emergency'           \n        ];\n        \n        let selectedFallback = fallbackModelIds[0]; \n        \n        \n        const currentHour = new Date().getHours();\n        if (currentHour % 3 === 0) {\n          selectedFallback = fallbackModelIds[0];\n        } else if (currentHour % 3 === 1) {\n          selectedFallback = fallbackModelIds[1];\n        } else {\n          selectedFallback = fallbackModelIds[2];\n        }\n        \n        this.logger.info(`\uC624\uB958 \uBC1C\uC0DD\uC73C\uB85C \uC778\uD55C \uD3F4\uBC31 \uBAA8\uB378 ID \uC120\uD0DD: ${selectedFallback}`);\n        \n        if (this._view && this._view.visible) {\n          this._view.webview.postMessage({\n            command: 'setCurrentModel',\n            modelId: selectedFallback\n          });\n          this.logger.info('\uC624\uB958 \uBCF5\uAD6C \uBAA8\uB378 ID \uC804\uC1A1 \uC131\uACF5');\n        }\n      } catch (postError) {\n        this.logger.error('\uC624\uB958 \uBCF5\uAD6C \uBAA8\uB378 ID \uC804\uC1A1 \uC911 \uCD94\uAC00 \uC624\uB958:', postError);\n      }\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uBAA9\uB85D \uC804\uC1A1\n   */\n  private async _sendCommandsList() {\n    if (!this._view) {\n      return;\n    }\n    \n    try {\n      \n      // CoreService\uB294 \uC0DD\uC131\uC790\uC5D0\uC11C \uC8FC\uC785\uB418\uBBC0\uB85C \uAC80\uC0AC \uD544\uC694 \uC5C6\uC74C\n      const coreService = this._coreService;\n      const commandRegistry = coreService.commandRegistry;\n      \n      \n      const allUsages = commandRegistry.getAllCommandUsages();\n      \n      \n      const commands = allUsages.map(usage => {\n        \n        const isAtCommand = usage.syntax.startsWith('@');\n        const isSlashCommand = usage.syntax.startsWith('/');\n        \n        \n        let domain = '';\n        if (isAtCommand && usage.domain) {\n          domain = usage.domain;\n        } else if (isSlashCommand) {\n          domain = 'system';\n        }\n        \n        \n        const isFavorite = ['help', 'model', 'debug', 'clear'].includes(usage.command);\n        \n        return {\n          id: usage.syntax,\n          label: usage.command,\n          description: usage.description,\n          syntax: usage.syntax,\n          examples: usage.examples || [],\n          type: isAtCommand ? 'at' : (isSlashCommand ? 'slash' : 'other'),\n          domain: domain,\n          frequent: isFavorite,\n          iconName: this._getIconForCommand(usage.command, domain)\n        };\n      });\n      \n      \n      const dynamicData = await this._getDynamicData();\n      \n      \n      this._view.webview.postMessage({\n        command: 'updateCommands',\n        commands: commands,\n        dynamicData: dynamicData\n      });\n      \n      this.logger.info(`${commands.length}\uAC1C\uC758 \uBA85\uB839\uC5B4\uC640 \uB3D9\uC801 \uB370\uC774\uD130\uB97C \uC6F9\uBDF0\uB85C \uC804\uC1A1\uD588\uC2B5\uB2C8\uB2E4.`);\n    } catch (error) {\n      this.logger.error('\uBA85\uB839\uC5B4 \uBAA9\uB85D \uC804\uC1A1 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * \uB3D9\uC801 \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30 (Git \uBE0C\uB79C\uCE58 \uBC0F \uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4)\n   * @returns \uB3D9\uC801 \uB370\uC774\uD130 \uAC1D\uCCB4\n   */\n  private async _getDynamicData(): Promise<Record<string, unknown>> {\n    try {\n      \n      // CoreService\uB294 \uC0DD\uC131\uC790\uC5D0\uC11C \uC8FC\uC785\uB418\uBBC0\uB85C \uAC80\uC0AC \uD544\uC694 \uC5C6\uC74C\n      const coreService = this._coreService;\n      const pluginRegistry = coreService.pluginRegistry;\n      const commandService = coreService.commandService;\n      \n      \n      const dynamicData: Record<string, unknown> = {};\n      \n      \n      const gitPlugin = pluginRegistry ? pluginRegistry.getPlugin('git') : null;\n      \n      if (gitPlugin) {\n        \n        try {\n          \n          const gitClient = (gitPlugin as {client?: {getBranches?: (showRemote: boolean) => Promise<string[]>}}).client;\n          \n          if (gitClient && typeof gitClient.getBranches === 'function') {\n            \n            const branches = await gitClient.getBranches(true);\n            \n            if (branches && Array.isArray(branches)) {\n              \n              dynamicData['gitBranches'] = branches;\n              this.logger.info(`Git \uBE0C\uB79C\uCE58 \uC815\uBCF4 \uB85C\uB4DC \uC644\uB8CC: ${branches.length}\uAC1C \uBE0C\uB79C\uCE58`);\n            }\n          }\n        } catch (gitError) {\n          this.logger.error('Git \uBE0C\uB79C\uCE58 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30 \uC2E4\uD328:', gitError);\n        }\n      }\n      \n      \n      if (commandService) {\n        try {\n          \n          const contextCache = commandService.getContextCache();\n          \n          \n          const baseCommands = [\n            \n            { id: '@git:commit', label: 'Git \uCEE4\uBC0B' },\n            { id: '@git:push', label: 'Git \uD478\uC2DC' },\n            { id: '@git:checkout', label: 'Git \uCCB4\uD06C\uC544\uC6C3' },\n            { id: '@git:branch', label: 'Git \uBE0C\uB79C\uCE58 \uC0DD\uC131' },\n            \n            \n            { id: '@jira:issue', label: 'Jira \uC774\uC288 \uC870\uD68C' },\n            { id: '@jira:create', label: 'Jira \uC774\uC288 \uC0DD\uC131' },\n            { id: '@jira:search', label: 'Jira \uC774\uC288 \uAC80\uC0C9' },\n            \n            \n            { id: '@swdp:build', label: 'SWDP \uBE4C\uB4DC' },\n            { id: '@swdp:build-status', label: 'SWDP \uBE4C\uB4DC \uC0C1\uD0DC' },\n            { id: '@swdp:test', label: 'SWDP \uD14C\uC2A4\uD2B8' },\n            \n            \n            { id: '@pocket:ls', label: 'Pocket \uD30C\uC77C \uBAA9\uB85D' },\n            { id: '@pocket:load', label: 'Pocket \uD30C\uC77C \uB85C\uB4DC' },\n            { id: '@pocket:search', label: 'Pocket \uD30C\uC77C \uAC80\uC0C9' }\n          ];\n          \n          \n          const contextCommands: {id: string; label: string; description: string; type: string; group: string; contextual: boolean}[] = [];\n          \n          \n          for (const baseCmd of baseCommands) {\n            try {\n              const result = await commandService.generateContextualCommand(baseCmd.id);\n              \n              \n              if (Array.isArray(result)) {\n                \n                result.forEach((cmdStr, index) => {\n                  contextCommands.push({\n                    id: cmdStr,\n                    label: `${baseCmd.label} (\uCEE8\uD14D\uC2A4\uD2B8 \uC635\uC158 ${index + 1})`,\n                    description: '\uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uCD94\uCC9C \uBA85\uB839\uC5B4',\n                    type: 'at',\n                    group: cmdStr.split(':')[0].replace('@', ''),\n                    contextual: true\n                  });\n                });\n              } else if (typeof result === 'string' && result !== baseCmd.id) {\n                \n                contextCommands.push({\n                  id: result,\n                  label: `${baseCmd.label} (\uCEE8\uD14D\uC2A4\uD2B8 \uCD94\uCC9C)`,\n                  description: '\uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uCD94\uCC9C \uBA85\uB839\uC5B4',\n                  type: 'at',\n                  group: result.split(':')[0].replace('@', ''),\n                  contextual: true\n                });\n              }\n            } catch (cmdError) {\n              this.logger.error(`\uCEE8\uD14D\uC2A4\uD2B8 \uBA85\uB839\uC5B4 \uC0DD\uC131 \uC624\uB958 (${baseCmd.id}):`, cmdError);\n            }\n          }\n          \n          \n          if (contextCommands.length > 0) {\n            dynamicData['contextCommands'] = contextCommands;\n            this.logger.info(`\uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4 ${contextCommands.length}\uAC1C \uC0DD\uC131 \uC644\uB8CC`);\n          }\n        } catch (contextError) {\n          this.logger.error('\uCEE8\uD14D\uC2A4\uD2B8 \uAE30\uBC18 \uBA85\uB839\uC5B4 \uC0DD\uC131 \uC911 \uC624\uB958:', contextError);\n        }\n      }\n      \n      return dynamicData;\n    } catch (error) {\n      this.logger.error('\uB3D9\uC801 \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return {};\n    }\n  }\n  \n  /**\n   * TreeView \uC561\uC158 \uCC98\uB9AC\n   * @param message \uD2B8\uB9AC\uBDF0 \uC561\uC158 \uBA54\uC2DC\uC9C0\n   */\n  private _handleTreeViewAction(message: {actionType: string; item: {id?: string; type: string}}) {\n    this.logger.info('TreeView \uC561\uC158 \uCC98\uB9AC:', message);\n    \n    const actionType = message.actionType;\n    const item = message.item;\n    \n    if (!actionType || !item) {\n      return;\n    }\n    \n    switch (actionType) {\n      case 'select':\n        \n        this._handleTreeItemSelection(item);\n        break;\n        \n      case 'execute':\n        \n        if (item.type === 'command' && item.id) {\n          this._executeCommand(item.id);\n        }\n        break;\n        \n      case 'showDetails':\n        \n        if (item.type === 'command' && item.id) {\n          this._showCommandDetails({id: item.id, type: item.type});\n        }\n        break;\n    }\n  }\n  \n  /**\n   * TreeView \uC544\uC774\uD15C \uC120\uD0DD \uCC98\uB9AC\n   * @param item \uC120\uD0DD\uB41C \uD2B8\uB9AC \uC544\uC774\uD15C\n   */\n  private _handleTreeItemSelection(item: {type: string; id?: string}) {\n    this.logger.info('TreeView \uC544\uC774\uD15C \uC120\uD0DD:', item);\n    \n    \n    switch (item.type) {\n      case 'command':\n        \n        if (this._view && item.id) {\n          this._view.webview.postMessage({\n            command: 'highlightCommand',\n            commandId: item.id\n          });\n        }\n        break;\n        \n      case 'chat-session':\n        \n        if (this._view && item.id) {\n          \n          this.logger.info('\uCC44\uD305 \uC138\uC158 \uB85C\uB4DC:', item.id);\n        }\n        break;\n    }\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uC138\uBD80 \uC815\uBCF4 \uD45C\uC2DC\n   * @param item \uBA85\uB839\uC5B4 \uC544\uC774\uD15C\n   */\n  private _showCommandDetails(item: {id: string; type: string}) {\n    if (!this._view) {\n      return;\n    }\n    \n    this.logger.info('\uBA85\uB839\uC5B4 \uC138\uBD80 \uC815\uBCF4 \uD45C\uC2DC:', item);\n    \n    \n    this._view.webview.postMessage({\n      command: 'showCommandDetail',\n      commandItem: item\n    });\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4\uC5D0 \uC801\uD569\uD55C \uC544\uC774\uCF58 \uACB0\uC815\n   * @param command \uBA85\uB839\uC5B4 \uC774\uB984\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @returns \uC544\uC774\uCF58 \uAC1D\uCCB4 {icon: string, source: string}\n   */\n  /**\n   * \uBDF0 \uD06C\uAE30 \uC815\uBCF4 \uC804\uC1A1 - \uC6F9\uBDF0 \uB808\uC774\uC544\uC6C3 \uC870\uC815\uC5D0 \uC0AC\uC6A9\uB428\n   */\n  private _sendViewDimensions(): void {\n    if (!this._view || !this._view.visible) {\n      return;\n    }\n    \n    try {\n      // \uBDF0 \uC0C1\uD0DC \uC815\uBCF4\uB97C \uC6F9\uBDF0\uC5D0 \uC804\uC1A1\n      this._view.webview.postMessage({\n        command: 'viewDimensions',\n        // \uC2E4\uC81C \uCE58\uC218\uB294 \uC6F9\uBDF0\uC5D0\uC11C window.innerWidth/Height\uB85C \uC811\uADFC\uD568\n        visible: true,\n        timestamp: Date.now()\n      });\n      \n      this.logger.debug('\uBDF0 \uD06C\uAE30 \uC815\uBCF4 \uC804\uC1A1\uB428');\n    } catch (error) {\n      this.logger.error('\uBDF0 \uD06C\uAE30 \uC815\uBCF4 \uC804\uC1A1 \uC2E4\uD328:', error);\n    }\n  }\n    \n  private _getIconForCommand(command: string, domain: string): {icon: string; source: string} {\n    \n    const domainIcons: {[key: string]: {icon: string, source: string}} = {\n      'system': { icon: 'gear-six', source: 'phosphor' },\n      'git': { icon: 'git-branch', source: 'phosphor' },\n      'doc': { icon: 'file-text', source: 'phosphor' },\n      'jira': { icon: 'kanban', source: 'phosphor' },\n      'pocket': { icon: 'archive-box', source: 'phosphor' },\n      'vault': { icon: 'database', source: 'phosphor' },\n      'rules': { icon: 'scales', source: 'phosphor' },\n      'swdp': { icon: 'infinity', source: 'phosphor' }\n    };\n    \n    \n    const commandIcons: {[key: string]: {icon: string, source: string}} = {\n      \n      'commit': { icon: 'git-commit', source: 'phosphor' },\n      'push': { icon: 'arrow-up', source: 'phosphor' },\n      'pull': { icon: 'git-pull-request', source: 'phosphor' },\n      'branch': { icon: 'git-branch', source: 'phosphor' },\n      'merge': { icon: 'git-merge', source: 'phosphor' },\n      'clone': { icon: 'copy', source: 'phosphor' },\n      \n      \n      'issue': { icon: 'note-pencil', source: 'phosphor' },\n      'ticket': { icon: 'note-pencil', source: 'phosphor' },\n      'bug': { icon: 'bug', source: 'phosphor' },\n      'task': { icon: 'clipboard-text', source: 'phosphor' },\n      \n      \n      'help': { icon: 'question', source: 'phosphor' },\n      'model': { icon: 'robot', source: 'phosphor' },\n      'debug': { icon: 'bug', source: 'phosphor' },\n      'clear': { icon: 'trash', source: 'phosphor' },\n      'settings': { icon: 'gear-six', source: 'phosphor' },\n      'config': { icon: 'sliders', source: 'phosphor' },\n      'search': { icon: 'magnifying-glass', source: 'phosphor' },\n      'list': { icon: 'list', source: 'phosphor' },\n      'build': { icon: 'hammer', source: 'phosphor' },\n      'deploy': { icon: 'cloud-arrow-up', source: 'phosphor' },\n      'test': { icon: 'test-tube', source: 'phosphor' },\n      'document': { icon: 'file-text', source: 'phosphor' },\n      'save': { icon: 'floppy-disk', source: 'phosphor' },\n    };\n    \n    \n    if (commandIcons[command]) {\n      return commandIcons[command];\n    }\n    \n    \n    for (const [keyword, icon] of Object.entries(commandIcons)) {\n      if (command.includes(keyword)) {\n        return icon;\n      }\n    }\n    \n    \n    return domainIcons[domain] || { icon: 'terminal', source: 'phosphor' };\n  }\n\n  /**\n   * \uBA85\uB839\uC5B4 \uC2E4\uD589\n   */\n  private async _executeCommand(commandId: string): Promise<void> {\n    if (!this._view) {\n      return;\n    }\n    \n    try {\n      this.logger.info(`\uBA85\uB839\uC5B4 \uC2E4\uD589: ${commandId}`);\n      \n      \n      this._sendResponse(`\uBA85\uB839\uC5B4 '${commandId}' \uC2E4\uD589 \uC911...`, 'system');\n      \n      \n      const isInternalCommand = commandId.startsWith('/');\n      const isExternalCommand = commandId.startsWith('@');\n      \n      if (isInternalCommand || isExternalCommand) {\n        \n        const result = await this._chatService.processMessage(commandId);\n        \n        \n        if (result) {\n          \n          if (this._view && this._view.visible) {\n            this._view.webview.postMessage({\n              command: 'removeSystemMessage',\n              content: `\uBA85\uB839\uC5B4 '${commandId}' \uC2E4\uD589 \uC911...`\n            });\n          }\n          \n          \n          let isError = false;\n          \n          \n          const isCommandResult = (obj: unknown): obj is CommandResult => {\n            return obj !== null && typeof obj === 'object' && 'success' in obj;\n          };\n          \n          if (typeof result === 'object' && result !== null) {\n            \n            if (result && isCommandResult(result)) {\n              \n              const typedResult = result as CommandResult;\n              \n              \n              if (typedResult.message) {\n                const responseType = typedResult.error ? 'system' : 'assistant';\n                isError = !!typedResult.error;\n                this._sendResponse(typedResult.message, responseType);\n              } else {\n                this._sendResponse(JSON.stringify(typedResult, null, 2), 'assistant');\n              }\n            } \n            \n            else if (result && 'content' in result) {\n              const content = (result as {content: string}).content;\n              const hasError = 'error' in result && !!(result as {error?: unknown}).error;\n              const responseType = hasError ? 'system' : 'assistant';\n              isError = hasError;\n              this._sendResponse(content, responseType);\n            } \n            \n            else {\n              this._sendResponse(JSON.stringify(result, null, 2), 'assistant');\n            }\n          } \n          \n          else {\n            this._sendResponse(String(result), 'assistant');\n          }\n          \n          \n          if (this._view && this._view.visible) {\n            this._view.webview.postMessage({\n              command: 'commandExecuted',\n              commandId: commandId,\n              success: !isError\n            });\n          }\n        }\n      } else {\n        \n        vscode.commands.executeCommand(commandId)\n          .then(result => {\n            this.logger.info('VS Code \uBA85\uB839\uC5B4 \uC2E4\uD589 \uACB0\uACFC:', result);\n            \n            this._sendResponse(`\uBA85\uB839\uC5B4 '${commandId}' \uC2E4\uD589 \uC644\uB8CC`, 'system');\n          }, (error: unknown) => {\n            \n            this.logger.error('VS Code \uBA85\uB839\uC5B4 \uC2E4\uD589 \uC624\uB958:', error);\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            this._sendResponse(`\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC624\uB958: ${errorMessage}`, 'system');\n          });\n      }\n    } catch (error) {\n      this.logger.error('\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this._sendResponse(`\uBA85\uB839\uC5B4 \uC2E4\uD589 \uC911 \uC624\uB958 \uBC1C\uC0DD: ${error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`, 'system');\n    }\n  }\n  \n  /**\n   * \uBAA8\uB378 \uBCC0\uACBD\n   */\n  /**\n   * \uD604\uC7AC \uB300\uD654 \uC800\uC7A5\n   */\n  public saveCurrentSession(): void {\n    try {\n      this.logger.info('\uD604\uC7AC \uB300\uD654 \uC800\uC7A5 \uC2DC\uB3C4');\n      \n      vscode.window.showInputBox({\n        prompt: '\uC800\uC7A5\uD560 \uB300\uD654 \uC138\uC158\uC758 \uC81C\uBAA9\uC744 \uC785\uB825\uD558\uC138\uC694',\n        placeHolder: '\uC81C\uBAA9 \uC5C6\uC74C'\n      }).then(title => {\n        if (title !== undefined) {\n          try {\n            this._chatService.saveCurrentSession(title);\n            \n            vscode.window.showInformationMessage('\uB300\uD654\uAC00 \uC800\uC7A5\uB418\uC5C8\uC2B5\uB2C8\uB2E4.');\n            \n            // \uD2B8\uB9AC\uBDF0 \uC0C8\uB85C\uACE0\uCE68\n            vscode.commands.executeCommand('ape.refreshTreeView');\n          } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            this.logger.error('\uB300\uD654 \uC800\uC7A5 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n            \n            if (this._view) {\n              this._view.webview.postMessage({\n                command: 'addMessage',\n                type: 'system',\n                content: `\uB300\uD654\uB97C \uC800\uC7A5\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4: ${errorMessage}`\n              });\n            }\n            \n            vscode.window.showErrorMessage(`\uB300\uD654\uB97C \uC800\uC7A5\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4: ${errorMessage}`);\n          }\n        }\n      });\n    } catch (error) {\n      this.logger.error('\uB300\uD654 \uC800\uC7A5 \uC785\uB825 \uC0C1\uC790 \uD45C\uC2DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  private _changeModel(modelId: string): void {\n    if (!modelId) {\n      this.logger.warn('_changeModel: \uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uBAA8\uB378 ID\uB85C \uD638\uCD9C\uB428');\n      return;\n    }\n    \n    try {\n      this.logger.info(`\uBAA8\uB378 \uBCC0\uACBD \uC694\uCCAD - DEBUG \uBC84\uC804: ${modelId}`);\n      \n      \n      // CoreService\uB294 \uC0DD\uC131\uC790\uC5D0\uC11C \uC8FC\uC785\uB418\uBBC0\uB85C \uAC80\uC0AC \uD544\uC694 \uC5C6\uC74C\n      const coreService = this._coreService;\n      \n      const llmService = coreService.llmService;\n      if (!llmService) {\n        this.logger.error('_changeModel: llmService\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n        throw new Error('LLM \uC11C\uBE44\uC2A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      }\n      \n      \n      const currentDefaultId = llmService.getDefaultModelId();\n      this.logger.info(`\uD604\uC7AC \uAE30\uBCF8 \uBAA8\uB378: ${currentDefaultId || 'none'}, \uBCC0\uACBD \uC694\uCCAD \uBAA8\uB378: ${modelId}`);\n      \n      if (currentDefaultId && currentDefaultId === modelId) {\n        this.logger.info(`\uD604\uC7AC \uBAA8\uB378\uACFC \uB3D9\uC77C\uD55C \uBAA8\uB378(${modelId})\uB85C \uBCC0\uACBD \uC694\uCCAD, \uBB34\uC2DC\uD568`);\n        \n        \n        if (this._view && this._view.visible) {\n          this._view.webview.postMessage({\n            command: 'modelChanged',\n            modelId: modelId,\n            success: true,\n            changed: false\n          });\n        }\n        return;\n      }\n      \n      \n      this.logger.info('\uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uBAA8\uB378 \uBAA9\uB85D \uC870\uD68C \uC911...');\n      const models = llmService.getAvailableModels();\n      this.logger.info(`\uCD1D ${models.length}\uAC1C\uC758 \uBAA8\uB378 \uC870\uD68C\uB428`);\n      \n      \n      models.forEach((model, idx) => {\n        this.logger.info(`\uBAA8\uB378 ${idx+1}:`, {\n          id: model.id || '[\uC5C6\uC74C]',\n          modelId: model.modelId || '[\uC5C6\uC74C]',\n          name: model.name,\n          provider: model.provider || '[\uC5C6\uC74C]',\n          apiModel: model.apiModel || '[\uC5C6\uC74C]'\n        });\n      });\n      \n      \n      const validModel = models.find(model => {\n        const possibleIds = [\n          model.id,\n          model.modelId,\n          model.apiModel ? model.apiModel.replace(/[\\/:.]/g, '-') : null,\n          \n          model.name ? `${model.provider || 'model'}-${model.name.toLowerCase().replace(/\\s+/g, '-')}` : null\n        ].filter(Boolean); \n        \n        this.logger.info(`\uBAA8\uB378 ${model.name} \uAC00\uB2A5\uD55C ID \uBAA9\uB85D:`, possibleIds);\n        \n        return possibleIds.includes(modelId);\n      });\n      \n      if (!validModel) {\n        this.logger.warn(`\uC694\uCCAD\uB41C \uBAA8\uB378 ID '${modelId}'\uAC00 \uC720\uD6A8\uD55C \uBAA8\uB378 \uBAA9\uB85D\uC5D0 \uC5C6\uC2B5\uB2C8\uB2E4.`);\n        this.logger.info('===== \uC720\uD6A8\uD55C \uBAA8\uB378 \uBAA9\uB85D (ID \uAE30\uC900) =====');\n        models.forEach((model, idx) => {\n          this.logger.info(`${idx+1}. ${model.id || model.modelId || '[ID \uC5C6\uC74C]'}: ${model.name}`);\n        });\n        \n        \n        this.logger.info('\uBAA8\uB378 \uC720\uD6A8\uC131 \uAC80\uC0AC \uC2E4\uD328\uD588\uC73C\uB098 \uACC4\uC18D \uC9C4\uD589\uD569\uB2C8\uB2E4. \uC678\uBD80\uC5D0\uC11C \uCD94\uAC00\uB41C \uBAA8\uB378\uC77C \uC218 \uC788\uC2B5\uB2C8\uB2E4.');\n      } else {\n        this.logger.info(`\uC720\uD6A8\uD55C \uBAA8\uB378\uC744 \uCC3E\uC558\uC2B5\uB2C8\uB2E4: ${validModel.name} (ID: ${validModel.id || validModel.modelId})`);\n      }\n      \n      \n      this.logger.info(`VS Code \uC124\uC815\uC5D0 \uBAA8\uB378 ID(${modelId}) \uC800\uC7A5 \uC2DC\uB3C4...`);\n      const config = vscode.workspace.getConfiguration('ape.llm');\n      \n      config.update('defaultModel', modelId, vscode.ConfigurationTarget.Global)\n        .then(() => {\n          this.logger.info(`\uBAA8\uB378\uC774 ${modelId}\uB85C \uBCC0\uACBD\uB418\uC5C8\uC2B5\uB2C8\uB2E4.`);\n          \n          \n          if (this._view && this._view.visible) {\n            this.logger.info('\uC6F9\uBDF0\uC5D0 \uBAA8\uB378 \uBCC0\uACBD \uC131\uACF5 \uC54C\uB9BC \uC804\uC1A1');\n            this._view.webview.postMessage({\n              command: 'modelChanged',\n              modelId: modelId,\n              success: true,\n              changed: true\n            });\n            \n            \n            const modelName = validModel ? validModel.name : modelId;\n            this.logger.info(`\uC2DC\uC2A4\uD15C \uBA54\uC2DC\uC9C0\uB85C \uBAA8\uB378 \uBCC0\uACBD \uC54C\uB9BC: ${modelName}`);\n            this._sendResponse(`\uBAA8\uB378\uC774 '${modelName}'(\uC73C)\uB85C \uBCC0\uACBD\uB418\uC5C8\uC2B5\uB2C8\uB2E4.`, 'system');\n          }\n        }, (err: Error) => {\n          this.logger.error('\uC124\uC815 \uC5C5\uB370\uC774\uD2B8 \uC911 \uC624\uB958 \uBC1C\uC0DD:', err);\n          this.logger.error('\uC624\uB958 \uC0C1\uC138:', err.stack);\n          \n          \n          if (this._view && this._view.visible) {\n            this.logger.info('\uC6F9\uBDF0\uC5D0 \uBAA8\uB378 \uBCC0\uACBD \uC2E4\uD328 \uC54C\uB9BC \uC804\uC1A1');\n            this._view.webview.postMessage({\n              command: 'modelChanged',\n              modelId: modelId,\n              success: false,\n              error: err.message || '\uC124\uC815 \uC5C5\uB370\uC774\uD2B8 \uC2E4\uD328'\n            });\n          }\n        });\n    } catch (error) {\n      this.logger.error('\uBAA8\uB378 \uBCC0\uACBD \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      this.logger.error('\uC624\uB958 \uC0C1\uC138:', error instanceof Error ? error.stack : '\uC2A4\uD0DD \uC815\uBCF4 \uC5C6\uC74C');\n      \n      \n      if (this._view && this._view.visible) {\n        try {\n          this.logger.info('\uC6F9\uBDF0\uC5D0 \uBAA8\uB378 \uBCC0\uACBD \uC624\uB958 \uC54C\uB9BC \uC804\uC1A1');\n          this._view.webview.postMessage({\n            command: 'modelChanged',\n            modelId: modelId,\n            success: false,\n            error: error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'\n          });\n        } catch (postError) {\n          this.logger.error('\uC624\uB958 \uC54C\uB9BC \uC804\uC1A1 \uC911 \uCD94\uAC00 \uC624\uB958:', postError);\n        }\n      }\n    }\n  }\n\n  /**\n   * \uCC44\uD305 \uCD08\uAE30\uD654\n   */\n  public clearChat() {\n    if (this._view) {\n      this._view.webview.postMessage({\n        command: 'clearChat'\n      });\n      \n      \n      setTimeout(() => {\n        this._view?.webview.postMessage({\n          command: 'addMessage',\n          type: 'system',\n          content: '\uCC44\uD305\uC774 \uCD08\uAE30\uD654\uB418\uC5C8\uC2B5\uB2C8\uB2E4.'\n        });\n        \n        \n        setTimeout(() => {\n          this._sendResponse(this._chatService.getWelcomeMessage(), 'assistant');\n        }, 500);\n      }, 100);\n    }\n  }\n\n  /**\n   * HTML \uB0B4\uC6A9 \uC0DD\uC131\n   */\n  private _getHtmlContent(webview: vscode.Webview) {\n    \n    const htmlPath = vscode.Uri.joinPath(this._extensionUri, 'resources', 'html', 'chat.html');\n    \n    \n    const webviewResourceBaseUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'resources'));\n    \n    try {\n      \n      if (!fs.existsSync(htmlPath.fsPath)) {\n        this.logger.error(`HTML \uD30C\uC77C\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4: ${htmlPath.fsPath}`);\n        throw new Error('HTML \uD30C\uC77C\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n      }\n      \n      \n      const resourceMap = this._createResourceMap(webview);\n      \n      \n      let htmlContent = fs.readFileSync(htmlPath.fsPath, 'utf8');\n      \n      \n      const cspSource = webview.cspSource;\n      htmlContent = htmlContent.replace(/\\$\\{cspSource\\}/g, cspSource);\n      htmlContent = htmlContent.replace(/\\$\\{webviewResourceBaseUri\\}/g, webviewResourceBaseUri.toString());\n      \n      \n      for (const [key, uri] of Object.entries(resourceMap)) {\n        const placeholder = `\\$\\{${key}\\}`;\n        const regex = new RegExp(placeholder, 'g');\n        htmlContent = htmlContent.replace(regex, uri.toString());\n      }\n      \n      this.logger.info('HTML \uD30C\uC77C \uB85C\uB4DC \uC131\uACF5:', htmlPath.fsPath);\n      this.logger.info('\uAE30\uBCF8 \uB9AC\uC18C\uC2A4 \uACBD\uB85C:', webviewResourceBaseUri.toString());\n      \n      return htmlContent;\n    } catch (error) {\n      this.logger.error('HTML \uD30C\uC77C\uC744 \uC77D\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      \n      \n      return `<!DOCTYPE html>\n      <html lang=\"ko\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${webview.cspSource} 'unsafe-inline'; script-src ${webview.cspSource} 'unsafe-inline';\">\n        <title>APE \uCC44\uD305</title>\n        <style>\n          body {\n            font-family: var(--vscode-font-family);\n            padding: 20px;\n            color: var(--vscode-foreground);\n          }\n          .error {\n            color: var(--vscode-errorForeground);\n            margin-top: 20px;\n          }\n        </style>\n      </head>\n      <body>\n        <h1>APE \uCC44\uD305</h1>\n        <div class=\"error\">\n          <p>\uC624\uB958: \uCC44\uD305 \uC778\uD130\uD398\uC774\uC2A4\uB97C \uB85C\uB4DC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.</p>\n          <p>HTML \uD30C\uC77C\uC744 \uCC3E\uC744 \uC218 \uC5C6\uAC70\uB098 \uC77D\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.</p>\n          <p>\uACBD\uB85C: ${htmlPath.fsPath}</p>\n        </div>\n        <script>\n          const vscode = acquireVsCodeApi();\n        </script>\n      </body>\n      </html>`;\n    }\n  }\n\n  /**\n   * \uB9AC\uC18C\uC2A4 URI \uB9E4\uD551 \uC0DD\uC131\n   * @param webview VS Code \uC6F9\uBDF0 \uC778\uC2A4\uD134\uC2A4\n   * @returns \uB9AC\uC18C\uC2A4 \uD0A4\uC640 URI \uB9E4\uD551 \uAC1D\uCCB4\n   */\n  private _createResourceMap(webview: vscode.Webview): Record<string, vscode.Uri> {\n    \n    const cssResources = {\n      \n      cssUri: this._getUri(webview, 'resources', 'css', 'main.css'),\n      \n      \n      codiconsUri: this._getUri(webview, 'resources', 'codicons', 'codicon.css'),\n      \n      \n      phosphorIconsCssUri: this._getUri(webview, 'resources', 'fonts', 'phosphor', 'css', 'regular.css')\n    };\n    \n    \n    const jsResources = {\n      \n      modelSelectorJsUri: this._getUri(webview, 'resources', 'js', 'components', 'model-selector.js'),\n      codeBlocksJsUri: this._getUri(webview, 'resources', 'js', 'components', 'code-blocks.js'),\n      commandButtonsJsUri: this._getUri(webview, 'resources', 'js', 'components', 'command-buttons.js'),\n      \n      \n      apeUiJsUri: this._getUri(webview, 'resources', 'js', 'core', 'ape-ui.js'),\n      \n      \n      loggerJsUri: this._getUri(webview, 'resources', 'js', 'utils', 'logger.js'),\n      domUtilsJsUri: this._getUri(webview, 'resources', 'js', 'utils', 'dom-utils.js'),\n      eventBusJsUri: this._getUri(webview, 'resources', 'js', 'utils', 'event-bus.js')\n    };\n    \n    \n    const htmlResources = {\n      commandsHtmlUri: this._getUri(webview, 'resources', 'html', 'command-buttons.html')\n    };\n    \n    \n    return {\n      ...cssResources,\n      ...jsResources,\n      ...htmlResources\n    };\n  }\n  \n  /**\n   * \uC548\uC804\uD55C URI \uC0DD\uC131 \uD5EC\uD37C \uBA54\uC18C\uB4DC\n   * \uD30C\uC77C\uC774 \uC874\uC7AC\uD558\uC9C0 \uC54A\uC544\uB3C4 URI\uB294 \uD56D\uC0C1 \uC0DD\uC131\n   */\n  private _getUri(webview: vscode.Webview, ...pathSegments: string[]): vscode.Uri {\n    return webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, ...pathSegments));\n  }\n}", "/**\r\n * \uCC44\uD305 \uD788\uC2A4\uD1A0\uB9AC \uC11C\uBE44\uC2A4\r\n * \uB300\uD654 \uD788\uC2A4\uD1A0\uB9AC \uC601\uAD6C \uC800\uC7A5 \uBC0F \uAD00\uB9AC \uB2F4\uB2F9\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { ChatMessage } from './ChatService';\r\n\r\nexport interface ChatSession {\r\n  id: string;\r\n  title: string;\r\n  timestamp: number;\r\n  messages: ChatMessage[];\r\n}\r\n\r\n/**\r\n * \uCC44\uD305 \uD788\uC2A4\uD1A0\uB9AC \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\r\n * \uCC44\uD305 \uC138\uC158 \uC800\uC7A5 \uBC0F \uB85C\uB4DC, \uAD00\uB9AC \uAE30\uB2A5 \uC81C\uACF5\r\n */\r\nexport class ChatHistoryService {\r\n  // \uC804\uC5ED \uC0C1\uD0DC\uC5D0 \uC800\uC7A5\uB420 \uD0A4\r\n  private readonly CHAT_HISTORY_KEY = 'ape.chatHistory';\r\n  // \uCD5C\uB300 \uC800\uC7A5 \uC138\uC158 \uC218\r\n  private readonly MAX_SESSIONS = 20;\r\n\r\n  constructor(\r\n    private readonly context: vscode.ExtensionContext\r\n  ) {}\r\n\r\n  /**\r\n   * \uC0C8 \uCC44\uD305 \uC138\uC158 \uC800\uC7A5\r\n   * @param title \uC138\uC158 \uC81C\uBAA9\r\n   * @param messages \uCC44\uD305 \uBA54\uC2DC\uC9C0 \uBC30\uC5F4\r\n   * @returns \uC800\uC7A5\uB41C \uC138\uC158 ID\r\n   */\r\n  public saveSession(title: string, messages: ChatMessage[]): string {\r\n    const sessions = this.getAllSessions();\r\n    \r\n    // \uC0C8 \uC138\uC158 ID \uC0DD\uC131 (\uD0C0\uC784\uC2A4\uD0EC\uD504 \uAE30\uBC18)\r\n    const sessionId = `session-${Date.now()}`;\r\n    \r\n    // \uC0C8 \uC138\uC158 \uC0DD\uC131\r\n    const newSession: ChatSession = {\r\n      id: sessionId,\r\n      title: title || this.generateSessionTitle(messages),\r\n      timestamp: Date.now(),\r\n      messages: [...messages]\r\n    };\r\n    \r\n    // \uC138\uC158 \uBAA9\uB85D \uC55E\uC5D0 \uCD94\uAC00\r\n    sessions.unshift(newSession);\r\n    \r\n    // \uCD5C\uB300 \uC800\uC7A5 \uAC1C\uC218 \uCD08\uACFC \uC2DC \uC624\uB798\uB41C \uD56D\uBAA9 \uC81C\uAC70\r\n    if (sessions.length > this.MAX_SESSIONS) {\r\n      sessions.splice(this.MAX_SESSIONS);\r\n    }\r\n    \r\n    // \uC804\uC5ED \uC0C1\uD0DC\uC5D0 \uC800\uC7A5\r\n    this.context.globalState.update(this.CHAT_HISTORY_KEY, sessions);\r\n    \r\n    return sessionId;\r\n  }\r\n\r\n  /**\r\n   * \uCC44\uD305 \uC138\uC158 \uB85C\uB4DC\r\n   * @param sessionId \uC138\uC158 ID\r\n   * @returns \uCC44\uD305 \uC138\uC158 \uB610\uB294 undefined\r\n   */\r\n  public getSession(sessionId: string): ChatSession | undefined {\r\n    const sessions = this.getAllSessions();\r\n    return sessions.find(session => session.id === sessionId);\r\n  }\r\n\r\n  /**\r\n   * \uBAA8\uB4E0 \uCC44\uD305 \uC138\uC158 \uAC00\uC838\uC624\uAE30\r\n   * @returns \uCC44\uD305 \uC138\uC158 \uBC30\uC5F4\r\n   */\r\n  public getAllSessions(): ChatSession[] {\r\n    const sessions = this.context.globalState.get<ChatSession[]>(this.CHAT_HISTORY_KEY, []);\r\n    return sessions;\r\n  }\r\n\r\n  /**\r\n   * \uCC44\uD305 \uC138\uC158 \uC0AD\uC81C\r\n   * @param sessionId \uC138\uC158 ID\r\n   * @returns \uC0AD\uC81C \uC131\uACF5 \uC5EC\uBD80\r\n   */\r\n  public deleteSession(sessionId: string): boolean {\r\n    const sessions = this.getAllSessions();\r\n    const initialLength = sessions.length;\r\n    \r\n    // ID\uB85C \uC138\uC158 \uD544\uD130\uB9C1\r\n    const filteredSessions = sessions.filter(session => session.id !== sessionId);\r\n    \r\n    // \uBCC0\uACBD\uB41C \uACBD\uC6B0\uC5D0\uB9CC \uC800\uC7A5\r\n    if (filteredSessions.length !== initialLength) {\r\n      this.context.globalState.update(this.CHAT_HISTORY_KEY, filteredSessions);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \uBAA8\uB4E0 \uCC44\uD305 \uD788\uC2A4\uD1A0\uB9AC \uC0AD\uC81C\r\n   */\r\n  public clearAllHistory(): void {\r\n    this.context.globalState.update(this.CHAT_HISTORY_KEY, []);\r\n  }\r\n\r\n  /**\r\n   * \uCC44\uD305 \uC138\uC158 \uC81C\uBAA9 \uC0DD\uC131\r\n   * @param messages \uCC44\uD305 \uBA54\uC2DC\uC9C0 \uBC30\uC5F4\r\n   * @returns \uC790\uB3D9 \uC0DD\uC131\uB41C \uC138\uC158 \uC81C\uBAA9\r\n   */\r\n  private generateSessionTitle(messages: ChatMessage[]): string {\r\n    // \uCCAB \uC0AC\uC6A9\uC790 \uBA54\uC2DC\uC9C0\uB97C \uCC3E\uC544 \uC81C\uBAA9 \uC0DD\uC131\r\n    const firstUserMessage = messages.find(msg => msg.type === 'user');\r\n    \r\n    if (firstUserMessage) {\r\n      // \uBA54\uC2DC\uC9C0\uAC00 \uAE34 \uACBD\uC6B0 \uC55E\uBD80\uBD84\uB9CC \uC0AC\uC6A9\r\n      const content = firstUserMessage.content;\r\n      const title = content.length > 30 \r\n        ? content.substring(0, 30) + '...' \r\n        : content;\r\n      \r\n      return title;\r\n    }\r\n    \r\n    // \uAE30\uBCF8 \uC81C\uBAA9 (\uB0A0\uC9DC \uD3EC\uD568)\r\n    const now = new Date();\r\n    return `\uB300\uD654 \uC138\uC158 ${now.toLocaleDateString('ko-KR')} ${now.toLocaleTimeString('ko-KR')}`;\r\n  }\r\n\r\n  /**\r\n   * \uB0A0\uC9DC\uBCC4\uB85C \uCC44\uD305 \uC138\uC158 \uADF8\uB8F9\uD654\r\n   * @returns \uB0A0\uC9DC\uBCC4\uB85C \uADF8\uB8F9\uD654\uB41C \uC138\uC158 \uB9F5\r\n   */\r\n  public getSessionsByDate(): Map<string, ChatSession[]> {\r\n    const sessions = this.getAllSessions();\r\n    const sessionsByDate = new Map<string, ChatSession[]>();\r\n    \r\n    // \uC624\uB298 \uB0A0\uC9DC\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    // \uC5B4\uC81C \uB0A0\uC9DC\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    \r\n    sessions.forEach(session => {\r\n      const sessionDate = new Date(session.timestamp);\r\n      sessionDate.setHours(0, 0, 0, 0);\r\n      \r\n      let dateKey: string;\r\n      \r\n      // \uC624\uB298 \uC138\uC158\r\n      if (sessionDate.getTime() === today.getTime()) {\r\n        dateKey = 'today';\r\n      } \r\n      // \uC5B4\uC81C \uC138\uC158\r\n      else if (sessionDate.getTime() === yesterday.getTime()) {\r\n        dateKey = 'yesterday';\r\n      } \r\n      // \uC774\uC804 \uC138\uC158 (\uB0A0\uC9DC \uD3EC\uB9F7\uD305)\r\n      else {\r\n        dateKey = sessionDate.toLocaleDateString('ko-KR');\r\n      }\r\n      \r\n      // \uB9F5\uC5D0 \uCD94\uAC00\r\n      if (!sessionsByDate.has(dateKey)) {\r\n        sessionsByDate.set(dateKey, []);\r\n      }\r\n      sessionsByDate.get(dateKey)?.push(session);\r\n    });\r\n    \r\n    return sessionsByDate;\r\n  }\r\n}", "/**\n * \uCC44\uD305 \uC11C\uBE44\uC2A4\n * \uB300\uD654 \uD788\uC2A4\uD1A0\uB9AC \uAD00\uB9AC \uBC0F \uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uB2F4\uB2F9\n */\n\nimport * as vscode from 'vscode';\nimport { ICoreService } from '../core/ICoreService';\nimport { container } from '../core/di/Container';\nimport { ChatHistoryService } from './ChatHistoryService';\n\n/**\n * \uCC44\uD305 \uBA54\uC2DC\uC9C0 \uD0C0\uC785\n */\nexport interface ChatMessage {\n  type: 'user' | 'assistant' | 'system';\n  content: string;\n  timestamp: number;\n}\n\n/**\n * \uCC44\uD305 \uC11C\uBE44\uC2A4 \uD074\uB798\uC2A4\n * \uB300\uD654 \uD788\uC2A4\uD1A0\uB9AC \uAD00\uB9AC \uBC0F UI \uC0C1\uD638\uC791\uC6A9 \uB2F4\uB2F9\n */\nexport class ChatService {\n  private conversation: ChatMessage[] = [];\n  private readonly welcomeMessages = [\n    '\uC548\uB155\uD558\uC138\uC694! APE \uCC44\uD305\uC5D0 \uC624\uC2E0 \uAC83\uC744 \uD658\uC601\uD569\uB2C8\uB2E4.',\n    '\uBB38\uC758\uC0AC\uD56D\uC774\uB098 \uB3C4\uC6C0\uC774 \uD544\uC694\uD55C \uB0B4\uC6A9\uC744 \uC785\uB825\uD574\uC8FC\uC138\uC694.',\n    '@ \uBA85\uB839\uC5B4\uB098 / \uBA85\uB839\uC5B4\uB97C \uC0AC\uC6A9\uD558\uC5EC \uD2B9\uBCC4\uD55C \uAE30\uB2A5\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.'\n  ];\n  \n  private readonly historyService: ChatHistoryService;\n  private currentSessionId: string | null = null;\n  \n  constructor(\n    private readonly apeCore: ICoreService,\n    private readonly context: vscode.ExtensionContext\n  ) {\n    // \uD788\uC2A4\uD1A0\uB9AC \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\n    this.historyService = new ChatHistoryService(context);\n    \n    this.apeCore.initialize().then(() => {\n      this.addSystemMessage('APE \uCF54\uC5B4 \uC11C\uBE44\uC2A4\uAC00 \uCD08\uAE30\uD654\uB418\uC5C8\uC2B5\uB2C8\uB2E4.');\n    }).catch(error => {\n      this.addSystemMessage('APE \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.');\n      console.error('\uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC624\uB958:', error);\n    });\n  }\n  \n  /**\n   * \uC0AC\uC6A9\uC790 \uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uD6C4 \uC751\uB2F5 \uC0DD\uC131\n   */\n  public async processMessage(\n    text: string, \n    onUpdate?: (chunk: string) => void, \n    options?: { embedDevMode?: boolean }\n  ): Promise<string> {\n    \n    this.addMessage('user', text);\n    \n    \n    const embedDevMode = options?.embedDevMode || false;\n    \n    console.log(`ChatService: \uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC2DC\uC791 - \"${text.substring(0, 30)}${text.length > 30 ? '...' : ''}\"`);\n    console.log(`ChatService: \uC2A4\uD2B8\uB9AC\uBC0D \uBAA8\uB4DC - ${onUpdate ? '\uCF1C\uC9D0' : '\uAEBC\uC9D0'}`);\n    console.log(`ChatService: \uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC - ${embedDevMode ? '\uCF1C\uC9D0' : '\uAEBC\uC9D0'}`);\n    \n    \n    if (text.trim().toLowerCase() === '/clear') {\n      this.clearConversation();\n      const clearMessage = '\uB300\uD654 \uAE30\uB85D\uC774 \uCD08\uAE30\uD654\uB418\uC5C8\uC2B5\uB2C8\uB2E4.';\n      this.addMessage('system', clearMessage);\n      return Promise.resolve(clearMessage);\n    }\n    \n    try {\n      \n      let accumulatedResponse = '';\n      let chunkCount = 0;\n      \n      const streamingCallback = onUpdate ? (chunk: string) => {\n        accumulatedResponse += chunk;\n        onUpdate(chunk);\n        \n        chunkCount++;\n        if (chunkCount <= 2 || chunkCount % 50 === 0) {\n          console.log(`ChatService: \uC2A4\uD2B8\uB9AC\uBC0D \uCCAD\uD06C #${chunkCount} \uC218\uC2E0 \uBC0F \uC804\uB2EC - \uAE38\uC774: ${chunk.length}\uC790`);\n        }\n      } : undefined;\n      \n      console.log('ChatService: ApeCoreService\uC5D0 \uBA54\uC2DC\uC9C0 \uC804\uB2EC');\n      \n      \n      let enhancedOptions: any = {};\n      \n      if (embedDevMode) {\n        \n        enhancedOptions = {\n          embedDevMode: true,\n          deepAnalysis: true,\n          internalDataAccess: true\n        };\n        console.log('ChatService: \uC2EC\uCE35 \uBD84\uC11D \uBAA8\uB4DC \uC801\uC6A9 - \uACE0\uAE09 \uD504\uB86C\uD504\uD2B8 \uC0DD\uC131 \uBC0F \uB0B4\uBD80 \uB370\uC774\uD130 \uC811\uADFC \uD65C\uC131\uD654');\n      }\n      \n      \n      const response = await this.apeCore.processMessage(text, streamingCallback ? {\n        stream: true,\n        onUpdate: streamingCallback,\n        ...enhancedOptions\n      } : enhancedOptions);\n      \n      let responseContent: string;\n      \n      \n      if (streamingCallback && accumulatedResponse) {\n        console.log(`ChatService: \uC2A4\uD2B8\uB9AC\uBC0D \uC751\uB2F5 \uC644\uB8CC - \uCD1D \uCCAD\uD06C: ${chunkCount}, \uC804\uCCB4 \uAE38\uC774: ${accumulatedResponse.length}\uC790`);\n        responseContent = accumulatedResponse;\n      } else {\n        console.log('ChatService: \uC77C\uBC18 \uC751\uB2F5 \uCC98\uB9AC');\n        \n        if (typeof response === 'object') {\n          if (response.content) {\n            responseContent = response.content;\n          } else {\n            responseContent = JSON.stringify(response, null, 2);\n          }\n        } else {\n          responseContent = response.toString();\n        }\n        console.log(`ChatService: \uC751\uB2F5 \uAE38\uC774: ${responseContent.length}\uC790`);\n      }\n      \n      \n      this.addMessage('assistant', responseContent);\n      return responseContent;\n    } catch (error) {\n      console.error('\uBA54\uC2DC\uC9C0 \uCC98\uB9AC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      \n      \n      const errorMessage = '\uC8C4\uC1A1\uD569\uB2C8\uB2E4. \uC751\uB2F5\uC744 \uC0DD\uC131\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uC7A0\uC2DC \uD6C4 \uB2E4\uC2DC \uC2DC\uB3C4\uD574 \uC8FC\uC138\uC694.';\n      this.addMessage('assistant', errorMessage);\n      return errorMessage;\n    }\n  }\n  \n  /**\n   * \uBA54\uC2DC\uC9C0 \uCD94\uAC00\n   */\n  private addMessage(type: 'user' | 'assistant' | 'system', content: string) {\n    // \uBA54\uC2DC\uC9C0 \uCD94\uAC00\n    this.conversation.push({\n      type,\n      content,\n      timestamp: Date.now()\n    });\n    \n    // \uB300\uD654\uAC00 \uC2E4\uC9C8\uC801\uC778 \uB0B4\uC6A9\uC744 \uAC00\uC9C0\uBA74 \uC790\uB3D9 \uC800\uC7A5 \uC2DC\uB3C4\n    // (\uC2DC\uC2A4\uD15C \uBA54\uC2DC\uC9C0\uAC00 \uC544\uB2D0 \uB54C\uB9CC \uCE74\uC6B4\uD2B8)\n    const significantMsgCount = this.conversation.filter(msg => msg.type !== 'system').length;\n    \n    if (type !== 'system' && significantMsgCount >= 4) {\n      // \uC790\uB3D9 \uC800\uC7A5 \uC2DC\uB3C4 (\uC624\uB958\uB294 \uBB34\uC2DC)\n      this.trySaveCurrentSession();\n    }\n  }\n  \n  /**\n   * \uD604\uC7AC \uB300\uD654 \uC790\uB3D9 \uC800\uC7A5 \uC2DC\uB3C4\n   * \uC800\uC7A5 \uB85C\uC9C1\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD574\uB3C4 \uBB34\uC2DC\n   */\n  private trySaveCurrentSession(): void {\n    try {\n      // \uC774\uBBF8 \uD604\uC7AC \uC138\uC158\uC774 \uC800\uC7A5\uB41C \uC0C1\uD0DC\uBA74 \uC5C5\uB370\uC774\uD2B8\n      if (this.currentSessionId) {\n        // \uAE30\uC874 \uC138\uC158 \uC0AD\uC81C \uD6C4 \uC0C8\uB85C \uC800\uC7A5 (\uB36E\uC5B4\uC4F0\uAE30)\n        this.historyService.deleteSession(this.currentSessionId);\n      }\n      \n      // \uC0C8 \uC138\uC158\uC73C\uB85C \uC800\uC7A5 (\uC81C\uBAA9 \uC790\uB3D9 \uC0DD\uC131)\n      this.saveCurrentSession();\n    } catch (error) {\n      // \uC790\uB3D9 \uC800\uC7A5 \uC2E4\uD328\uB294 \uBB34\uC2DC (\uB85C\uADF8\uB9CC \uAE30\uB85D)\n      console.log('\uB300\uD654 \uC790\uB3D9 \uC800\uC7A5 \uC2E4\uD328:', error);\n    }\n  }\n  \n  /**\n   * \uC2DC\uC2A4\uD15C \uBA54\uC2DC\uC9C0 \uCD94\uAC00\n   */\n  public addSystemMessage(content: string) {\n    this.addMessage('system', content);\n  }\n  \n  /**\n   * \uB300\uD654 \uB0B4\uC6A9 \uCD08\uAE30\uD654\n   */\n  public clearConversation() {\n    this.conversation = [];\n    this.currentSessionId = null;\n  }\n  \n  /**\n   * \uC6F0\uCEF4 \uBA54\uC2DC\uC9C0 \uAC00\uC838\uC624\uAE30\n   */\n  public getWelcomeMessage(): string {\n    return this.welcomeMessages[Math.floor(Math.random() * this.welcomeMessages.length)] || '\uC548\uB155\uD558\uC138\uC694! APE \uCC44\uD305\uC5D0 \uC624\uC2E0 \uAC83\uC744 \uD658\uC601\uD569\uB2C8\uB2E4.';\n  }\n  \n  /**\n   * \uB300\uD654 \uD788\uC2A4\uD1A0\uB9AC \uAC00\uC838\uC624\uAE30\n   */\n  public getConversation(): ChatMessage[] {\n    return [...this.conversation];\n  }\n  \n  /**\n   * \uD604\uC7AC \uB300\uD654 \uC800\uC7A5\uD558\uAE30\n   * @param title \uB300\uD654 \uC81C\uBAA9 (\uC635\uC158)\n   * @returns \uC800\uC7A5\uB41C \uC138\uC158 ID\n   */\n  public saveCurrentSession(title?: string): string {\n    // \uC758\uBBF8 \uC788\uB294 \uB300\uD654\uB9CC \uC800\uC7A5 (\uC0AC\uC6A9\uC790 \uBA54\uC2DC\uC9C0\uAC00 \uCD5C\uC18C 1\uAC1C \uC774\uC0C1)\n    const hasUserMessages = this.conversation.some(msg => msg.type === 'user');\n    if (!hasUserMessages || this.conversation.length < 2) {\n      throw new Error('\uC800\uC7A5\uD560 \uB300\uD654\uAC00 \uCDA9\uBD84\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.');\n    }\n    \n    // \uC81C\uBAA9\uC774 \uC5C6\uC73C\uBA74 \uCCAB \uBC88\uC9F8 \uC0AC\uC6A9\uC790 \uBA54\uC2DC\uC9C0\uB85C \uC790\uB3D9 \uC0DD\uC131\n    const sessionTitle = title || this.generateSessionTitle();\n    \n    // \uD788\uC2A4\uD1A0\uB9AC \uC11C\uBE44\uC2A4\uB85C \uC800\uC7A5\n    const sessionId = this.historyService.saveSession(sessionTitle, this.conversation);\n    \n    // \uD604\uC7AC \uC138\uC158 ID \uC5C5\uB370\uC774\uD2B8\n    this.currentSessionId = sessionId;\n    \n    return sessionId;\n  }\n  \n  /**\n   * \uC138\uC158 \uC81C\uBAA9 \uC790\uB3D9 \uC0DD\uC131\n   */\n  private generateSessionTitle(): string {\n    const firstUserMessage = this.conversation.find(msg => msg.type === 'user');\n    if (firstUserMessage) {\n      // \uCCAB \uBC88\uC9F8 \uC0AC\uC6A9\uC790 \uBA54\uC2DC\uC9C0 \uAE30\uBC18\uC73C\uB85C \uC81C\uBAA9 \uC0DD\uC131 (30\uC790 \uC81C\uD55C)\n      const content = firstUserMessage.content;\n      return content.length > 30 ? content.substring(0, 30) + '...' : content;\n    }\n    return `\uB300\uD654 \uC138\uC158 ${new Date().toLocaleString('ko-KR')}`;\n  }\n  \n  /**\n   * \uC800\uC7A5\uB41C \uC138\uC158 \uBD88\uB7EC\uC624\uAE30\n   * @param sessionId \uC138\uC158 ID\n   * @returns \uC131\uACF5 \uC5EC\uBD80\n   */\n  public loadSession(sessionId: string): boolean {\n    const session = this.historyService.getSession(sessionId);\n    if (!session) {\n      return false;\n    }\n    \n    // \uD604\uC7AC \uB300\uD654 \uCD08\uAE30\uD654 \uD6C4 \uC800\uC7A5\uB41C \uBA54\uC2DC\uC9C0\uB85C \uB300\uCCB4\n    this.conversation = [...session.messages];\n    this.currentSessionId = sessionId;\n    \n    return true;\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uC800\uC7A5\uB41C \uC138\uC158 \uBD88\uB7EC\uC624\uAE30\n   * @returns \uC800\uC7A5\uB41C \uBAA8\uB4E0 \uC138\uC158\n   */\n  public getAllSavedSessions() {\n    return this.historyService.getAllSessions();\n  }\n  \n  /**\n   * \uB0A0\uC9DC\uBCC4\uB85C \uADF8\uB8F9\uD654\uB41C \uC138\uC158 \uBAA9\uB85D \uAC00\uC838\uC624\uAE30\n   * @returns \uB0A0\uC9DC\uBCC4 \uC138\uC158 \uB9F5\n   */\n  public getSessionsByDate() {\n    return this.historyService.getSessionsByDate();\n  }\n  \n  /**\n   * \uD2B9\uC815 \uC138\uC158 \uC0AD\uC81C\n   * @param sessionId \uC138\uC158 ID\n   * @returns \uC0AD\uC81C \uC131\uACF5 \uC5EC\uBD80\n   */\n  public deleteSession(sessionId: string): boolean {\n    // \uD604\uC7AC \uB85C\uB4DC\uB41C \uC138\uC158\uC778 \uACBD\uC6B0, \uD604\uC7AC \uC138\uC158 ID \uCD08\uAE30\uD654\n    if (this.currentSessionId === sessionId) {\n      this.currentSessionId = null;\n    }\n    \n    return this.historyService.deleteSession(sessionId);\n  }\n  \n  /**\n   * \uBAA8\uB4E0 \uD788\uC2A4\uD1A0\uB9AC \uC0AD\uC81C\n   */\n  public clearAllHistory(): void {\n    this.historyService.clearAllHistory();\n    this.currentSessionId = null;\n  }\n  \n  /**\n   * \uD2B9\uBCC4 \uBA85\uB839\uC5B4 \uCC98\uB9AC (\uBB38\uC11C \uC0DD\uC131, \uCF54\uB4DC \uBD84\uC11D \uB4F1 \uACE0\uAE09 \uC791\uC5C5\uC6A9)\n   */\n  public async processSpecialCommand(request: any): Promise<any> {\n    try {\n      switch (request.command) {\n        case 'generateDoc':\n          \n          this.addSystemMessage(`${request.type} \uBB38\uC11C \uC0DD\uC131 \uC911...`);\n          \n          return await this.apeCore.processMessage(\n            `\uCF54\uB4DC\uC5D0 \uB300\uD55C ${request.type} \uBB38\uC11C\uB97C \uC0DD\uC131\uD574 \uC8FC\uC138\uC694:\\n\\n\\`\\`\\`${request.language}\\n${request.content}\\n\\`\\`\\``, \n            { embedDevMode: true }\n          );\n          \n        case 'analyzeCode':\n          \n          this.addSystemMessage(`\uCF54\uB4DC \uBD84\uC11D \uC911 (${request.focus})...`);\n          \n          return await this.apeCore.processMessage(\n            `\uB2E4\uC74C \uCF54\uB4DC\uB97C \uBD84\uC11D\uD574 \uC8FC\uC138\uC694 (\uC911\uC810: ${request.focus}):\\n\\n\\`\\`\\`${request.language}\\n${request.content}\\n\\`\\`\\``, \n            { embedDevMode: true }\n          );\n          \n        default:\n          throw new Error(`\uC9C0\uC6D0\uD558\uC9C0 \uC54A\uB294 \uD2B9\uBCC4 \uBA85\uB839\uC5B4: ${request.command}`);\n      }\n    } catch (error) {\n      console.error('\uD2B9\uBCC4 \uBA85\uB839\uC5B4 \uCC98\uB9AC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return {\n        content: `\uBA85\uB839\uC5B4 \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`,\n        error: true\n      };\n    }\n  }\n}", "/**\n * APE TreeView \uB370\uC774\uD130 \uC81C\uACF5\uC790\n * \n * VS Code TreeView API\uB97C \uC0AC\uC6A9\uD558\uC5EC \uACC4\uCE35\uC801\uC778 \uB370\uC774\uD130 \uD45C\uC2DC\uB97C \uAD6C\uD604\uD569\uB2C8\uB2E4.\n * \uCC44\uD305 \uC138\uC158, \uC9C0\uC2DD \uC800\uC7A5\uC18C, \uBA85\uB839\uC5B4, \uC124\uC815 \uB4F1\uC744 \uACC4\uCE35\uC801\uC73C\uB85C \uD45C\uC2DC\uD569\uB2C8\uB2E4.\n */\n\nimport * as vscode from 'vscode';\nimport * as path from 'path';\nimport { ICoreService } from '../core/ICoreService';\nimport { CommandType, CommandDomain } from '../types/CommandTypes';\nimport { SwdpDomainService } from '../core/domain/SwdpDomainService';\nimport { container } from '../core/di/Container';\n\n// \uB514\uBC84\uADF8 \uB85C\uADF8 \uCD94\uAC00\nconsole.log('ApeTreeDataProvider: \uBAA8\uB4C8 \uB85C\uB4DC\uB428');\n\n/**\n * TreeView \uB178\uB4DC \uD0C0\uC785 \uC5F4\uAC70\uD615\n */\nexport enum TreeNodeType {\n  \n  CATEGORY = 'category',\n  \n  \n  CHAT_SESSION = 'chat-session',\n  CHAT_HISTORY = 'chat-history',\n  \n  \n  COMMAND_ROOT = 'command-root',\n  COMMAND_DOMAIN = 'command-domain',\n  COMMAND = 'command',\n  \n  \n  VAULT_ROOT = 'vault-root',\n  VAULT_FOLDER = 'vault-folder',\n  VAULT_DOCUMENT = 'vault-document',\n  \n  \n  SWDP_ROOT = 'swdp-root',\n  SWDP_PROJECT = 'swdp-project',\n  SWDP_TASK = 'swdp-task',\n  SWDP_DOCUMENT = 'swdp-document',\n  SWDP_BUILD = 'swdp-build',\n  \n  \n  RULE_ROOT = 'rule-root',\n  RULE = 'rule',\n  \n  \n  SETTINGS_ROOT = 'settings-root',\n  SETTINGS_CATEGORY = 'settings-category',\n  SETTINGS_ITEM = 'settings-item'\n}\n\n/**\n * TreeView \uC544\uC774\uD15C \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface ApeTreeItem {\n  \n  id: string;\n  label: string;\n  type: TreeNodeType;\n  \n  \n  description?: string;\n  iconPath?: string | vscode.ThemeIcon;\n  tooltip?: string;\n  contextValue?: string;\n  \n  \n  metadata?: any;\n  \n  \n  children?: ApeTreeItem[];\n}\n\n/**\n * APE TreeView \uB370\uC774\uD130 \uC81C\uACF5\uC790 \uD074\uB798\uC2A4\n */\nexport class ApeTreeDataProvider implements vscode.TreeDataProvider<ApeTreeItem> {\n  \n  private _onDidChangeTreeData: vscode.EventEmitter<ApeTreeItem | undefined> = new vscode.EventEmitter<ApeTreeItem | undefined>();\n  readonly onDidChangeTreeData: vscode.Event<ApeTreeItem | undefined> = this._onDidChangeTreeData.event;\n  \n  \n  private treeData: ApeTreeItem[] = [];\n  \n  \n  private readonly context: vscode.ExtensionContext;\n  private readonly coreService: ICoreService;\n  \n  /**\n   * \uC0DD\uC131\uC790\n   * @param context VS Code \uD655\uC7A5 \uCEE8\uD14D\uC2A4\uD2B8\n   * @param coreService \uCF54\uC5B4 \uC11C\uBE44\uC2A4 \uC778\uC2A4\uD134\uC2A4\n   */\n  constructor(\n    context: vscode.ExtensionContext,\n    coreService: ICoreService\n  ) {\n    this.context = context;\n    this.coreService = coreService;\n    \n    console.log('ApeTreeDataProvider: \uC0DD\uC131\uC790 \uD638\uCD9C\uB428, ape.treeView \uC81C\uACF5\uC790 \uCD08\uAE30\uD654');\n    \n    // \uCD08\uAE30\uD654 \uC9C0\uC5F0 (\uC758\uC874\uC131\uC774 \uBAA8\uB450 \uB85C\uB4DC\uB41C \uD6C4 \uC2E4\uD589\uD558\uAE30 \uC704\uD568)\n    setTimeout(() => {\n      console.log('ApeTreeDataProvider: \uCD08\uAE30 \uD2B8\uB9AC \uB370\uC774\uD130 \uCD08\uAE30\uD654 \uC2DC\uC791');\n      this.initializeTreeData();\n      console.log('ApeTreeDataProvider: \uCD08\uAE30 \uD2B8\uB9AC \uB370\uC774\uD130 \uCD08\uAE30\uD654 \uC644\uB8CC');\n    }, 1000);\n  }\n  \n  /**\n   * TreeView \uB370\uC774\uD130\uB97C \uCD08\uAE30\uD654\uD569\uB2C8\uB2E4.\n   */\n  private initializeTreeData(): void {\n    this.treeData = [\n      \n      {\n        id: 'chat',\n        label: '\uCC44\uD305',\n        type: TreeNodeType.CATEGORY,\n        iconPath: new vscode.ThemeIcon('comment'),\n        contextValue: 'chatCategory',\n        children: [\n          {\n            id: 'chat-current',\n            label: '\uD604\uC7AC \uC138\uC158',\n            type: TreeNodeType.CHAT_SESSION,\n            iconPath: new vscode.ThemeIcon('comment-discussion'),\n            contextValue: 'chatSession',\n            description: '\uC9C4\uD589 \uC911\uC778 \uB300\uD654'\n          },\n          {\n            id: 'chat-history',\n            label: '\uD788\uC2A4\uD1A0\uB9AC',\n            type: TreeNodeType.CHAT_HISTORY,\n            iconPath: new vscode.ThemeIcon('history'),\n            contextValue: 'chatHistory',\n            children: this.getChatHistoryItems()\n          }\n        ]\n      },\n      \n      \n      {\n        id: 'commands',\n        label: '\uBA85\uB839\uC5B4',\n        type: TreeNodeType.COMMAND_ROOT,\n        iconPath: new vscode.ThemeIcon('terminal'),\n        contextValue: 'commandRoot',\n        children: this.getCommandDomainItems()\n      },\n      \n      \n      {\n        id: 'vault',\n        label: '\uC9C0\uC2DD \uC800\uC7A5\uC18C',\n        type: TreeNodeType.VAULT_ROOT,\n        iconPath: new vscode.ThemeIcon('library'),\n        contextValue: 'vaultRoot',\n        children: this.getVaultItems()\n      },\n      \n      \n      {\n        id: 'swdp',\n        label: 'SWDP \uD3EC\uD138',\n        type: TreeNodeType.SWDP_ROOT,\n        iconPath: new vscode.ThemeIcon('organization'),\n        contextValue: 'swdpRoot',\n        children: this.getSwdpItems()\n      },\n      \n      \n      {\n        id: 'rules',\n        label: '\uD504\uB86C\uD504\uD2B8 \uB8F0',\n        type: TreeNodeType.RULE_ROOT,\n        iconPath: new vscode.ThemeIcon('law'),\n        contextValue: 'ruleRoot',\n        children: this.getRuleItems()\n      },\n      \n      \n      {\n        id: 'settings',\n        label: '\uC124\uC815',\n        type: TreeNodeType.SETTINGS_ROOT,\n        iconPath: new vscode.ThemeIcon('gear'),\n        contextValue: 'settingsRoot',\n        children: this.getSettingsItems()\n      }\n    ];\n  }\n  \n  /**\n   * \uCC44\uD305 \uD788\uC2A4\uD1A0\uB9AC \uC544\uC774\uD15C\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @returns \uCC44\uD305 \uD788\uC2A4\uD1A0\uB9AC \uD2B8\uB9AC \uC544\uC774\uD15C \uBC30\uC5F4\n   */\n  private getChatHistoryItems(): ApeTreeItem[] {\n    try {\n      // ChatService \uC778\uC2A4\uD134\uC2A4 \uAC00\uC838\uC624\uAE30\n      const chatService = container.get('chatService');\n      if (!chatService) {\n        console.error('ApeTreeDataProvider: ChatService\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n        return this.getPlaceholderHistoryItems();\n      }\n      \n      // \uB0A0\uC9DC\uBCC4\uB85C \uADF8\uB8F9\uD654\uB41C \uC138\uC158 \uAC00\uC838\uC624\uAE30\n      const sessionsByDate = chatService.getSessionsByDate();\n      \n      if (!sessionsByDate || sessionsByDate.size === 0) {\n        return [{\n          id: 'chat-history-empty',\n          label: '\uB300\uD654 \uAE30\uB85D \uC5C6\uC74C',\n          type: TreeNodeType.CHAT_HISTORY,\n          iconPath: new vscode.ThemeIcon('info'),\n          contextValue: 'chatHistoryEmpty',\n          description: '\uC800\uC7A5\uB41C \uB300\uD654\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4'\n        }];\n      }\n      \n      const historyItems: ApeTreeItem[] = [];\n      \n      // \uC624\uB298 \uC138\uC158\n      if (sessionsByDate.has('today')) {\n        const todaySessions = sessionsByDate.get('today') || [];\n        historyItems.push({\n          id: 'chat-history-today',\n          label: `\uC624\uB298 (${todaySessions.length} \uC138\uC158)`,\n          type: TreeNodeType.CHAT_HISTORY,\n          iconPath: new vscode.ThemeIcon('calendar'),\n          contextValue: 'chatHistoryDay',\n          children: todaySessions.map(session => this.createSessionTreeItem(session, true))\n        });\n      }\n      \n      // \uC5B4\uC81C \uC138\uC158\n      if (sessionsByDate.has('yesterday')) {\n        const yesterdaySessions = sessionsByDate.get('yesterday') || [];\n        historyItems.push({\n          id: 'chat-history-yesterday',\n          label: `\uC5B4\uC81C (${yesterdaySessions.length} \uC138\uC158)`,\n          type: TreeNodeType.CHAT_HISTORY,\n          iconPath: new vscode.ThemeIcon('calendar'),\n          contextValue: 'chatHistoryDay',\n          children: yesterdaySessions.map(session => this.createSessionTreeItem(session, false))\n        });\n      }\n      \n      // \uC774\uC804 \uC138\uC158 (\uC774\uC678 \uB0A0\uC9DC)\n      for (const [dateKey, sessions] of sessionsByDate.entries()) {\n        if (dateKey !== 'today' && dateKey !== 'yesterday' && sessions.length > 0) {\n          historyItems.push({\n            id: `chat-history-${dateKey}`,\n            label: `${dateKey} (${sessions.length} \uC138\uC158)`,\n            type: TreeNodeType.CHAT_HISTORY,\n            iconPath: new vscode.ThemeIcon('calendar'),\n            contextValue: 'chatHistoryDay',\n            children: sessions.map(session => this.createSessionTreeItem(session, false))\n          });\n        }\n      }\n      \n      return historyItems;\n    } catch (error) {\n      console.error('ApeTreeDataProvider: \uCC44\uD305 \uD788\uC2A4\uD1A0\uB9AC \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return this.getPlaceholderHistoryItems();\n    }\n  }\n  \n  /**\n   * \uC138\uC158 \uAC1D\uCCB4\uB85C\uBD80\uD130 \uD2B8\uB9AC \uC544\uC774\uD15C \uC0DD\uC131\n   */\n  private createSessionTreeItem(session: any, isToday: boolean): ApeTreeItem {\n    // \uD0C0\uC784\uC2A4\uD0EC\uD504\uB97C \uC2DC\uAC04 \uBB38\uC790\uC5F4\uB85C \uBCC0\uD658\n    const time = new Date(session.timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    \n    const description = isToday ? `\uC624\uB298 ${time}` : time;\n    \n    return {\n      id: session.id,\n      label: session.title,\n      type: TreeNodeType.CHAT_SESSION,\n      iconPath: new vscode.ThemeIcon('comment'),\n      description: description,\n      contextValue: 'chatHistorySession',\n      metadata: {\n        sessionId: session.id,\n        timestamp: session.timestamp,\n        messageCount: session.messages?.length || 0\n      }\n    };\n  }\n  \n  /**\n   * \uAE30\uBCF8 \uD788\uC2A4\uD1A0\uB9AC \uC544\uC774\uD15C (\uB85C\uB529 \uC2E4\uD328\uC2DC)\n   */\n  private getPlaceholderHistoryItems(): ApeTreeItem[] {\n    return [\n      {\n        id: 'chat-history-loading',\n        label: '\uB300\uD654 \uAE30\uB85D \uB85C\uB529 \uC911...',\n        type: TreeNodeType.CHAT_HISTORY,\n        iconPath: new vscode.ThemeIcon('loading~spin'),\n        contextValue: 'chatHistoryLoading'\n      }\n    ];\n  }\n  \n  /**\n   * \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 \uC544\uC774\uD15C\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @returns \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 \uD2B8\uB9AC \uC544\uC774\uD15C \uBC30\uC5F4\n   */\n  private getCommandDomainItems(): ApeTreeItem[] {\n    \n    const commandRegistry = this.coreService?.commandRegistry;\n    const domains: ApeTreeItem[] = [];\n    \n    if (!commandRegistry) {\n      console.log('ApeTreeDataProvider: commandRegistry\uAC00 \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uAE30\uBCF8 \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778 \uBC18\uD658');\n      return [{\n        id: 'commands-not-ready',\n        label: '\uBA85\uB839\uC5B4 \uB85C\uB529 \uC911...',\n        type: TreeNodeType.COMMAND_DOMAIN,\n        iconPath: new vscode.ThemeIcon('loading~spin'),\n        contextValue: 'commandLoading',\n        description: '\uBA85\uB839\uC5B4 \uC2DC\uC2A4\uD15C \uCD08\uAE30\uD654 \uC911',\n        children: []\n      }];\n    }\n    \n    \n    const systemCommandItem: ApeTreeItem = {\n      id: 'commands-system',\n      label: '\uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4',\n      type: TreeNodeType.COMMAND_DOMAIN,\n      iconPath: new vscode.ThemeIcon('settings-gear'),\n      contextValue: 'commandDomain',\n      description: '/\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4',\n      children: []\n    };\n    \n    try {\n      \n      const systemCommands = commandRegistry.getAllSystemCommandUsages() || [];\n      systemCommandItem.children = systemCommands.map(cmd => ({\n        id: `command-${cmd.command}`,\n        label: cmd.command,\n        type: TreeNodeType.COMMAND,\n        description: cmd.description,\n        iconPath: new vscode.ThemeIcon('terminal'),\n        contextValue: 'command',\n        metadata: {\n          syntax: cmd.syntax,\n          examples: cmd.examples,\n          agentId: cmd.agentId\n        }\n      }));\n    } catch (error) {\n      console.error('ApeTreeDataProvider: \uC2DC\uC2A4\uD15C \uBA85\uB839\uC5B4 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      systemCommandItem.children = [{\n        id: 'commands-system-error',\n        label: '\uBA85\uB839\uC5B4 \uB85C\uB4DC \uC624\uB958',\n        type: TreeNodeType.COMMAND,\n        description: '\uBA85\uB839\uC5B4\uB97C \uB85C\uB4DC\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4',\n        iconPath: new vscode.ThemeIcon('error'),\n        contextValue: 'commandError'\n      }];\n    }\n    \n    domains.push(systemCommandItem);\n    \n    \n    \n    domains.push({\n      id: 'commands-git',\n      label: 'Git \uBA85\uB839\uC5B4',\n      type: TreeNodeType.COMMAND_DOMAIN,\n      iconPath: new vscode.ThemeIcon('git-merge'),\n      contextValue: 'commandDomain',\n      description: '@git:\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4',\n      children: this.getCommandsForDomain(CommandDomain.GIT)\n    });\n    \n    \n    domains.push({\n      id: 'commands-doc',\n      label: '\uBB38\uC11C \uBA85\uB839\uC5B4',\n      type: TreeNodeType.COMMAND_DOMAIN,\n      iconPath: new vscode.ThemeIcon('book'),\n      contextValue: 'commandDomain',\n      description: '@doc:\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4',\n      children: this.getCommandsForDomain(CommandDomain.DOC)\n    });\n    \n    \n    domains.push({\n      id: 'commands-jira',\n      label: 'Jira \uBA85\uB839\uC5B4',\n      type: TreeNodeType.COMMAND_DOMAIN,\n      iconPath: new vscode.ThemeIcon('issues'),\n      contextValue: 'commandDomain',\n      description: '@jira:\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4',\n      children: this.getCommandsForDomain(CommandDomain.JIRA)\n    });\n    \n    \n    domains.push({\n      id: 'commands-pocket',\n      label: 'Pocket \uBA85\uB839\uC5B4',\n      type: TreeNodeType.COMMAND_DOMAIN,\n      iconPath: new vscode.ThemeIcon('archive'),\n      contextValue: 'commandDomain',\n      description: '@pocket:\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4',\n      children: this.getCommandsForDomain(CommandDomain.POCKET)\n    });\n    \n    \n    domains.push({\n      id: 'commands-vault',\n      label: 'Vault \uBA85\uB839\uC5B4',\n      type: TreeNodeType.COMMAND_DOMAIN,\n      iconPath: new vscode.ThemeIcon('database'),\n      contextValue: 'commandDomain',\n      description: '@vault:\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4',\n      children: this.getCommandsForDomain(CommandDomain.VAULT)\n    });\n    \n    \n    domains.push({\n      id: 'commands-rules',\n      label: 'Rules \uBA85\uB839\uC5B4',\n      type: TreeNodeType.COMMAND_DOMAIN,\n      iconPath: new vscode.ThemeIcon('law'),\n      contextValue: 'commandDomain',\n      description: '@rules:\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4',\n      children: this.getCommandsForDomain(CommandDomain.RULES)\n    });\n    \n    \n    domains.push({\n      id: 'commands-swdp',\n      label: 'SWDP \uBA85\uB839\uC5B4',\n      type: TreeNodeType.COMMAND_DOMAIN,\n      iconPath: new vscode.ThemeIcon('organization'),\n      contextValue: 'commandDomain',\n      description: '@swdp:\uB85C \uC2DC\uC791\uD558\uB294 \uBA85\uB839\uC5B4',\n      children: this.getCommandsForDomain(CommandDomain.SWDP)\n    });\n    \n    return domains;\n  }\n  \n  /**\n   * \uD2B9\uC815 \uB3C4\uBA54\uC778\uC758 \uBA85\uB839\uC5B4\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param domain \uBA85\uB839\uC5B4 \uB3C4\uBA54\uC778\n   * @returns \uD574\uB2F9 \uB3C4\uBA54\uC778\uC758 \uBA85\uB839\uC5B4 \uD2B8\uB9AC \uC544\uC774\uD15C \uBC30\uC5F4\n   */\n  private getCommandsForDomain(domain: CommandDomain): ApeTreeItem[] {\n    try {\n      const commandRegistry = this.coreService?.commandRegistry;\n      \n      \n      if (!commandRegistry) {\n        console.log(`ApeTreeDataProvider: ${domain} \uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4 \uB85C\uB4DC \uC2E4\uD328 - commandRegistry\uAC00 \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uC74C`);\n        return [{\n          id: `command-${domain}-loading`,\n          label: '\uB85C\uB529 \uC911...',\n          type: TreeNodeType.COMMAND,\n          description: '\uBA85\uB839\uC5B4 \uB85C\uB4DC \uC911',\n          iconPath: new vscode.ThemeIcon('loading~spin'),\n          contextValue: 'commandLoading'\n        }];\n      }\n      \n      const domainCommands = commandRegistry.getDomainCommands(domain) || [];\n      \n      return domainCommands.map(cmd => ({\n        id: `command-${domain}-${cmd.command}`,\n        label: cmd.command,\n        type: TreeNodeType.COMMAND,\n        description: cmd.description,\n        iconPath: new vscode.ThemeIcon('terminal'),\n        contextValue: 'command',\n        metadata: {\n          syntax: cmd.syntax,\n          examples: cmd.examples,\n          domain: domain,\n          agentId: cmd.agentId\n        }\n      }));\n    } catch (error) {\n      console.error(`ApeTreeDataProvider: ${domain} \uB3C4\uBA54\uC778 \uBA85\uB839\uC5B4 \uB85C\uB4DC \uC911 \uC624\uB958 \uBC1C\uC0DD:`, error);\n      return [{\n        id: `command-${domain}-error`,\n        label: '\uBA85\uB839\uC5B4 \uB85C\uB4DC \uC624\uB958',\n        type: TreeNodeType.COMMAND,\n        description: '\uBA85\uB839\uC5B4\uB97C \uB85C\uB4DC\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4',\n        iconPath: new vscode.ThemeIcon('error'),\n        contextValue: 'commandError'\n      }];\n    }\n  }\n  \n  /**\n   * \uC9C0\uC2DD \uC800\uC7A5\uC18C \uC544\uC774\uD15C\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @returns \uC9C0\uC2DD \uC800\uC7A5\uC18C \uD2B8\uB9AC \uC544\uC774\uD15C \uBC30\uC5F4\n   */\n  private getVaultItems(): ApeTreeItem[] {\n    return [\n      {\n        id: 'vault-coding',\n        label: '\uCF54\uB529 \uAC00\uC774\uB4DC',\n        type: TreeNodeType.VAULT_FOLDER,\n        iconPath: new vscode.ThemeIcon('folder'),\n        contextValue: 'vaultFolder',\n        children: [\n          {\n            id: 'vault-doc-1',\n            label: 'TypeScript \uC2A4\uD0C0\uC77C \uAC00\uC774\uB4DC',\n            type: TreeNodeType.VAULT_DOCUMENT,\n            iconPath: new vscode.ThemeIcon('file-text'),\n            contextValue: 'vaultDocument',\n            description: '2024-05-01'\n          },\n          {\n            id: 'vault-doc-2',\n            label: 'VS Code API \uC0AC\uC6A9\uBC95',\n            type: TreeNodeType.VAULT_DOCUMENT,\n            iconPath: new vscode.ThemeIcon('file-text'),\n            contextValue: 'vaultDocument',\n            description: '2024-04-28'\n          }\n        ]\n      },\n      {\n        id: 'vault-project',\n        label: '\uD504\uB85C\uC81D\uD2B8 \uBB38\uC11C',\n        type: TreeNodeType.VAULT_FOLDER,\n        iconPath: new vscode.ThemeIcon('folder'),\n        contextValue: 'vaultFolder',\n        children: [\n          {\n            id: 'vault-doc-3',\n            label: 'APE \uC544\uD0A4\uD14D\uCC98 \uBB38\uC11C',\n            type: TreeNodeType.VAULT_DOCUMENT,\n            iconPath: new vscode.ThemeIcon('file-text'),\n            contextValue: 'vaultDocument',\n            description: '2024-05-03'\n          }\n        ]\n      }\n    ];\n  }\n  \n  /**\n   * \uD504\uB86C\uD504\uD2B8 \uB8F0 \uC544\uC774\uD15C\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @returns \uD504\uB86C\uD504\uD2B8 \uB8F0 \uD2B8\uB9AC \uC544\uC774\uD15C \uBC30\uC5F4\n   */\n  private getRuleItems(): ApeTreeItem[] {\n    return [\n      {\n        id: 'rule-1',\n        label: '\uCF54\uB4DC \uC2A4\uD0C0\uC77C \uB8F0',\n        type: TreeNodeType.RULE,\n        iconPath: new vscode.ThemeIcon('symbol-interface'),\n        contextValue: 'rule',\n        description: '\uD65C\uC131\uD654\uB428'\n      },\n      {\n        id: 'rule-2',\n        label: '\uBB38\uC11C\uD654 \uB8F0',\n        type: TreeNodeType.RULE,\n        iconPath: new vscode.ThemeIcon('symbol-interface'),\n        contextValue: 'rule',\n        description: '\uD65C\uC131\uD654\uB428'\n      },\n      {\n        id: 'rule-3',\n        label: '\uD14C\uC2A4\uD2B8 \uC791\uC131 \uB8F0',\n        type: TreeNodeType.RULE,\n        iconPath: new vscode.ThemeIcon('symbol-interface'),\n        contextValue: 'rule',\n        description: '\uBE44\uD65C\uC131\uD654\uB428'\n      }\n    ];\n  }\n  \n  /**\n   * \uC124\uC815 \uC544\uC774\uD15C\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @returns \uC124\uC815 \uD2B8\uB9AC \uC544\uC774\uD15C \uBC30\uC5F4\n   */\n  private getSettingsItems(): ApeTreeItem[] {\n    return [\n      {\n        id: 'settings-open',\n        label: '\uC124\uC815 \uC5F4\uAE30',\n        type: TreeNodeType.SETTINGS_ITEM,\n        iconPath: new vscode.ThemeIcon('gear'),\n        contextValue: 'settingsOpen',\n        description: '\uC124\uC815 \uD398\uC774\uC9C0\uB85C \uC774\uB3D9',\n        metadata: {\n          command: 'ape.openSettings',\n          title: '\uC124\uC815 \uC5F4\uAE30'\n        }\n      },\n      {\n        id: 'settings-llm',\n        label: 'LLM \uC124\uC815',\n        type: TreeNodeType.SETTINGS_CATEGORY,\n        iconPath: new vscode.ThemeIcon('dashboard'),\n        contextValue: 'settingsCategory',\n        children: [\n          {\n            id: 'settings-llm-model',\n            label: '\uAE30\uBCF8 \uBAA8\uB378',\n            type: TreeNodeType.SETTINGS_ITEM,\n            iconPath: new vscode.ThemeIcon('symbol-parameter'),\n            contextValue: 'settingsItem',\n            description: this.getConfigValue('ape.llm.defaultModel')\n          },\n          {\n            id: 'settings-llm-streaming',\n            label: '\uC2A4\uD2B8\uB9AC\uBC0D \uC9C0\uC6D0',\n            type: TreeNodeType.SETTINGS_ITEM,\n            iconPath: new vscode.ThemeIcon('symbol-parameter'),\n            contextValue: 'settingsItem',\n            description: this.getConfigValue('ape.llm.supportsStreaming') === 'true' ? '\uD65C\uC131\uD654\uB428' : '\uBE44\uD65C\uC131\uD654\uB428'\n          }\n        ]\n      },\n      {\n        id: 'settings-core',\n        label: '\uCF54\uC5B4 \uC124\uC815',\n        type: TreeNodeType.SETTINGS_CATEGORY,\n        iconPath: new vscode.ThemeIcon('gear'),\n        contextValue: 'settingsCategory',\n        children: [\n          {\n            id: 'settings-core-ssl',\n            label: 'SSL \uC6B0\uD68C',\n            type: TreeNodeType.SETTINGS_ITEM,\n            iconPath: new vscode.ThemeIcon('symbol-parameter'),\n            contextValue: 'settingsItem',\n            description: this.getConfigValue('ape.core.sslBypass') === 'true' ? '\uD65C\uC131\uD654\uB428' : '\uBE44\uD65C\uC131\uD654\uB428'\n          },\n          {\n            id: 'settings-core-log',\n            label: '\uB85C\uADF8 \uB808\uBCA8',\n            type: TreeNodeType.SETTINGS_ITEM,\n            iconPath: new vscode.ThemeIcon('symbol-parameter'),\n            contextValue: 'settingsItem',\n            description: this.getConfigValue('ape.core.logLevel')\n          }\n        ]\n      }\n    ];\n  }\n  \n  /**\n   * VS Code \uC124\uC815\uC5D0\uC11C \uAC12\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param key \uC124\uC815 \uD0A4\n   * @returns \uC124\uC815 \uAC12 (\uBB38\uC790\uC5F4\uB85C \uBCC0\uD658)\n   */\n  private getConfigValue(key: string): string {\n    const config = vscode.workspace.getConfiguration();\n    const value = config.get(key);\n    return value !== undefined ? String(value) : '\uC124\uC815\uB418\uC9C0 \uC54A\uC74C';\n  }\n  \n  /**\n   * TreeView\uB97C \uC0C8\uB85C\uACE0\uCE68\uD569\uB2C8\uB2E4.\n   */\n  public refresh(): void {\n    console.log('ApeTreeDataProvider: \uD2B8\uB9AC\uBDF0 \uC0C8\uB85C\uACE0\uCE68 \uC2DC\uC791');\n    try {\n      this.initializeTreeData();\n      console.log('ApeTreeDataProvider: \uD2B8\uB9AC \uB370\uC774\uD130 \uCD08\uAE30\uD654 \uC644\uB8CC');\n      this._onDidChangeTreeData.fire(undefined);\n      console.log('ApeTreeDataProvider: TreeView \uC5C5\uB370\uC774\uD2B8 \uC774\uBCA4\uD2B8 \uBC1C\uC0DD \uC644\uB8CC');\n    } catch (error) {\n      console.error('ApeTreeDataProvider: \uC0C8\uB85C\uACE0\uCE68 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n    }\n  }\n  \n  /**\n   * TreeItem \uC694\uC18C\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param element TreeView \uC544\uC774\uD15C\n   * @returns VS Code TreeItem \uC778\uC2A4\uD134\uC2A4\n   */\n  getTreeItem(element: ApeTreeItem): vscode.TreeItem {\n    \n    const treeItem = new vscode.TreeItem(\n      element.label,\n      element.children && element.children.length > 0 \n        ? vscode.TreeItemCollapsibleState.Collapsed \n        : vscode.TreeItemCollapsibleState.None\n    );\n    \n    \n    treeItem.description = element.description || '';\n    treeItem.tooltip = element.tooltip || element.description || element.label;\n    treeItem.contextValue = element.contextValue || '';\n    \n    \n    if (element.iconPath) {\n      treeItem.iconPath = element.iconPath;\n    }\n    \n    \n    if (element.metadata) {\n      if (element.contextValue === 'settingsOpen') {\n        \n        treeItem.command = {\n          command: element.metadata.command,\n          title: element.metadata.title || '\uC124\uC815 \uC5F4\uAE30'\n        };\n      } else if (element.type === TreeNodeType.COMMAND) {\n        \n        treeItem.command = {\n          command: 'ape.showCommandDetails',\n          title: '\uBA85\uB839\uC5B4 \uC138\uBD80\uC815\uBCF4 \uBCF4\uAE30',\n          arguments: [element]\n        };\n      }\n    }\n    \n    return treeItem;\n  }\n  \n  /**\n   * \uC544\uC774\uD15C\uC758 \uC790\uC2DD \uC694\uC18C\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param element TreeView \uC544\uC774\uD15C (\uC5C6\uC73C\uBA74 \uB8E8\uD2B8 \uC544\uC774\uD15C)\n   * @returns \uC790\uC2DD \uC544\uC774\uD15C \uBC30\uC5F4 \uB610\uB294 null\n   */\n  getChildren(element?: ApeTreeItem): ApeTreeItem[] | null {\n    if (!element) {\n      return this.treeData;\n    }\n    \n    return element.children || [];\n  }\n  \n  /**\n   * SWDP \uD3EC\uD138 \uC544\uC774\uD15C\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @returns SWDP \uD2B8\uB9AC \uC544\uC774\uD15C \uBC30\uC5F4\n   */\n  private getSwdpItems(): ApeTreeItem[] {\n    try {\n      \n      const swdpEnabled = vscode.workspace.getConfiguration('ape').get('swdp.enabled', true);\n      if (!swdpEnabled) {\n        return [{\n          id: 'swdp-disabled',\n          label: 'SWDP \uAE30\uB2A5\uC774 \uBE44\uD65C\uC131\uD654\uB418\uC5C8\uC2B5\uB2C8\uB2E4',\n          type: TreeNodeType.SWDP_ROOT,\n          iconPath: new vscode.ThemeIcon('warning'),\n          contextValue: 'swdpDisabled'\n        }];\n      }\n      \n      \n      try {\n        const swdpDomainService = SwdpDomainService.getInstance();\n        const isInitialized = swdpDomainService.isInitialized();\n        \n        if (!isInitialized) {\n          return [{\n            id: 'swdp-not-initialized',\n            label: 'SWDP \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654 \uC911...',\n            type: TreeNodeType.SWDP_ROOT,\n            iconPath: new vscode.ThemeIcon('loading~spin'),\n            contextValue: 'swdpLoading'\n          }];\n        }\n        \n        \n        const projects = swdpDomainService.getCachedProjects() || [];\n        \n        if (projects.length === 0) {\n          return [{\n            id: 'swdp-no-projects',\n            label: '\uD504\uB85C\uC81D\uD2B8\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4',\n            type: TreeNodeType.SWDP_ROOT,\n            iconPath: new vscode.ThemeIcon('info'),\n            contextValue: 'swdpNoProjects',\n            description: '\uC0C8\uB85C\uACE0\uCE68\uD558\uC5EC \uB2E4\uC2DC \uC2DC\uB3C4\uD558\uC138\uC694'\n          }];\n        }\n        \n        \n        return projects.map(project => ({\n          id: `swdp-project-${project.code}`,\n          label: project.name,\n          type: TreeNodeType.SWDP_PROJECT,\n          iconPath: new vscode.ThemeIcon('project'),\n          contextValue: 'swdpProject',\n          description: project.description || '',\n          metadata: {\n            projectId: project.code,\n            projectKey: project.code \n          },\n          children: [\n            {\n              id: `swdp-tasks-${project.code}`,\n              label: '\uC791\uC5C5',\n              type: TreeNodeType.SWDP_ROOT,\n              iconPath: new vscode.ThemeIcon('tasklist'),\n              contextValue: 'swdpTasksFolder',\n              description: '\uD504\uB85C\uC81D\uD2B8 \uC791\uC5C5'\n            },\n            {\n              id: `swdp-documents-${project.code}`,\n              label: '\uBB38\uC11C',\n              type: TreeNodeType.SWDP_ROOT,\n              iconPath: new vscode.ThemeIcon('file-text'),\n              contextValue: 'swdpDocsFolder',\n              description: '\uD504\uB85C\uC81D\uD2B8 \uBB38\uC11C'\n            },\n            {\n              id: `swdp-builds-${project.code}`,\n              label: '\uBE4C\uB4DC',\n              type: TreeNodeType.SWDP_ROOT,\n              iconPath: new vscode.ThemeIcon('package'),\n              contextValue: 'swdpBuildsFolder',\n              description: '\uD504\uB85C\uC81D\uD2B8 \uBE4C\uB4DC'\n            }\n          ]\n        }));\n      } catch (error) {\n        console.error('SWDP \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30 \uC2E4\uD328:', error);\n        return [{\n          id: 'swdp-error',\n          label: 'SWDP \uC5F0\uACB0 \uC624\uB958',\n          type: TreeNodeType.SWDP_ROOT,\n          iconPath: new vscode.ThemeIcon('error'),\n          contextValue: 'swdpError',\n          description: error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'\n        }];\n      }\n    } catch (error: unknown) {\n      console.error('SWDP \uD2B8\uB9AC \uAD6C\uC131 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\n      return [{\n        id: 'swdp-error',\n        label: 'SWDP \uB370\uC774\uD130 \uB85C\uB4DC \uC624\uB958',\n        type: TreeNodeType.SWDP_ROOT,\n        iconPath: new vscode.ThemeIcon('error'),\n        contextValue: 'swdpError',\n        description: error instanceof Error ? error.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'\n      }];\n    }\n  }\n\n  /**\n   * \uD2B9\uC815 \uC544\uC774\uD15C\uC758 \uBD80\uBAA8\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param element TreeView \uC544\uC774\uD15C\n   * @returns \uBD80\uBAA8 \uC544\uC774\uD15C \uB610\uB294 null\n   */\n  getParent(element: ApeTreeItem): vscode.ProviderResult<ApeTreeItem> {\n    \n    \n    return null;\n  }\n}", "/**\n * APE \uD30C\uC77C \uD0D0\uC0C9\uAE30 \uB370\uC774\uD130 \uC81C\uACF5\uC790\n * \n * VS Code TreeView API\uB97C \uC0AC\uC6A9\uD558\uC5EC \uD30C\uC77C \uC2DC\uC2A4\uD15C \uD0D0\uC0C9 \uAE30\uB2A5\uC744 \uAD6C\uD604\uD569\uB2C8\uB2E4.\n * \uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4 \uB0B4 \uD30C\uC77C \uBC0F \uD3F4\uB354 \uC870\uD68C, \uC0DD\uC131, \uC0AD\uC81C, \uC774\uB984 \uBCC0\uACBD \uAE30\uB2A5\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4.\n * \n * TODO: \n * - \uB514\uBC84\uADF8 \uCF58\uC194 \uB85C\uADF8\uB97C \uD655\uC778\uD558\uC5EC \uC624\uB958 \uBC1C\uC0DD \uC5EC\uBD80 \uD655\uC778\uD558\uACE0 \uD574\uACB0\n * - \uB300\uC6A9\uB7C9 \uD3F4\uB354 \uCC98\uB9AC \uC2DC \uC131\uB2A5 \uCD5C\uC801\uD654 \uD544\uC694\n * - \uD30C\uC77C \uB4DC\uB798\uADF8 \uC564 \uB4DC\uB86D \uAE30\uB2A5 \uCD94\uAC00\n * - \uD30C\uC77C \uD544\uD130\uB9C1 \uBC0F \uAC80\uC0C9 \uAE30\uB2A5 \uAD6C\uD604\n * - \uD30C\uC77C \uC0C1\uD0DC \uCE90\uC2F1\uC73C\uB85C \uBD88\uD544\uC694\uD55C \uD30C\uC77C \uC2DC\uC2A4\uD15C \uC811\uADFC \uCD5C\uC18C\uD654\n * - Git \uC0C1\uD0DC \uD45C\uC2DC \uAE30\uB2A5 \uD1B5\uD569 \uACE0\uB824\n */\n\nimport * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { promisify } from 'util';\n\n\nconst readdir = promisify(fs.readdir);\nconst stat = promisify(fs.stat);\nconst mkdir = promisify(fs.mkdir);\nconst writeFile = promisify(fs.writeFile);\nconst unlink = promisify(fs.unlink);\nconst rmdir = promisify(fs.rmdir);\nconst rename = promisify(fs.rename);\n\n/**\n * \uD30C\uC77C \uC2DC\uC2A4\uD15C \uD56D\uBAA9 \uC720\uD615 (\uD30C\uC77C \uB610\uB294 \uD3F4\uB354)\n */\nexport enum FileItemType {\n  FILE = 'file',\n  DIRECTORY = 'directory'\n}\n\n/**\n * \uD30C\uC77C \uC2DC\uC2A4\uD15C \uD56D\uBAA9 \uC778\uD130\uD398\uC774\uC2A4\n */\nexport interface FileItem extends vscode.TreeItem {\n  type: FileItemType;\n  path: string;\n  isDirectory: boolean;\n  children?: FileItem[];\n}\n\n/**\n * APE \uD30C\uC77C \uD0D0\uC0C9\uAE30 \uB370\uC774\uD130 \uC81C\uACF5\uC790 \uD074\uB798\uC2A4\n */\nexport class ApeFileExplorerProvider implements vscode.TreeDataProvider<FileItem> {\n  \n  private _onDidChangeTreeData: vscode.EventEmitter<FileItem | undefined> = new vscode.EventEmitter<FileItem | undefined>();\n  readonly onDidChangeTreeData: vscode.Event<FileItem | undefined> = this._onDidChangeTreeData.event;\n  \n  private _workspaceRoot: string | undefined;\n  private _dirWatcher: vscode.FileSystemWatcher | undefined;\n  \n  /**\n   * \uC0DD\uC131\uC790\n   * @param context VS Code \uD655\uC7A5 \uCEE8\uD14D\uC2A4\uD2B8\n   */\n  constructor(private context: vscode.ExtensionContext) {\n    \n    this._workspaceRoot = vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0\n      ? vscode.workspace.workspaceFolders[0].uri.fsPath \n      : undefined;\n    \n    \n    this._setupWatcher();\n  }\n  \n  /**\n   * \uD30C\uC77C \uC2DC\uC2A4\uD15C \uAC10\uC2DC\uC790 \uC124\uC815\n   */\n  private _setupWatcher() {\n    if (!this._workspaceRoot) return;\n    \n    \n    this._dirWatcher = vscode.workspace.createFileSystemWatcher('**/*');\n    \n    \n    this._dirWatcher.onDidCreate(() => {\n      this.refresh();\n    });\n    \n    \n    this._dirWatcher.onDidDelete(() => {\n      this.refresh();\n    });\n    \n    \n    this._dirWatcher.onDidChange(() => {\n      this.refresh();\n    });\n  }\n  \n  /**\n   * \uD2B8\uB9AC \uB370\uC774\uD130 \uAC31\uC2E0\n   */\n  refresh(): void {\n    this._onDidChangeTreeData.fire(undefined);\n  }\n  \n  /**\n   * TreeItem \uC694\uC18C\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param element \uD30C\uC77C \uD56D\uBAA9\n   * @returns VS Code TreeItem \uC778\uC2A4\uD134\uC2A4\n   */\n  getTreeItem(element: FileItem): vscode.TreeItem {\n    return element;\n  }\n  \n  /**\n   * \uC790\uC2DD \uC694\uC18C\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param element \uD30C\uC77C \uD56D\uBAA9 (\uC5C6\uC73C\uBA74 \uB8E8\uD2B8 \uD56D\uBAA9)\n   * @returns \uC790\uC2DD \uD30C\uC77C \uD56D\uBAA9 \uBC30\uC5F4\n   */\n  async getChildren(element?: FileItem): Promise<FileItem[]> {\n    \n    if (!this._workspaceRoot) {\n      vscode.window.showInformationMessage('\uD30C\uC77C \uD0D0\uC0C9\uC744 \uC704\uD574 \uD3F4\uB354\uB97C \uC5F4\uC5B4\uC8FC\uC138\uC694.');\n      return [];\n    }\n    \n    if (element) {\n      \n      return this._getFileItems(element.path);\n    } else {\n      \n      return this._getFileItems(this._workspaceRoot);\n    }\n  }\n  \n  /**\n   * \uD2B9\uC815 \uACBD\uB85C\uC758 \uD30C\uC77C \uD56D\uBAA9 \uBAA9\uB85D\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param dirPath \uB514\uB809\uD1A0\uB9AC \uACBD\uB85C\n   * @returns \uD30C\uC77C \uD56D\uBAA9 \uBC30\uC5F4\n   */\n  private async _getFileItems(dirPath: string): Promise<FileItem[]> {\n    try {\n      \n      const files = await readdir(dirPath);\n      \n      \n      const fileItems = await Promise.all(files.map(async (file) => {\n        const filePath = path.join(dirPath, file);\n        const fileStat = await stat(filePath);\n        const isDirectory = fileStat.isDirectory();\n        \n        \n        const item: FileItem = {\n          label: file,\n          path: filePath,\n          type: isDirectory ? FileItemType.DIRECTORY : FileItemType.FILE,\n          isDirectory: isDirectory,\n          collapsibleState: isDirectory \n            ? vscode.TreeItemCollapsibleState.Collapsed \n            : vscode.TreeItemCollapsibleState.None,\n          contextValue: isDirectory ? 'directory' : 'file',\n          iconPath: this._getIconPath(file, isDirectory)\n        };\n        \n        \n        if (!isDirectory) {\n          item.command = {\n            command: 'ape.openFile',\n            title: '\uD30C\uC77C \uC5F4\uAE30',\n            arguments: [filePath]\n          };\n        }\n        \n        return item;\n      }));\n      \n      \n      return fileItems.sort((a, b) => {\n        if (a.isDirectory && !b.isDirectory) {\n          return -1;\n        }\n        if (!a.isDirectory && b.isDirectory) {\n          return 1;\n        }\n        return (a.label as string).localeCompare(b.label as string);\n      });\n    } catch (error) {\n      console.error(`\uB514\uB809\uD1A0\uB9AC \uC77D\uAE30 \uC624\uB958 (${dirPath}):`, error);\n      return [];\n    }\n  }\n  \n  /**\n   * \uD30C\uC77C/\uD3F4\uB354 \uC544\uC774\uCF58 \uACBD\uB85C\uB97C \uAC00\uC838\uC635\uB2C8\uB2E4.\n   * @param filename \uD30C\uC77C \uC774\uB984\n   * @param isDirectory \uB514\uB809\uD1A0\uB9AC \uC5EC\uBD80\n   * @returns \uC544\uC774\uCF58 \uACBD\uB85C \uB610\uB294 ThemeIcon\n   */\n  private _getIconPath(filename: string, isDirectory: boolean): vscode.ThemeIcon {\n    if (isDirectory) {\n      return new vscode.ThemeIcon('folder');\n    }\n    \n    \n    const ext = path.extname(filename).toLowerCase();\n    \n    switch (ext) {\n      case '.js':\n        return new vscode.ThemeIcon('javascript');\n      case '.ts':\n        return new vscode.ThemeIcon('typescript');\n      case '.json':\n        return new vscode.ThemeIcon('json');\n      case '.html':\n        return new vscode.ThemeIcon('html');\n      case '.css':\n        return new vscode.ThemeIcon('css');\n      case '.md':\n        return new vscode.ThemeIcon('markdown');\n      case '.py':\n        return new vscode.ThemeIcon('python');\n      case '.java':\n        return new vscode.ThemeIcon('java');\n      case '.php':\n        return new vscode.ThemeIcon('php');\n      case '.c':\n      case '.cpp':\n      case '.h':\n        return new vscode.ThemeIcon('c');\n      case '.go':\n        return new vscode.ThemeIcon('go');\n      case '.rb':\n        return new vscode.ThemeIcon('ruby');\n      case '.sh':\n        return new vscode.ThemeIcon('terminal');\n      case '.bat':\n      case '.cmd':\n        return new vscode.ThemeIcon('terminal-cmd');\n      case '.sql':\n        return new vscode.ThemeIcon('database');\n      case '.jpg':\n      case '.jpeg':\n      case '.png':\n      case '.gif':\n      case '.svg':\n        return new vscode.ThemeIcon('image');\n      default:\n        return new vscode.ThemeIcon('file');\n    }\n  }\n  \n  /**\n   * \uD30C\uC77C \uB610\uB294 \uD3F4\uB354 \uC0DD\uC131\n   * @param parentPath \uBD80\uBAA8 \uB514\uB809\uD1A0\uB9AC \uACBD\uB85C\n   * @param type \uC0DD\uC131\uD560 \uD56D\uBAA9 \uC720\uD615 (\uD30C\uC77C \uB610\uB294 \uD3F4\uB354)\n   */\n  async createFileOrFolder(parentPath: string, type: FileItemType): Promise<void> {\n    try {\n      const baseName = type === FileItemType.DIRECTORY ? '\uC0C8 \uD3F4\uB354' : '\uC0C8 \uD30C\uC77C.txt';\n      const inputOptions: vscode.InputBoxOptions = {\n        prompt: `${type === FileItemType.DIRECTORY ? '\uD3F4\uB354' : '\uD30C\uC77C'} \uC774\uB984\uC744 \uC785\uB825\uD558\uC138\uC694`,\n        value: baseName\n      };\n      \n      \n      const fileName = await vscode.window.showInputBox(inputOptions);\n      \n      if (!fileName) return; \n      \n      const newPath = path.join(parentPath, fileName);\n      \n      \n      if (type === FileItemType.DIRECTORY) {\n        await mkdir(newPath);\n      } else {\n        \n        await writeFile(newPath, '');\n        \n        \n        const document = await vscode.workspace.openTextDocument(newPath);\n        await vscode.window.showTextDocument(document);\n      }\n      \n      \n      this.refresh();\n      \n    } catch (error) {\n      console.error('\uD30C\uC77C/\uD3F4\uB354 \uC0DD\uC131 \uC624\uB958:', error);\n      vscode.window.showErrorMessage(`${type === FileItemType.DIRECTORY ? '\uD3F4\uB354' : '\uD30C\uC77C'} \uC0DD\uC131 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.`);\n    }\n  }\n  \n  /**\n   * \uD30C\uC77C \uB610\uB294 \uD3F4\uB354 \uC0AD\uC81C\n   * @param itemPath \uC0AD\uC81C\uD560 \uD56D\uBAA9 \uACBD\uB85C\n   * @param isDirectory \uB514\uB809\uD1A0\uB9AC \uC5EC\uBD80\n   */\n  async deleteFileOrFolder(itemPath: string, isDirectory: boolean): Promise<void> {\n    try {\n      \n      const itemName = path.basename(itemPath);\n      const confirmMessage = isDirectory\n        ? `\uD3F4\uB354 '${itemName}'\uC640 \uADF8 \uB0B4\uC6A9\uC744 \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?`\n        : `\uD30C\uC77C '${itemName}'\uC744 \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?`;\n        \n      const confirmOptions = {\n        modal: true,\n        detail: '\uC774 \uC791\uC5C5\uC740 \uB418\uB3CC\uB9B4 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.'\n      };\n      \n      const confirmed = await vscode.window.showWarningMessage(\n        confirmMessage, \n        confirmOptions, \n        '\uC0AD\uC81C'\n      );\n      \n      if (confirmed !== '\uC0AD\uC81C') {\n        return; \n      }\n      \n      \n      if (isDirectory) {\n        \n        await this._removeDirectoryRecursive(itemPath);\n      } else {\n        \n        await unlink(itemPath);\n      }\n      \n      \n      this.refresh();\n      \n    } catch (error) {\n      console.error('\uC0AD\uC81C \uC624\uB958:', error);\n      vscode.window.showErrorMessage('\uD56D\uBAA9 \uC0AD\uC81C \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.');\n    }\n  }\n  \n  /**\n   * \uC7AC\uADC0\uC801\uC73C\uB85C \uB514\uB809\uD1A0\uB9AC \uC0AD\uC81C\n   * @param dirPath \uC0AD\uC81C\uD560 \uB514\uB809\uD1A0\uB9AC \uACBD\uB85C\n   */\n  private async _removeDirectoryRecursive(dirPath: string): Promise<void> {\n    try {\n      const entries = await readdir(dirPath);\n      \n      \n      for (const entry of entries) {\n        const entryPath = path.join(dirPath, entry);\n        const entryStat = await stat(entryPath);\n        \n        if (entryStat.isDirectory()) {\n          \n          await this._removeDirectoryRecursive(entryPath);\n        } else {\n          \n          await unlink(entryPath);\n        }\n      }\n      \n      \n      await rmdir(dirPath);\n      \n    } catch (error) {\n      console.error(`\uB514\uB809\uD1A0\uB9AC \uC0AD\uC81C \uC624\uB958 (${dirPath}):`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * \uD30C\uC77C \uB610\uB294 \uD3F4\uB354 \uC774\uB984 \uBCC0\uACBD\n   * @param itemPath \uC774\uB984\uC744 \uBCC0\uACBD\uD560 \uD56D\uBAA9 \uACBD\uB85C\n   */\n  async renameFileOrFolder(itemPath: string): Promise<void> {\n    try {\n      const dirName = path.dirname(itemPath);\n      const baseName = path.basename(itemPath);\n      \n      const inputOptions: vscode.InputBoxOptions = {\n        prompt: '\uC0C8 \uC774\uB984\uC744 \uC785\uB825\uD558\uC138\uC694',\n        value: baseName\n      };\n      \n      \n      const newName = await vscode.window.showInputBox(inputOptions);\n      \n      if (!newName || newName === baseName) {\n        return; \n      }\n      \n      \n      const newPath = path.join(dirName, newName);\n      \n      \n      try {\n        await stat(newPath);\n        \n        vscode.window.showErrorMessage(`'${newName}'\uC740 \uC774\uBBF8 \uC874\uC7AC\uD569\uB2C8\uB2E4.`);\n        return;\n      } catch (e) {\n        \n      }\n      \n      \n      await rename(itemPath, newPath);\n      \n      \n      this.refresh();\n      \n    } catch (error) {\n      console.error('\uC774\uB984 \uBCC0\uACBD \uC624\uB958:', error);\n      vscode.window.showErrorMessage('\uC774\uB984 \uBCC0\uACBD \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.');\n    }\n  }\n  \n  /**\n   * \uBD80\uBAA8 \uD56D\uBAA9 \uC870\uD68C (\uC120\uD0DD\uC801 \uAD6C\uD604)\n   */\n  getParent(element: FileItem): vscode.ProviderResult<FileItem> {\n    const parentPath = path.dirname(element.path);\n    \n    \n    if (parentPath === element.path) {\n      return null;\n    }\n    \n    \n    return {\n      label: path.basename(parentPath),\n      path: parentPath,\n      type: FileItemType.DIRECTORY,\n      isDirectory: true,\n      collapsibleState: vscode.TreeItemCollapsibleState.Collapsed,\n      contextValue: 'directory',\n      iconPath: new vscode.ThemeIcon('folder')\n    };\n  }\n}", "import * as vscode from 'vscode';\r\nimport { ConfigService } from '../core/config';\r\nimport { VSCodeService } from '../core/vscode';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\n/**\r\n * Provider class for displaying and managing APE settings in a webview\r\n */\r\nexport class ApeSettingsViewProvider implements vscode.WebviewViewProvider {\r\n  public static readonly viewType = 'ape.settingsView';\r\n\r\n  private _view?: vscode.WebviewView;\r\n  private _configService: ConfigService;\r\n  private _vscodeService: VSCodeService;\r\n  private _extensionUri: vscode.Uri;\r\n  private _vsCodeConfig: vscode.WorkspaceConfiguration;\r\n\r\n  /**\r\n   * Constructor for ApeSettingsViewProvider\r\n   * \r\n   * @param extensionUri The URI of the extension\r\n   * @param configService The configuration service\r\n   * @param vscodeService The VS Code service\r\n   */\r\n  constructor(\r\n    extensionUri: vscode.Uri,\r\n    configService: ConfigService,\r\n    vscodeService: VSCodeService\r\n  ) {\r\n    this._extensionUri = extensionUri;\r\n    this._configService = configService;\r\n    this._vscodeService = vscodeService;\r\n    this._vsCodeConfig = vscode.workspace.getConfiguration('ape');\r\n  }\r\n\r\n  /**\r\n   * Resolves the webview view\r\n   * \r\n   * @param webviewView The webview view to resolve\r\n   */\r\n  public resolveWebviewView(\r\n    webviewView: vscode.WebviewView,\r\n    _context: vscode.WebviewViewResolveContext,\r\n    _token: vscode.CancellationToken,\r\n  ) {\r\n    this._view = webviewView;\r\n\r\n    webviewView.webview.options = {\r\n      enableScripts: true,\r\n      localResourceRoots: [\r\n        this._extensionUri\r\n      ]\r\n    };\r\n\r\n    webviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n\r\n    \r\n    webviewView.webview.onDidReceiveMessage(async (message) => {\r\n      await this._handleWebviewMessage(message);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handles messages from any webview (panel or view)\r\n   * \r\n   * @param message The message from the webview\r\n   */\r\n  public async _handleWebviewMessage(message: any): Promise<void> {\r\n    switch (message.command) {\r\n      case 'saveUserInfo':\r\n        await this._handleSaveUserInfo(message.userInfo);\r\n        break;\r\n      case 'savePluginSettings':\r\n        await this._handleSavePluginSettings(message.pluginSettings);\r\n        break;\r\n      case 'saveApiEndpoints':\r\n        await this._handleSaveApiEndpoints(message.apiEndpoints);\r\n        break;\r\n      case 'saveLlmSettings':\r\n        await this._handleSaveLlmSettings(message.llmSettings);\r\n        break;\r\n      case 'saveModels':\r\n        await this._handleSaveModels(message.models);\r\n        break;\r\n      case 'getSettings':\r\n        if (this._view) {\r\n          await this._sendCurrentSettings();\r\n        }\r\n        break;\r\n      case 'addPlugin':\r\n        await this._handleAddPlugin(message.pluginInfo);\r\n        break;\r\n      case 'removePlugin':\r\n        await this._handleRemovePlugin(message.pluginId);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current settings and sends them to the webview\r\n   * \r\n   * @param webview Optional webview to send settings to (if not the view)\r\n   */\r\n  public async _sendCurrentSettings(webview?: vscode.Webview) {\r\n    \r\n    const targetWebview = webview || (this._view ? this._view.webview : undefined);\r\n    \r\n    if (!targetWebview) {\r\n      return;\r\n    }\r\n\r\n    \r\n    this._vsCodeConfig = vscode.workspace.getConfiguration('ape');\r\n    \r\n    \r\n    const config = this._configService.getAppConfig();\r\n    \r\n    \r\n    const userInfo = {\r\n      displayName: config['user'] ? config['user']['displayName'] || '' : '',\r\n      email: config['user'] ? config['user']['email'] || '' : '',\r\n      gitUsername: config['git'] ? config['git']['username'] || '' : '', \r\n      gitEmail: config['git'] ? config['git']['email'] || '' : '',\r\n      swdpUsername: config['swdp'] ? config['swdp']['username'] || '' : '',\r\n      swdpTeam: config['swdp'] ? config['swdp']['team'] || '' : ''\r\n    };\r\n    \r\n    \r\n    const plugins = config['plugins'] || [];\r\n    \r\n    \r\n    const apiEndpoints = {\r\n      llmEndpoint: config['endpoints'] ? config['endpoints']['llm'] || '' : '',\r\n      gitApiEndpoint: config['endpoints'] ? config['endpoints']['git'] || '' : '',\r\n      jiraApiEndpoint: config['endpoints'] ? config['endpoints']['jira'] || '' : '',\r\n      swdpApiEndpoint: this._vsCodeConfig.get('swdp.baseUrl') || 'http://localhost:8080',\r\n      pocketApiEndpoint: config['endpoints'] ? config['endpoints']['pocket'] || '' : ''\r\n    };\r\n    \r\n    \r\n    const llmSettings = {\r\n      defaultModel: this._vsCodeConfig.get('llm.defaultModel') || 'gemini-2.5-flash',\r\n      openRouterApiKey: this._vsCodeConfig.get('llm.openrouterApiKey') || '',\r\n      supportsStreaming: this._vsCodeConfig.get('llm.supportsStreaming') || true,\r\n      temperature: 0.7,\r\n      maxTokens: 4000\r\n    };\r\n    \r\n    \r\n    const availableModels = this._vsCodeConfig.get('llm.models') || {};\r\n    console.log('Available models:', availableModels);\r\n    \r\n    \r\n    targetWebview.postMessage({\r\n      command: 'updateSettings',\r\n      settings: {\r\n        userInfo: userInfo,\r\n        pluginSettings: plugins,\r\n        apiEndpoints: apiEndpoints,\r\n        llmSettings: llmSettings,\r\n        availableModels: availableModels,\r\n        coreSettings: {\r\n          sslBypass: this._vsCodeConfig.get('core.sslBypass') || false,\r\n          logLevel: this._vsCodeConfig.get('core.logLevel') || 'info',\r\n          allowAll: this._vsCodeConfig.get('core.allow.all') || true\r\n        },\r\n        swdpSettings: {\r\n          enabled: this._vsCodeConfig.get('swdp.enabled') || true,\r\n          baseUrl: this._vsCodeConfig.get('swdp.baseUrl') || 'http://localhost:8080',\r\n          defaultProject: this._vsCodeConfig.get('swdp.defaultProject') || ''\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles saving user information\r\n   * \r\n   * @param userInfo The user information to save\r\n   */\r\n  private async _handleSaveUserInfo(userInfo: any) {\r\n    \r\n    await this._configService.updateConfig('app', {\r\n      user: {\r\n        displayName: userInfo.displayName,\r\n        email: userInfo.email\r\n      },\r\n      git: {\r\n        username: userInfo.gitUsername,\r\n        email: userInfo.gitEmail\r\n      },\r\n      swdp: {\r\n        username: userInfo.swdpUsername,\r\n        team: userInfo.swdpTeam\r\n      }\r\n    });\r\n\r\n    \r\n    this._vscodeService.showInformationMessage('User information saved');\r\n  }\r\n\r\n  /**\r\n   * Handles saving plugin settings\r\n   * \r\n   * @param pluginSettings The plugin settings to save\r\n   */\r\n  private async _handleSavePluginSettings(pluginSettings: any) {\r\n    \r\n    await this._configService.updateConfig('app', {\r\n      plugins: pluginSettings\r\n    });\r\n\r\n    \r\n    this._vscodeService.showInformationMessage('Plugin settings saved');\r\n  }\r\n\r\n  /**\r\n   * Handles saving API endpoints\r\n   * \r\n   * @param apiEndpoints The API endpoints to save\r\n   */\r\n  private async _handleSaveApiEndpoints(apiEndpoints: any) {\r\n    try {\r\n      \r\n      await this._vsCodeConfig.update('swdp.baseUrl', apiEndpoints.swdpApiEndpoint, vscode.ConfigurationTarget.Global);\r\n      \r\n      \r\n      await this._configService.updateConfig('app', {\r\n        endpoints: {\r\n          llm: apiEndpoints.llmEndpoint,\r\n          git: apiEndpoints.gitApiEndpoint,\r\n          jira: apiEndpoints.jiraApiEndpoint,\r\n          pocket: apiEndpoints.pocketApiEndpoint\r\n        }\r\n      });\r\n\r\n      \r\n      this._vscodeService.showInformationMessage('API \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uAC00 \uC800\uC7A5\uB418\uC5C8\uC2B5\uB2C8\uB2E4');\r\n    } catch (error) {\r\n      console.error('API \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uC800\uC7A5 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\r\n      this._vscodeService.showErrorMessage(`API \uC5D4\uB4DC\uD3EC\uC778\uD2B8 \uC800\uC7A5 \uC2E4\uD328: ${error.message || '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles saving LLM settings\r\n   * \r\n   * @param llmSettings The LLM settings to save\r\n   */\r\n  private async _handleSaveLlmSettings(llmSettings: any) {\r\n    try {\r\n      \r\n      await this._vsCodeConfig.update('llm.defaultModel', llmSettings.defaultModel, vscode.ConfigurationTarget.Global);\r\n      await this._vsCodeConfig.update('llm.openrouterApiKey', llmSettings.openRouterApiKey, vscode.ConfigurationTarget.Global);\r\n      await this._vsCodeConfig.update('llm.supportsStreaming', llmSettings.supportsStreaming, vscode.ConfigurationTarget.Global);\r\n      \r\n      \r\n      await this._configService.updateConfig('app', {\r\n        llm: {\r\n          temperature: llmSettings.temperature,\r\n          maxTokens: llmSettings.maxTokens\r\n        }\r\n      });\r\n      \r\n      \r\n      this._vscodeService.showInformationMessage('LLM \uC124\uC815\uC774 \uC800\uC7A5\uB418\uC5C8\uC2B5\uB2C8\uB2E4');\r\n    } catch (error) {\r\n      console.error('LLM \uC124\uC815 \uC800\uC7A5 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\r\n      this._vscodeService.showErrorMessage(`LLM \uC124\uC815 \uC800\uC7A5 \uC2E4\uD328: ${error.message || '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles saving LLM models\r\n   * \r\n   * @param models The models to save\r\n   */\r\n  private async _handleSaveModels(models: any) {\r\n    try {\r\n      \r\n      await this._vsCodeConfig.update('llm.models', models, vscode.ConfigurationTarget.Global);\r\n      \r\n      \r\n      this._vscodeService.showInformationMessage('\uBAA8\uB378 \uC124\uC815\uC774 \uC800\uC7A5\uB418\uC5C8\uC2B5\uB2C8\uB2E4');\r\n      \r\n      \r\n      await this._sendCurrentSettings();\r\n    } catch (error) {\r\n      console.error('\uBAA8\uB378 \uC124\uC815 \uC800\uC7A5 \uC911 \uC624\uB958 \uBC1C\uC0DD:', error);\r\n      this._vscodeService.showErrorMessage(`\uBAA8\uB378 \uC124\uC815 \uC800\uC7A5 \uC2E4\uD328: ${error.message || '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958'}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handles adding a new plugin\r\n   * \r\n   * @param pluginInfo The plugin information\r\n   */\r\n  private async _handleAddPlugin(pluginInfo: any) {\r\n    const config = this._configService.getAppConfig();\r\n    const currentPlugins = config.plugins || [];\r\n    \r\n    \r\n    currentPlugins.push({\r\n      id: pluginInfo.id,\r\n      name: pluginInfo.name,\r\n      type: pluginInfo.type,\r\n      enabled: true,\r\n      settings: pluginInfo.settings || {}\r\n    });\r\n    \r\n    \r\n    await this._configService.updateConfig('app', {\r\n      plugins: currentPlugins\r\n    });\r\n    \r\n    \r\n    await this._sendCurrentSettings();\r\n    \r\n    \r\n    this._vscodeService.showInformationMessage(`Plugin ${pluginInfo.name} added`);\r\n  }\r\n\r\n  /**\r\n   * Handles removing a plugin\r\n   * \r\n   * @param pluginId The ID of the plugin to remove\r\n   */\r\n  private async _handleRemovePlugin(pluginId: string) {\r\n    const config = this._configService.getAppConfig();\r\n    let currentPlugins = config.plugins || [];\r\n    \r\n    \r\n    currentPlugins = currentPlugins.filter(plugin => plugin.id !== pluginId);\r\n    \r\n    \r\n    await this._configService.updateConfig('app', {\r\n      plugins: currentPlugins\r\n    });\r\n    \r\n    \r\n    await this._sendCurrentSettings();\r\n    \r\n    \r\n    this._vscodeService.showInformationMessage(`Plugin removed`);\r\n  }\r\n\r\n  /**\r\n   * Gets the HTML for the webview\r\n   * \r\n   * @param webview The webview\r\n   * @returns The HTML string\r\n   */\r\n  public _getHtmlForWebview(webview: vscode.Webview): string {\r\n    \r\n    const cssUri = webview.asWebviewUri(\r\n      vscode.Uri.joinPath(this._extensionUri, 'resources', 'css', 'ape-ui.css')\r\n    );\r\n\r\n    \r\n    let cssContent = '';\r\n    try {\r\n      const cssPath = path.join(this._extensionUri.fsPath, 'resources', 'css', 'ape-ui.css');\r\n      cssContent = fs.readFileSync(cssPath, 'utf8');\r\n    } catch (error) {\r\n      console.error('Error reading CSS file:', error);\r\n    }\r\n\r\n    return `<!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>APE Settings</title>\r\n        <link href=\"${cssUri}\" rel=\"stylesheet\">\r\n        <style>\r\n            body {\r\n                padding: 0;\r\n                color: var(--vscode-foreground);\r\n                font-size: var(--vscode-font-size);\r\n                font-weight: var(--vscode-font-weight);\r\n                font-family: var(--vscode-font-family);\r\n                background-color: var(--vscode-editor-background);\r\n            }\r\n            \r\n            .settings-container {\r\n                padding: 10px;\r\n            }\r\n            \r\n            .tab-container {\r\n                display: flex;\r\n                border-bottom: 1px solid var(--vscode-panel-border);\r\n                margin-bottom: 15px;\r\n            }\r\n            \r\n            .tab {\r\n                padding: 8px 12px;\r\n                cursor: pointer;\r\n                border: none;\r\n                background: none;\r\n                color: var(--vscode-foreground);\r\n                opacity: 0.7;\r\n                font-size: 13px;\r\n            }\r\n            \r\n            .tab.active {\r\n                opacity: 1;\r\n                border-bottom: 2px solid var(--vscode-button-background);\r\n                font-weight: bold;\r\n            }\r\n            \r\n            .tab-content {\r\n                display: none;\r\n            }\r\n            \r\n            .tab-content.active {\r\n                display: block;\r\n            }\r\n            \r\n            .form-group {\r\n                margin-bottom: 15px;\r\n            }\r\n            \r\n            label {\r\n                display: block;\r\n                margin-bottom: 5px;\r\n                font-weight: 500;\r\n            }\r\n            \r\n            input[type=\"text\"],\r\n            input[type=\"email\"],\r\n            input[type=\"password\"],\r\n            input[type=\"number\"],\r\n            select,\r\n            textarea {\r\n                width: 100%;\r\n                padding: 6px 8px;\r\n                border: 1px solid var(--vscode-input-border);\r\n                background-color: var(--vscode-input-background);\r\n                color: var(--vscode-input-foreground);\r\n                border-radius: 2px;\r\n            }\r\n            \r\n            input:focus,\r\n            select:focus,\r\n            textarea:focus {\r\n                outline: 1px solid var(--vscode-focusBorder);\r\n            }\r\n            \r\n            button {\r\n                padding: 6px 12px;\r\n                background-color: var(--vscode-button-background);\r\n                color: var(--vscode-button-foreground);\r\n                border: none;\r\n                border-radius: 2px;\r\n                cursor: pointer;\r\n                margin-right: 5px;\r\n            }\r\n            \r\n            button:hover {\r\n                background-color: var(--vscode-button-hoverBackground);\r\n            }\r\n            \r\n            .button-container {\r\n                display: flex;\r\n                justify-content: flex-end;\r\n                margin-top: 15px;\r\n            }\r\n            \r\n            .section-title {\r\n                font-size: 14px;\r\n                font-weight: 600;\r\n                margin: 15px 0 10px 0;\r\n                padding-bottom: 5px;\r\n                border-bottom: 1px solid var(--vscode-panel-border);\r\n            }\r\n            \r\n            .plugin-list {\r\n                margin-top: 10px;\r\n                border: 1px solid var(--vscode-panel-border);\r\n                border-radius: 3px;\r\n                max-height: 200px;\r\n                overflow-y: auto;\r\n            }\r\n            \r\n            .plugin-item {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n                padding: 8px 10px;\r\n                border-bottom: 1px solid var(--vscode-panel-border);\r\n            }\r\n            \r\n            .plugin-item:last-child {\r\n                border-bottom: none;\r\n            }\r\n            \r\n            .plugin-info {\r\n                display: flex;\r\n                flex-direction: column;\r\n            }\r\n            \r\n            .plugin-name {\r\n                font-weight: 500;\r\n            }\r\n            \r\n            .plugin-type {\r\n                font-size: 12px;\r\n                opacity: 0.8;\r\n            }\r\n            \r\n            .plugin-actions {\r\n                display: flex;\r\n            }\r\n            \r\n            .plugin-toggle {\r\n                margin-right: 8px;\r\n                cursor: pointer;\r\n            }\r\n            \r\n            .remove-plugin {\r\n                color: var(--vscode-errorForeground);\r\n                cursor: pointer;\r\n                background: none;\r\n                border: none;\r\n                padding: 2px 4px;\r\n                font-size: 12px;\r\n            }\r\n            \r\n            .add-plugin-form {\r\n                margin-top: 10px;\r\n                padding: 10px;\r\n                border: 1px solid var(--vscode-panel-border);\r\n                border-radius: 3px;\r\n                background-color: var(--vscode-editor-background);\r\n            }\r\n            \r\n            .two-column {\r\n                display: grid;\r\n                grid-template-columns: 1fr 1fr;\r\n                gap: 10px;\r\n            }\r\n            \r\n            .endpoint-group {\r\n                padding: 10px;\r\n                margin-bottom: 10px;\r\n                border: 1px solid var(--vscode-panel-border);\r\n                border-radius: 3px;\r\n            }\r\n            \r\n            .endpoint-title {\r\n                font-weight: 600;\r\n                margin-bottom: 10px;\r\n            }\r\n            \r\n            .api-key-input {\r\n                position: relative;\r\n            }\r\n            \r\n            .toggle-visibility {\r\n                position: absolute;\r\n                right: 8px;\r\n                top: 50%;\r\n                transform: translateY(-50%);\r\n                background: none;\r\n                border: none;\r\n                color: var(--vscode-foreground);\r\n                opacity: 0.7;\r\n                cursor: pointer;\r\n            }\r\n            \r\n            .model-selection {\r\n                margin-top: 15px;\r\n            }\r\n            \r\n            \r\n            .slider-container {\r\n                margin-top: 5px;\r\n            }\r\n            \r\n            .slider {\r\n                -webkit-appearance: none;\r\n                width: 100%;\r\n                height: 4px;\r\n                background: var(--vscode-scrollbarSlider-background);\r\n                outline: none;\r\n                border-radius: 2px;\r\n            }\r\n            \r\n            .slider::-webkit-slider-thumb {\r\n                -webkit-appearance: none;\r\n                appearance: none;\r\n                width: 16px;\r\n                height: 16px;\r\n                border-radius: 50%;\r\n                background: var(--vscode-button-background);\r\n                cursor: pointer;\r\n            }\r\n            \r\n            .slider::-moz-range-thumb {\r\n                width: 16px;\r\n                height: 16px;\r\n                border-radius: 50%;\r\n                background: var(--vscode-button-background);\r\n                cursor: pointer;\r\n            }\r\n            \r\n            .slider-value {\r\n                display: inline-block;\r\n                margin-left: 10px;\r\n                font-size: 12px;\r\n            }\r\n\r\n            .info-text {\r\n                font-size: 12px;\r\n                color: var(--vscode-descriptionForeground);\r\n                margin-top: 4px;\r\n            }\r\n\r\n            \r\n            .models-grid {\r\n                display: grid;\r\n                grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n                gap: 16px;\r\n                margin-top: 16px;\r\n            }\r\n            \r\n            .model-item {\r\n                border: 1px solid var(--vscode-panel-border);\r\n                border-radius: 6px;\r\n                padding: 16px;\r\n                position: relative;\r\n                background: var(--vscode-editor-background);\r\n                transition: box-shadow 0.2s, transform 0.2s;\r\n                height: 100%;\r\n                display: flex;\r\n                flex-direction: column;\r\n            }\r\n            \r\n            .model-item:hover {\r\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n                transform: translateY(-2px);\r\n            }\r\n\r\n            .model-item-header {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: flex-start;\r\n                margin-bottom: 12px;\r\n                padding-bottom: 8px;\r\n                border-bottom: 1px solid var(--vscode-panel-border);\r\n            }\r\n\r\n            .model-name {\r\n                font-weight: bold;\r\n                font-size: 16px;\r\n                margin-bottom: 4px;\r\n            }\r\n\r\n            .model-provider {\r\n                font-size: 12px;\r\n                opacity: 0.8;\r\n                font-style: italic;\r\n                margin-bottom: 4px;\r\n                padding: 2px 6px;\r\n                border-radius: 4px;\r\n                display: inline-block;\r\n            }\r\n            \r\n            .model-provider.internal {\r\n                background-color: var(--vscode-activityBarBadge-background);\r\n                color: var(--vscode-activityBarBadge-foreground);\r\n            }\r\n            \r\n            .model-provider.external {\r\n                background-color: var(--vscode-statusBarItem-warningBackground);\r\n                color: var(--vscode-statusBarItem-warningForeground);\r\n            }\r\n\r\n            .model-details {\r\n                font-size: 12px;\r\n                margin-top: 8px;\r\n                flex-grow: 1;\r\n            }\r\n\r\n            .model-details div {\r\n                margin-bottom: 6px;\r\n                line-height: 1.4;\r\n            }\r\n            \r\n            .model-detail-label {\r\n                font-weight: 500;\r\n                margin-right: 4px;\r\n                display: inline-block;\r\n                min-width: 100px;\r\n            }\r\n\r\n            .model-actions {\r\n                display: flex;\r\n                gap: 8px;\r\n                margin-top: 16px;\r\n                justify-content: flex-end;\r\n            }\r\n\r\n            .model-default-badge {\r\n                background-color: var(--vscode-button-background);\r\n                color: var(--vscode-button-foreground);\r\n                padding: 2px 6px;\r\n                border-radius: 4px;\r\n                font-size: 10px;\r\n                position: absolute;\r\n                top: 12px;\r\n                right: 12px;\r\n            }\r\n\r\n            .model-edit-form {\r\n                border: 1px solid var(--vscode-button-background);\r\n                border-radius: 4px;\r\n                padding: 15px;\r\n                margin-top: 15px;\r\n                margin-bottom: 15px;\r\n                background-color: var(--vscode-sideBar-background);\r\n            }\r\n\r\n            .add-button {\r\n                background-color: var(--vscode-button-background);\r\n                color: var(--vscode-button-foreground);\r\n                border: none;\r\n                padding: 8px 12px;\r\n                border-radius: 4px;\r\n                cursor: pointer;\r\n                font-size: 12px;\r\n                margin-top: 10px;\r\n            }\r\n\r\n            .edit-button, .delete-button, .set-default-button {\r\n                padding: 6px 10px;\r\n                cursor: pointer;\r\n                font-size: 12px;\r\n                border-radius: 4px;\r\n                border: 1px solid var(--vscode-button-background);\r\n            }\r\n\r\n            .edit-button {\r\n                background-color: var(--vscode-button-secondaryBackground);\r\n                color: var(--vscode-button-secondaryForeground);\r\n            }\r\n\r\n            .delete-button {\r\n                background-color: var(--vscode-errorForeground);\r\n                color: white;\r\n            }\r\n            \r\n            .set-default-button {\r\n                background-color: var(--vscode-button-background);\r\n                color: var(--vscode-button-foreground);\r\n            }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div class=\"settings-container\">\r\n            <div class=\"tab-container\">\r\n                <button class=\"tab active\" data-tab=\"user-info\">User Info</button>\r\n                <button class=\"tab\" data-tab=\"plugin-settings\">Plugin Settings</button>\r\n                <button class=\"tab\" data-tab=\"api-endpoints\">API Endpoints</button>\r\n                <button class=\"tab\" data-tab=\"llm-settings\">LLM Settings</button>\r\n            </div>\r\n            \r\n            <!-- User Information Tab -->\r\n            <div class=\"tab-content active\" id=\"user-info\">\r\n                <div class=\"section-title\">Basic Information</div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"displayName\">Display Name</label>\r\n                    <input type=\"text\" id=\"displayName\" placeholder=\"Your display name\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" placeholder=\"Your email address\">\r\n                </div>\r\n                \r\n                <div class=\"section-title\">Git Information</div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"gitUsername\">Git Username</label>\r\n                    <input type=\"text\" id=\"gitUsername\" placeholder=\"Your Git username\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"gitEmail\">Git Email</label>\r\n                    <input type=\"email\" id=\"gitEmail\" placeholder=\"Your Git email\">\r\n                </div>\r\n                \r\n                <div class=\"section-title\">SWDP Information</div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"swdpUsername\">SWDP Username</label>\r\n                    <input type=\"text\" id=\"swdpUsername\" placeholder=\"Your SWDP username\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"swdpTeam\">SWDP Team</label>\r\n                    <input type=\"text\" id=\"swdpTeam\" placeholder=\"Your SWDP team\">\r\n                </div>\r\n                \r\n                <div class=\"button-container\">\r\n                    <button id=\"saveUserInfo\">Save</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <!-- Plugin Settings Tab -->\r\n            <div class=\"tab-content\" id=\"plugin-settings\">\r\n                <div class=\"section-title\">Installed Plugins</div>\r\n                <div class=\"plugin-list\" id=\"pluginList\">\r\n                    <!-- Dynamically populated -->\r\n                </div>\r\n                \r\n                <div class=\"section-title\">Add New Plugin</div>\r\n                <div class=\"add-plugin-form\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"pluginId\">Plugin ID</label>\r\n                        <input type=\"text\" id=\"pluginId\" placeholder=\"Unique plugin identifier\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"pluginName\">Plugin Name</label>\r\n                        <input type=\"text\" id=\"pluginName\" placeholder=\"Human-readable name\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"pluginType\">Type</label>\r\n                        <select id=\"pluginType\">\r\n                            <option value=\"internal\">Internal</option>\r\n                            <option value=\"external\">External</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"pluginSettings\">Plugin Settings (JSON)</label>\r\n                        <textarea id=\"pluginSettings\" rows=\"4\" placeholder='{\"key\": \"value\"}'></textarea>\r\n                    </div>\r\n                    <div class=\"button-container\">\r\n                        <button id=\"addPlugin\">Add Plugin</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"button-container\">\r\n                    <button id=\"savePluginSettings\">Save All</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <!-- API Endpoints Tab -->\r\n            <div class=\"tab-content\" id=\"api-endpoints\">\r\n                <div class=\"section-title\">API Endpoint Configuration</div>\r\n                <p class=\"info-text\">Configure API endpoints for various services used by APE. These settings will override the default endpoints.</p>\r\n                \r\n                <div class=\"endpoint-group\">\r\n                    <div class=\"endpoint-title\">LLM Endpoint</div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"llmEndpoint\">URL</label>\r\n                        <input type=\"text\" id=\"llmEndpoint\" placeholder=\"https:\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"endpoint-group\">\r\n                    <div class=\"endpoint-title\">Git API Endpoint</div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"gitApiEndpoint\">URL</label>\r\n                        <input type=\"text\" id=\"gitApiEndpoint\" placeholder=\"https:\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"endpoint-group\">\r\n                    <div class=\"endpoint-title\">Jira API Endpoint</div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"jiraApiEndpoint\">URL</label>\r\n                        <input type=\"text\" id=\"jiraApiEndpoint\" placeholder=\"https:\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"endpoint-group\">\r\n                    <div class=\"endpoint-title\">SWDP API Endpoint</div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"swdpApiEndpoint\">URL</label>\r\n                        <input type=\"text\" id=\"swdpApiEndpoint\" placeholder=\"https:\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"endpoint-group\">\r\n                    <div class=\"endpoint-title\">Pocket API Endpoint</div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"pocketApiEndpoint\">URL</label>\r\n                        <input type=\"text\" id=\"pocketApiEndpoint\" placeholder=\"https:\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"button-container\">\r\n                    <button id=\"saveApiEndpoints\">Save Endpoints</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <!-- LLM Settings Tab -->\r\n            <div class=\"tab-content\" id=\"llm-settings\">\r\n                <div class=\"section-title\">\uBAA8\uB378 \uAE30\uBCF8 \uC124\uC815</div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"defaultModel\">\uAE30\uBCF8 \uBAA8\uB378 \uC120\uD0DD</label>\r\n                    <select id=\"defaultModel\">\r\n                        <!-- \uB3D9\uC801\uC73C\uB85C \uC0DD\uC131\uB428 -->\r\n                    </select>\r\n                    <p class=\"info-text\">\uCC44\uD305\uCC3D\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uAE30\uBCF8 \uBAA8\uB378\uC744 \uC120\uD0DD\uD569\uB2C8\uB2E4</p>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                    <label for=\"supportsStreaming\">\uC2A4\uD2B8\uB9AC\uBC0D \uC9C0\uC6D0</label>\r\n                    <input type=\"checkbox\" id=\"supportsStreaming\"> \r\n                    <span class=\"info-text\">\uC2A4\uD2B8\uB9AC\uBC0D \uC751\uB2F5\uC744 \uC9C0\uC6D0\uD569\uB2C8\uB2E4.</span>\r\n                </div>\r\n                \r\n                <div class=\"section-title\">\uBAA8\uB378 \uAD00\uB9AC</div>\r\n                <div class=\"form-group\">\r\n                    <p class=\"info-text\">\uB0B4\uBD80\uB9DD \uBC0F \uC678\uBD80\uB9DD LLM \uBAA8\uB378\uC744 \uAD00\uB9AC\uD569\uB2C8\uB2E4. \uC5EC\uAE30\uC11C \uCD94\uAC00\uD55C \uBAA8\uB378\uC740 \uCC44\uD305\uCC3D\uC758 \uBAA8\uB378 \uC120\uD0DD\uAE30\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                    <button id=\"addModelBtn\" class=\"add-button\">\uC0C8 \uBAA8\uB378 \uCD94\uAC00</button>\r\n                </div>\r\n                \r\n                <div class=\"models-grid\" id=\"models-container\">\r\n                    <!-- \uB3D9\uC801\uC73C\uB85C \uC0DD\uC131\uB428 -->\r\n                </div>\r\n                \r\n                <div id=\"modelEditForm\" style=\"display: none;\" class=\"model-edit-form\">\r\n                    <div class=\"section-title\">\uBAA8\uB378 \uC124\uC815 \uD3B8\uC9D1</div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelId\">\uBAA8\uB378 ID</label>\r\n                        <input type=\"text\" id=\"modelId\" placeholder=\"\uBAA8\uB378 \uC2DD\uBCC4\uC790\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelName\">\uBAA8\uB378 \uC774\uB984</label>\r\n                        <input type=\"text\" id=\"modelName\" placeholder=\"\uD45C\uC2DC \uC774\uB984\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelProvider\">\uC81C\uACF5\uC790</label>\r\n                        <select id=\"modelProvider\">\r\n                            <option value=\"custom\">\uB0B4\uBD80\uB9DD (Custom)</option>\r\n                            <option value=\"openrouter\">OpenRouter (\uC678\uBD80 \uD14C\uC2A4\uD2B8\uC6A9)</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelApiUrl\">API URL</label>\r\n                        <input type=\"text\" id=\"modelApiUrl\" placeholder=\"https:\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelApiModel\">API \uBAA8\uB378 \uBA85\uCE6D</label>\r\n                        <input type=\"text\" id=\"modelApiModel\" placeholder=\"\uBAA8\uB378 \uC9C0\uC815\uC790 (\uC120\uD0DD\uC0AC\uD56D)\">\r\n                        <p class=\"info-text\">\uC77C\uBD80 API\uC5D0\uC11C\uB9CC \uD544\uC694\uD569\uB2C8\uB2E4</p>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelContextWindow\">\uCF58\uD14D\uC2A4\uD2B8 \uC708\uB3C4\uC6B0</label>\r\n                        <input type=\"number\" id=\"modelContextWindow\" placeholder=\"32000\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelMaxTokens\">\uCD5C\uB300 \uD1A0\uD070</label>\r\n                        <input type=\"number\" id=\"modelMaxTokens\" placeholder=\"8192\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelSystemPrompt\">\uC2DC\uC2A4\uD15C \uD504\uB86C\uD504\uD2B8</label>\r\n                        <textarea id=\"modelSystemPrompt\" rows=\"3\" placeholder=\"\uAE30\uBCF8 \uC2DC\uC2A4\uD15C \uD504\uB86C\uD504\uD2B8\"></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelHeadersJson\">HTTP \uD5E4\uB354 (JSON)</label>\r\n                        <textarea id=\"modelHeadersJson\" rows=\"3\" placeholder='{\"x-api-key\": \"API_KEY\"}'></textarea>\r\n                        <p class=\"info-text\">\uB0B4\uBD80\uB9DD API\uC5D0 \uD544\uC694\uD55C \uCD94\uAC00 \uD5E4\uB354\uB97C JSON \uD615\uC2DD\uC73C\uB85C \uC785\uB825\uD558\uC138\uC694</p>\r\n                    </div>\r\n                    <div class=\"button-container\">\r\n                        <button id=\"saveModelBtn\">\uC800\uC7A5</button>\r\n                        <button id=\"cancelModelBtn\">\uCDE8\uC18C</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                    <label for=\"temperature\">Temperature</label>\r\n                    <div class=\"slider-container\">\r\n                        <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value=\"0.7\" class=\"slider\" id=\"temperature\">\r\n                        <span class=\"slider-value\" id=\"temperatureValue\">0.7</span>\r\n                    </div>\r\n                    <p class=\"info-text\">Lower values make responses more deterministic, higher values more creative.</p>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                    <label for=\"maxTokens\">Max Tokens</label>\r\n                    <div class=\"two-column\">\r\n                        <input type=\"number\" id=\"maxTokens\" min=\"100\" max=\"100000\" step=\"100\" value=\"4000\">\r\n                    </div>\r\n                    <p class=\"info-text\">Maximum number of tokens to generate in the response.</p>\r\n                </div>\r\n                \r\n                <div class=\"button-container\">\r\n                    <button id=\"saveLlmSettings\">Save Settings</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <script>\r\n            (function() {\r\n                \r\n                const tabs = document.querySelectorAll('.tab');\r\n                const tabContents = document.querySelectorAll('.tab-content');\r\n                \r\n                tabs.forEach(tab => {\r\n                    tab.addEventListener('click', () => {\r\n                        const tabId = tab.getAttribute('data-tab');\r\n                        \r\n                        \r\n                        tabs.forEach(t => t.classList.remove('active'));\r\n                        tabContents.forEach(c => c.classList.remove('active'));\r\n                        \r\n                        \r\n                        tab.classList.add('active');\r\n                        document.getElementById(tabId).classList.add('active');\r\n                    });\r\n                });\r\n                \r\n                \r\n                const temperatureSlider = document.getElementById('temperature');\r\n                const temperatureValue = document.getElementById('temperatureValue');\r\n                \r\n                temperatureSlider.addEventListener('input', () => {\r\n                    temperatureValue.textContent = temperatureSlider.value;\r\n                });\r\n                \r\n                \r\n                const toggleButtons = document.querySelectorAll('.toggle-visibility');\r\n                \r\n                toggleButtons.forEach(button => {\r\n                    button.addEventListener('click', () => {\r\n                        const targetId = button.getAttribute('data-target');\r\n                        const inputField = document.getElementById(targetId);\r\n                        \r\n                        if (inputField.type === 'password') {\r\n                            inputField.type = 'text';\r\n                            button.textContent = 'Hide';\r\n                        } else {\r\n                            inputField.type = 'password';\r\n                            button.textContent = 'Show';\r\n                        }\r\n                    });\r\n                });\r\n                \r\n                \r\n                function renderPluginList(plugins = []) {\r\n                    const pluginList = document.getElementById('pluginList');\r\n                    pluginList.innerHTML = '';\r\n                    \r\n                    if (plugins.length === 0) {\r\n                        pluginList.innerHTML = '<div class=\"plugin-item\">No plugins installed</div>';\r\n                        return;\r\n                    }\r\n                    \r\n                    plugins.forEach(plugin => {\r\n                        const pluginItem = document.createElement('div');\r\n                        pluginItem.className = 'plugin-item';\r\n                        pluginItem.innerHTML = \\`\r\n                            <div class=\"plugin-info\">\r\n                                <span class=\"plugin-name\">\\${plugin.name}</span>\r\n                                <span class=\"plugin-type\">\\${plugin.type} plugin</span>\r\n                            </div>\r\n                            <div class=\"plugin-actions\">\r\n                                <input type=\"checkbox\" class=\"plugin-toggle\" data-id=\"\\${plugin.id}\" \\${plugin.enabled ? 'checked' : ''}>\r\n                                <button class=\"remove-plugin\" data-id=\"\\${plugin.id}\">Remove</button>\r\n                            </div>\r\n                        \\`;\r\n                        \r\n                        pluginList.appendChild(pluginItem);\r\n                    });\r\n                    \r\n                    \r\n                    document.querySelectorAll('.plugin-toggle').forEach(toggle => {\r\n                        toggle.addEventListener('change', (e) => {\r\n                            const pluginId = e.target.getAttribute('data-id');\r\n                            const pluginIndex = plugins.findIndex(p => p.id === pluginId);\r\n                            \r\n                            if (pluginIndex !== -1) {\r\n                                plugins[pluginIndex].enabled = e.target.checked;\r\n                            }\r\n                        });\r\n                    });\r\n                    \r\n                    document.querySelectorAll('.remove-plugin').forEach(button => {\r\n                        button.addEventListener('click', (e) => {\r\n                            const pluginId = e.target.getAttribute('data-id');\r\n                            \r\n                            vscode.postMessage({\r\n                                command: 'removePlugin',\r\n                                pluginId: pluginId\r\n                            });\r\n                        });\r\n                    });\r\n                }\r\n                \r\n                \r\n                document.getElementById('addPlugin').addEventListener('click', () => {\r\n                    const id = document.getElementById('pluginId').value.trim();\r\n                    const name = document.getElementById('pluginName').value.trim();\r\n                    const type = document.getElementById('pluginType').value;\r\n                    let settings = {};\r\n                    \r\n                    try {\r\n                        const settingsText = document.getElementById('pluginSettings').value.trim();\r\n                        if (settingsText) {\r\n                            settings = JSON.parse(settingsText);\r\n                        }\r\n                    } catch (e) {\r\n                        vscode.postMessage({\r\n                            command: 'showError',\r\n                            message: 'Invalid JSON in plugin settings'\r\n                        });\r\n                        return;\r\n                    }\r\n                    \r\n                    if (!id || !name) {\r\n                        vscode.postMessage({\r\n                            command: 'showError',\r\n                            message: 'Plugin ID and name are required'\r\n                        });\r\n                        return;\r\n                    }\r\n                    \r\n                    vscode.postMessage({\r\n                        command: 'addPlugin',\r\n                        pluginInfo: {\r\n                            id,\r\n                            name,\r\n                            type,\r\n                            settings\r\n                        }\r\n                    });\r\n                    \r\n                    \r\n                    document.getElementById('pluginId').value = '';\r\n                    document.getElementById('pluginName').value = '';\r\n                    document.getElementById('pluginSettings').value = '';\r\n                });\r\n                \r\n                \r\n                document.getElementById('saveUserInfo').addEventListener('click', () => {\r\n                    vscode.postMessage({\r\n                        command: 'saveUserInfo',\r\n                        userInfo: {\r\n                            displayName: document.getElementById('displayName').value,\r\n                            email: document.getElementById('email').value,\r\n                            gitUsername: document.getElementById('gitUsername').value,\r\n                            gitEmail: document.getElementById('gitEmail').value,\r\n                            swdpUsername: document.getElementById('swdpUsername').value,\r\n                            swdpTeam: document.getElementById('swdpTeam').value\r\n                        }\r\n                    });\r\n                });\r\n                \r\n                \r\n                document.getElementById('savePluginSettings').addEventListener('click', () => {\r\n                    \r\n                    const plugins = [];\r\n                    document.querySelectorAll('.plugin-item').forEach(item => {\r\n                        const nameElement = item.querySelector('.plugin-name');\r\n                        const typeElement = item.querySelector('.plugin-type');\r\n                        const toggleElement = item.querySelector('.plugin-toggle');\r\n                        \r\n                        if (nameElement && typeElement && toggleElement) {\r\n                            plugins.push({\r\n                                id: toggleElement.getAttribute('data-id'),\r\n                                name: nameElement.textContent,\r\n                                type: typeElement.textContent.replace(' plugin', ''),\r\n                                enabled: toggleElement.checked\r\n                            });\r\n                        }\r\n                    });\r\n                    \r\n                    vscode.postMessage({\r\n                        command: 'savePluginSettings',\r\n                        pluginSettings: plugins\r\n                    });\r\n                });\r\n                \r\n                \r\n                document.getElementById('saveApiEndpoints').addEventListener('click', () => {\r\n                    vscode.postMessage({\r\n                        command: 'saveApiEndpoints',\r\n                        apiEndpoints: {\r\n                            llmEndpoint: document.getElementById('llmEndpoint').value,\r\n                            gitApiEndpoint: document.getElementById('gitApiEndpoint').value,\r\n                            jiraApiEndpoint: document.getElementById('jiraApiEndpoint').value,\r\n                            swdpApiEndpoint: document.getElementById('swdpApiEndpoint').value,\r\n                            pocketApiEndpoint: document.getElementById('pocketApiEndpoint').value\r\n                        }\r\n                    });\r\n                });\r\n                \r\n                \r\n                document.getElementById('saveLlmSettings').addEventListener('click', () => {\r\n                    \r\n                    const openRouterKeyElement = document.getElementById('openRouterApiKey');\r\n                    const openRouterKey = openRouterKeyElement ? openRouterKeyElement.value : '';\r\n\r\n                    vscode.postMessage({\r\n                        command: 'saveLlmSettings',\r\n                        llmSettings: {\r\n                            defaultModel: document.getElementById('defaultModel').value,\r\n                            \r\n                            openRouterApiKey: openRouterKey,\r\n                            supportsStreaming: document.getElementById('supportsStreaming').checked,\r\n                            temperature: parseFloat(document.getElementById('temperature').value),\r\n                            maxTokens: parseInt(document.getElementById('maxTokens').value)\r\n                        }\r\n                    });\r\n                });\r\n                \r\n                \r\n                \r\n                let currentModels = {};\r\n                let editingModelId = null;\r\n                \r\n                \r\n                function renderModelsList(models) {\r\n                    const modelsContainer = document.getElementById('models-container');\r\n                    modelsContainer.innerHTML = '';\r\n                    currentModels = models || {};\r\n                    \r\n                    \r\n                    const defaultModelId = document.getElementById('defaultModel').value;\r\n                    \r\n                    if (Object.keys(models).length === 0) {\r\n                        modelsContainer.innerHTML = '<div class=\"info-text\" style=\"grid-column: 1/-1; padding: 20px; text-align: center;\">\uB4F1\uB85D\uB41C \uBAA8\uB378\uC774 \uC5C6\uC2B5\uB2C8\uB2E4. \"\uC0C8 \uBAA8\uB378 \uCD94\uAC00\" \uBC84\uD2BC\uC744 \uD074\uB9AD\uD558\uC5EC \uBAA8\uB378\uC744 \uCD94\uAC00\uD558\uC138\uC694.</div>';\r\n                        return;\r\n                    }\r\n                    \r\n                    for (const [modelId, model] of Object.entries(models)) {\r\n                        const modelItem = document.createElement('div');\r\n                        modelItem.className = 'model-item';\r\n                        modelItem.dataset.id = modelId;\r\n                        \r\n                        const provider = model.provider || 'custom';\r\n                        const isInternal = provider === 'custom';\r\n                        const providerLabel = isInternal ? '\uB0B4\uBD80\uB9DD' : 'OpenRouter';\r\n                        const providerClass = isInternal ? 'internal' : 'external';\r\n                        \r\n                        const modelName = model.name || modelId;\r\n                        const modelApiUrl = model.apiUrl || '\uC9C0\uC815\uB418\uC9C0 \uC54A\uC74C';\r\n                        const contextWindow = model.contextWindow || 'N/A';\r\n                        const maxTokens = model.maxTokens || 'N/A';\r\n                        \r\n                        \r\n                        let systemPromptDisplay = 'N/A';\r\n                        if (model.systemPrompt) {\r\n                            const promptText = model.systemPrompt;\r\n                            systemPromptDisplay = promptText.length > 50 ? \r\n                                promptText.substring(0, 50) + '...' : promptText;\r\n                        }\r\n                        \r\n                        \r\n                        let headersDisplay = '';\r\n                        if (model.headers) {\r\n                            const headersText = JSON.stringify(model.headers);\r\n                            const truncated = headersText.length > 30 ? \r\n                                headersText.substring(0, 30) + '...' : headersText;\r\n                            headersDisplay = '<div><span class=\"model-detail-label\">\uD5E4\uB354:</span> ' + truncated + '</div>';\r\n                        }\r\n                        \r\n                        \r\n                        let apiModelDisplay = '';\r\n                        if (model.apiModel) {\r\n                            apiModelDisplay = '<div><span class=\"model-detail-label\">API \uBAA8\uB378:</span> ' + model.apiModel + '</div>';\r\n                        }\r\n                        \r\n                        \r\n                        const isDefault = modelId === defaultModelId;\r\n                        const defaultBadge = isDefault ? \r\n                            '<div class=\"model-default-badge\">\uAE30\uBCF8 \uBAA8\uB378</div>' : '';\r\n                        \r\n                        modelItem.innerHTML = \r\n                            defaultBadge +\r\n                            '<div class=\"model-item-header\">' +\r\n                            '  <div>' +\r\n                            '    <div class=\"model-name\">' + modelName + '</div>' +\r\n                            '    <div class=\"model-provider ' + providerClass + '\">' + providerLabel + '</div>' +\r\n                            '    <div style=\"font-size: 11px; opacity: 0.7;\">ID: ' + modelId + '</div>' +\r\n                            '  </div>' +\r\n                            '</div>' +\r\n                            '<div class=\"model-details\">' +\r\n                            '  <div><span class=\"model-detail-label\">API URL:</span> ' + modelApiUrl + '</div>' +\r\n                            apiModelDisplay +\r\n                            '  <div><span class=\"model-detail-label\">\uCF58\uD14D\uC2A4\uD2B8 \uC708\uB3C4\uC6B0:</span> ' + contextWindow + '</div>' +\r\n                            '  <div><span class=\"model-detail-label\">\uCD5C\uB300 \uD1A0\uD070:</span> ' + maxTokens + '</div>' +\r\n                            '  <div><span class=\"model-detail-label\">\uC2DC\uC2A4\uD15C \uD504\uB86C\uD504\uD2B8:</span> ' + systemPromptDisplay + '</div>' +\r\n                            headersDisplay +\r\n                            '</div>' +\r\n                            '<div class=\"model-actions\">' +\r\n                            '  <button class=\"edit-button\" data-id=\"' + modelId + '\">\uD3B8\uC9D1</button>' +\r\n                            '  <button class=\"delete-button\" data-id=\"' + modelId + '\">\uC0AD\uC81C</button>' +\r\n                            '  ' + (isDefault ? '' : '<button class=\"set-default-button\" data-id=\"' + modelId + '\">\uAE30\uBCF8 \uBAA8\uB378\uB85C \uC124\uC815</button>') +\r\n                            '</div>';\r\n                        \r\n                        modelsContainer.appendChild(modelItem);\r\n                    }\r\n                    \r\n                    \r\n                    document.querySelectorAll('.edit-button').forEach(button => {\r\n                        button.addEventListener('click', (e) => {\r\n                            const modelId = e.target.getAttribute('data-id');\r\n                            openModelEditForm(modelId, currentModels[modelId]);\r\n                        });\r\n                    });\r\n                    \r\n                    \r\n                    document.querySelectorAll('.delete-button').forEach(button => {\r\n                        button.addEventListener('click', (e) => {\r\n                            const modelId = e.target.getAttribute('data-id');\r\n                            const modelName = currentModels[modelId] ? (currentModels[modelId].name || modelId) : modelId;\r\n                            if (confirm('\uC815\uB9D0\uB85C \"' + modelName + '\" \uBAA8\uB378\uC744 \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?')) {\r\n                                deleteModel(modelId);\r\n                            }\r\n                        });\r\n                    });\r\n                    \r\n                    \r\n                    document.querySelectorAll('.set-default-button').forEach(button => {\r\n                        button.addEventListener('click', (e) => {\r\n                            const modelId = e.target.getAttribute('data-id');\r\n                            document.getElementById('defaultModel').value = modelId;\r\n                            \r\n                            \r\n                            vscode.postMessage({\r\n                                command: 'saveLlmSettings',\r\n                                llmSettings: {\r\n                                    defaultModel: modelId,\r\n                                    openRouterApiKey: document.getElementById('openRouterApiKey').value,\r\n                                    supportsStreaming: document.getElementById('supportsStreaming').checked,\r\n                                    temperature: parseFloat(document.getElementById('temperature').value),\r\n                                    maxTokens: parseInt(document.getElementById('maxTokens').value)\r\n                                }\r\n                            });\r\n                            \r\n                            \r\n                            renderModelsList(currentModels);\r\n                        });\r\n                    });\r\n                }\r\n                \r\n                \r\n                function openModelEditForm(modelId, model) {\r\n                    const form = document.getElementById('modelEditForm');\r\n                    editingModelId = modelId;\r\n                    \r\n                    \r\n                    document.getElementById('modelId').value = modelId || '';\r\n                    document.getElementById('modelId').disabled = !!modelId;  \r\n                    document.getElementById('modelName').value = model?.name || '';\r\n                    document.getElementById('modelProvider').value = model?.provider || 'custom';\r\n                    document.getElementById('modelApiUrl').value = model?.apiUrl || '';\r\n                    document.getElementById('modelApiModel').value = model?.apiModel || '';\r\n                    document.getElementById('modelContextWindow').value = model?.contextWindow || 32000;\r\n                    document.getElementById('modelMaxTokens').value = model?.maxTokens || 8192;\r\n                    document.getElementById('modelSystemPrompt').value = model?.systemPrompt || '';\r\n                    document.getElementById('modelHeadersJson').value = model?.headers ? JSON.stringify(model.headers, null, 2) : '';\r\n                    \r\n                    \r\n                    form.style.display = 'block';\r\n                    document.getElementById('modelId').focus();\r\n                }\r\n                \r\n                \r\n                function saveModel() {\r\n                    try {\r\n                        const modelId = document.getElementById('modelId').value.trim();\r\n                        \r\n                        if (!modelId) {\r\n                            alert('\uBAA8\uB378 ID\uB294 \uD544\uC218\uC785\uB2C8\uB2E4.');\r\n                            return;\r\n                        }\r\n                        \r\n                        \r\n                        const model = {\r\n                            name: document.getElementById('modelName').value.trim() || modelId,\r\n                            provider: document.getElementById('modelProvider').value,\r\n                            apiUrl: document.getElementById('modelApiUrl').value.trim(),\r\n                            contextWindow: parseInt(document.getElementById('modelContextWindow').value) || 32000,\r\n                            maxTokens: parseInt(document.getElementById('modelMaxTokens').value) || 8192,\r\n                            systemPrompt: document.getElementById('modelSystemPrompt').value.trim()\r\n                        };\r\n                        \r\n                        \r\n                        const apiModel = document.getElementById('modelApiModel').value.trim();\r\n                        if (apiModel) {\r\n                            model.apiModel = apiModel;\r\n                        }\r\n                        \r\n                        \r\n                        const headersJson = document.getElementById('modelHeadersJson').value.trim();\r\n                        if (headersJson) {\r\n                            try {\r\n                                model.headers = JSON.parse(headersJson);\r\n                            } catch (e) {\r\n                                alert('HTTP \uD5E4\uB354 JSON \uD615\uC2DD\uC774 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.');\r\n                                return;\r\n                            }\r\n                        }\r\n                        \r\n                        \r\n                        const updatedModels = { ...currentModels };\r\n                        \r\n                        \r\n                        if (editingModelId && editingModelId !== modelId) {\r\n                            \r\n                            delete updatedModels[editingModelId];\r\n                            updatedModels[modelId] = model;\r\n                        } else {\r\n                            \r\n                            updatedModels[modelId] = model;\r\n                        }\r\n                        \r\n                        \r\n                        vscode.postMessage({\r\n                            command: 'saveModels',\r\n                            models: updatedModels\r\n                        });\r\n                        \r\n                        \r\n                        closeModelEditForm();\r\n                    } catch (error) {\r\n                        alert('\uBAA8\uB378 \uC800\uC7A5 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ' + error.message);\r\n                    }\r\n                }\r\n                \r\n                \r\n                function deleteModel(modelId) {\r\n                    if (!modelId || !currentModels[modelId]) return;\r\n                    \r\n                    \r\n                    const updatedModels = { ...currentModels };\r\n                    delete updatedModels[modelId];\r\n                    \r\n                    \r\n                    vscode.postMessage({\r\n                        command: 'saveModels',\r\n                        models: updatedModels\r\n                    });\r\n                }\r\n                \r\n                \r\n                function closeModelEditForm() {\r\n                    document.getElementById('modelEditForm').style.display = 'none';\r\n                    editingModelId = null;\r\n                }\r\n                \r\n                \r\n                document.getElementById('addModelBtn').addEventListener('click', () => {\r\n                    openModelEditForm(null, null);\r\n                });\r\n                \r\n                \r\n                document.getElementById('saveModelBtn').addEventListener('click', saveModel);\r\n                \r\n                \r\n                document.getElementById('cancelModelBtn').addEventListener('click', closeModelEditForm);\r\n                \r\n                window.addEventListener('message', event => {\r\n                    const message = event.data;\r\n                    \r\n                    switch (message.command) {\r\n                        case 'updateSettings':\r\n                            \r\n                            const userInfo = message.settings.userInfo;\r\n                            document.getElementById('displayName').value = userInfo.displayName || '';\r\n                            document.getElementById('email').value = userInfo.email || '';\r\n                            document.getElementById('gitUsername').value = userInfo.gitUsername || '';\r\n                            document.getElementById('gitEmail').value = userInfo.gitEmail || '';\r\n                            document.getElementById('swdpUsername').value = userInfo.swdpUsername || '';\r\n                            document.getElementById('swdpTeam').value = userInfo.swdpTeam || '';\r\n                            \r\n                            \r\n                            renderPluginList(message.settings.pluginSettings);\r\n                            \r\n                            \r\n                            const apiEndpoints = message.settings.apiEndpoints;\r\n                            document.getElementById('llmEndpoint').value = apiEndpoints.llmEndpoint || '';\r\n                            document.getElementById('gitApiEndpoint').value = apiEndpoints.gitApiEndpoint || '';\r\n                            document.getElementById('jiraApiEndpoint').value = apiEndpoints.jiraApiEndpoint || '';\r\n                            document.getElementById('swdpApiEndpoint').value = apiEndpoints.swdpApiEndpoint || '';\r\n                            document.getElementById('pocketApiEndpoint').value = apiEndpoints.pocketApiEndpoint || '';\r\n                            \r\n                            \r\n                            const llmSettings = message.settings.llmSettings;\r\n                            const availableModels = message.settings.availableModels || {};\r\n                            \r\n                            \r\n                            const defaultModelSelect = document.getElementById('defaultModel');\r\n                            defaultModelSelect.innerHTML = ''; \r\n                            \r\n                            console.log('\uC6F9\uBDF0\uC5D0\uC11C \uBAA8\uB378 \uBAA9\uB85D:', availableModels);\r\n                            \r\n                            \r\n                            if (availableModels && Object.keys(availableModels).length > 0) {\r\n                                Object.keys(availableModels).forEach(modelId => {\r\n                                    const model = availableModels[modelId];\r\n                                    const option = document.createElement('option');\r\n                                    option.value = modelId;\r\n                                    option.textContent = model.name || modelId;\r\n                                    defaultModelSelect.appendChild(option);\r\n                                });\r\n                            } else {\r\n                                \r\n                                const option = document.createElement('option');\r\n                                option.value = '';\r\n                                option.textContent = '\uC124\uC815\uB41C \uBAA8\uB378 \uC5C6\uC74C';\r\n                                defaultModelSelect.appendChild(option);\r\n                                console.warn('\uBAA8\uB378 \uBAA9\uB85D\uC774 \uBE44\uC5B4\uC788\uC2B5\uB2C8\uB2E4');\r\n                            }\r\n                            \r\n                            \r\n                            defaultModelSelect.value = llmSettings.defaultModel || '';\r\n                            \r\n                            \r\n                            renderModelsList(availableModels);\r\n                            \r\n                            \r\n                            \r\n                            if (document.getElementById('openRouterApiKey')) {\r\n                              document.getElementById('openRouterApiKey').value = llmSettings.openRouterApiKey || '';\r\n                            }\r\n                            \r\n                            \r\n                            document.getElementById('supportsStreaming').checked = llmSettings.supportsStreaming || false;\r\n                            \r\n                            \r\n                            const temperature = llmSettings.temperature || 0.7;\r\n                            document.getElementById('temperature').value = temperature;\r\n                            document.getElementById('temperatureValue').textContent = temperature;\r\n                            \r\n                            \r\n                            document.getElementById('maxTokens').value = llmSettings.maxTokens || 4000;\r\n                            break;\r\n                    }\r\n                });\r\n                \r\n                \r\n                vscode.postMessage({\r\n                    command: 'getSettings'\r\n                });\r\n                \r\n                \r\n                const vscode = acquireVsCodeApi();\r\n            })();\r\n        </script>\r\n    </body>\r\n    </html>`;\r\n  }\r\n}"],
  "mappings": "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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A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",
  "names": ["module", "vscode", "import_events", "CommandDomain", "domain", "commands", "commands", "vscode", "LogLevel", "import_events", "import_events", "commands", "coreService", "jiraContext", "vscode", "vscode", "https", "url", "request", "result", "vscode", "import_events", "vscode", "fs", "path", "import_events", "build", "result", "import_events", "result", "taskIdMatch", "vscode", "fs", "coreService", "commands", "request", "vscode", "coreService", "chatService", "vscode", "fs", "path", "readdir", "stat", "mkdir", "writeFile", "unlink", "rmdir", "rename", "readdir", "stat", "mkdir", "writeFile", "unlink", "rmdir", "rename", "vscode", "path", "fs", "commands"]
}
