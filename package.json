{
  "name": "ape",
  "displayName": "APE - Agentic Pipeline Engine",
  "description": "VS Code용 통합 개발 워크플로우 허브",
  "version": "0.0.1",
  "publisher": "ape-team",
  "icon": "resources/icon/logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-repo/ape-extension.git"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.85.0",
    "node": ">=16.0.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onView:ape.chatView",
    "onView:ape.treeView",
    "onView:ape.settingsView",
    "onWebviewPanel:ape.welcomeView",
    "onWebviewPanel:ape.commandDetailView"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ape.openSettings",
        "title": "설정 열기",
        "category": "APE",
        "icon": "$(settings-gear)"
      },
      {
        "command": "ape.openSidebar",
        "title": "사이드바 열기",
        "category": "APE"
      },
      {
        "command": "ape.openChat",
        "title": "채팅 열기",
        "category": "APE"
      },
      {
        "command": "ape.openHybridChat",
        "title": "하이브리드 채팅 열기",
        "category": "APE"
      },
      {
        "command": "ape.toggleUIMode",
        "title": "UI 모드 전환 (표준/하이브리드)",
        "category": "APE"
      },
      {
        "command": "ape.clearChat",
        "title": "채팅 지우기",
        "category": "APE"
      },
      {
        "command": "ape.debug",
        "title": "디버그 정보 표시",
        "category": "APE"
      },
      {
        "command": "ape.showWelcome",
        "title": "시작 페이지 열기",
        "category": "APE"
      },
      {
        "command": "ape.refreshTreeView",
        "title": "트리뷰 새로고침",
        "category": "APE",
        "icon": "$(refresh)"
      },
      {
        "command": "ape.saveChatSession",
        "title": "현재 대화 저장",
        "category": "APE",
        "icon": "$(save)"
      },
      {
        "command": "ape.loadChatSession",
        "title": "대화 세션 불러오기",
        "category": "APE",
        "icon": "$(folder-opened)"
      },
      {
        "command": "ape.deleteChatSession",
        "title": "대화 세션 삭제",
        "category": "APE",
        "icon": "$(trash)"
      },
      {
        "command": "ape.clearAllHistory",
        "title": "모든 대화 기록 삭제",
        "category": "APE",
        "icon": "$(clear-all)"
      },
      {
        "command": "ape.showCommandDetails",
        "title": "명령어 세부정보 보기",
        "category": "APE"
      },
      {
        "command": "ape.testSwdpConnection",
        "title": "SWDP 연결 테스트",
        "category": "APE"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ape-sidebar",
          "title": "APE",
          "icon": "resources/icon/logo.png"
        }
      ]
    },
    "views": {
      "ape-sidebar": [
        {
          "id": "ape.treeView",
          "name": "APE 내비게이터",
          "icon": "resources/icon/logo.png"
        },
        {
          "id": "ape.chatView",
          "name": "APE 채팅",
          "type": "webview",
          "when": "ape:showChatView"
        }
      ]
    },
    "welcome": {
      "view": "ape.welcomeView"
    },
    "menus": {
      "view/title": [
        {
          "command": "ape.refreshTreeView",
          "when": "view == ape.treeView",
          "group": "navigation"
        },
        {
          "command": "ape.saveChatSession",
          "when": "view == ape.treeView",
          "group": "navigation"
        },
        {
          "command": "ape.clearAllHistory",
          "when": "view == ape.treeView",
          "group": "navigation"
        },
        {
          "command": "ape.openSettings",
          "when": "view == ape.treeView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "ape.loadChatSession",
          "when": "view == ape.treeView && viewItem == chatHistorySession",
          "group": "inline"
        },
        {
          "command": "ape.deleteChatSession",
          "when": "view == ape.treeView && viewItem == chatHistorySession",
          "group": "inline"
        },
        {
          "command": "ape.showCommandDetails",
          "when": "view == ape.treeView && viewItem == command",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "title": "APE",
      "properties": {
        "ape.uiMode": {
          "type": "string",
          "enum": [
            "standard",
            "hybrid"
          ],
          "default": "standard",
          "description": "APE UI 모드 (표준 또는 하이브리드)"
        },
        "ape.core.sslBypass": {
          "type": "boolean",
          "default": false,
          "description": "SSL 인증서 검증 우회 여부"
        },
        "ape.core.logLevel": {
          "type": "string",
          "enum": [
            "debug",
            "info",
            "warn",
            "error"
          ],
          "default": "info",
          "description": "로그 레벨"
        },
        "ape.core.allow.all": {
          "type": "boolean",
          "default": true,
          "description": "모든 권한 허용 여부"
        },
        "ape.llm.defaultModel": {
          "type": "string",
          "default": "narrans",
          "description": "기본 LLM 모델"
        },
        "ape.llm.supportsStreaming": {
          "type": "boolean",
          "default": true,
          "description": "스트리밍 응답 지원 여부"
        },
        "ape.swdp.enabled": {
          "type": "boolean",
          "default": true,
          "description": "SWDP 통합 기능 활성화 여부"
        },
        "ape.swdp.baseUrl": {
          "type": "string",
          "default": "http://localhost:8001",
          "description": "SWDP API 기본 URL (APE Core 서버 주소)"
        },
        "ape.swdp.defaultProject": {
          "type": "string",
          "description": "기본 SWDP 프로젝트 ID"
        },
        "ape.llm.models": {
          "type": "object",
          "description": "LLM 모델 설정",
          "default": {
            "narrans": {
              "name": "NARRANS (Default)",
              "provider": "custom",
              "apiUrl": "https://api-se-dev.narrans.samsungds.net/v1/chat/completions",
              "contextWindow": 10000,
              "maxTokens": 10000,
              "temperature": 0,
              "systemPrompt": "당신은 코딩과 개발을 도와주는 유능한 AI 어시스턴트입니다."
            },
            "llama-4-maverick": {
              "name": "Llama 4 Maverick",
              "provider": "custom",
              "apiUrl": "http://apigw-stg.samsungds.net:8000/llama4/1/llama/aiserving/llama-4/maverick/v1/chat/completions",
              "contextWindow": 50000,
              "maxTokens": 50000,
              "temperature": 0,
              "systemPrompt": "당신은 코딩과 개발을 도와주는 유능한 AI 어시스턴트입니다."
            },
            "llama-4-scout": {
              "name": "Llama 4 Scout",
              "provider": "custom",
              "apiUrl": "http://apigw-stg.samsungds.net:8000/llama4/1/llama/aiserving/llama-4/maverick/v1/chat/completions",
              "contextWindow": 50000,
              "maxTokens": 50000,
              "temperature": 0,
              "systemPrompt": "당신은 코딩과 개발을 도와주는 유능한 AI 어시스턴트입니다."
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "node esbuild.config.js",
    "watch": "node esbuild.config.js --watch",
    "package": "node esbuild.config.js --production",
    "test": "node ./tests/runTest.js",
    "build": "node esbuild.config.js --env=external",
    "build:internal": "node esbuild.config.js --env=internal",
    "build:external": "node esbuild.config.js --env=external",
    "build:clean": "node esbuild.config.js --clean --build",
    "build:analyze": "node esbuild.config.js --production --analyze",
    "build:prod": "node esbuild.config.js --production",
    "build:dev": "node esbuild.config.js --clean --build",
    "prebuild": "rimraf dist",
    "dev": "npm run watch",
    "dev:internal": "node esbuild.config.js --clean --env=internal && echo Internal mode ready - Press F5 to debug",
    "quick": "copy /Y extension.env.internal.js dist\\extension.env.js && copy /Y config\\internal\\settings.json dist\\settings.json && npm run build",
    "pretest": "npm run build",
    "typecheck": "tsc --noEmit"
  },
  "dependencies": {
    "@phosphor-icons/react": "^2.1.3",
    "@phosphor-icons/web": "^2.0.3"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "esbuild": "0.17.19",
    "esbuild-node-externals": "^1.8.0",
    "esbuild-plugin-copy": "^2.1.1",
    "esbuild-plugin-eslint": "0.3.6",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "rimraf": "^4.4.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.8.3"
  }
}